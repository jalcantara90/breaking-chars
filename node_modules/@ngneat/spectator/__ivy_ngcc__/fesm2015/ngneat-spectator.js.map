{"version":3,"file":"ngneat-spectator.js","sources":["../../../projects/spectator/src/lib/dom-selectors.ts","../../../projects/spectator/src/lib/types.ts","../../../projects/spectator/src/lib/internals/query.ts","../../../projects/spectator/src/lib/internals/key-parser.ts","../../../projects/spectator/src/lib/event-creators.ts","../../../projects/spectator/src/lib/dispatch-events.ts","../../../projects/spectator/src/lib/internals/element-focus.ts","../../../projects/spectator/src/lib/type-in-element.ts","../../../projects/spectator/src/lib/select-option.ts","../../../projects/spectator/src/lib/base/base-spectator.ts","../../../projects/spectator/src/lib/base/dom-spectator.ts","../../../projects/spectator/src/lib/spectator/spectator.ts","../../../projects/spectator/src/lib/internals/rgb-to-hex.ts","../../../projects/spectator/src/lib/utils.ts","../../../projects/spectator/src/lib/matchers.ts","../../../projects/spectator/src/lib/core.ts","../../../projects/spectator/src/lib/globals-injections.ts","../../../projects/spectator/src/lib/base/initial-module.ts","../../../projects/spectator/src/lib/spectator/initial-module.ts","../../../projects/spectator/src/lib/internals/merge.ts","../../../projects/spectator/src/lib/mock.ts","../../../projects/spectator/src/lib/base/options.ts","../../../projects/spectator/src/lib/spectator/options.ts","../../../projects/spectator/src/lib/spectator/create-factory.ts","../../../projects/spectator/src/lib/spectator-host/spectator-host.ts","../../../projects/spectator/src/lib/internals/node-by-directive.ts","../../../projects/spectator/src/lib/spectator-host/initial-module.ts","../../../projects/spectator/src/lib/spectator-host/host-component.ts","../../../projects/spectator/src/lib/spectator-host/options.ts","../../../projects/spectator/src/lib/spectator-host/create-factory.ts","../../../projects/spectator/src/lib/spectator-directive/spectator-directive.ts","../../../projects/spectator/src/lib/spectator-directive/initial-module.ts","../../../projects/spectator/src/lib/spectator-directive/options.ts","../../../projects/spectator/src/lib/spectator-directive/create-factory.ts","../../../projects/spectator/src/lib/spectator-service/spectator-service.ts","../../../projects/spectator/src/lib/spectator-service/initial-module.ts","../../../projects/spectator/src/lib/spectator-service/options.ts","../../../projects/spectator/src/lib/spectator-service/create-factory.ts","../../../projects/spectator/src/lib/spectator-routing/router-stub.ts","../../../projects/spectator/src/lib/spectator-routing/spectator-routing.ts","../../../projects/spectator/src/lib/spectator-routing/activated-route-stub.ts","../../../projects/spectator/src/lib/spectator-routing/router-link-stub.ts","../../../projects/spectator/src/lib/spectator-routing/initial-module.ts","../../../projects/spectator/src/lib/spectator-routing/options.ts","../../../projects/spectator/src/lib/spectator-routing/create-factory.ts","../../../projects/spectator/src/lib/spectator-http/spectator-http.ts","../../../projects/spectator/src/lib/spectator-http/initial-module.ts","../../../projects/spectator/src/lib/spectator-http/options.ts","../../../projects/spectator/src/lib/spectator-http/create-factory.ts","../../../projects/spectator/src/lib/spectator-pipe/spectator-pipe.ts","../../../projects/spectator/src/lib/spectator-pipe/initial-module.ts","../../../projects/spectator/src/lib/spectator-pipe/options.ts","../../../projects/spectator/src/lib/spectator-pipe/create-factory.ts","../../../projects/spectator/src/lib/deprecated.ts","../../../projects/spectator/src/public_api.ts","../../../projects/spectator/src/ngneat-spectator.ts"],"names":["DOMQueries"],"mappings":";;;;;;;;;;;;;;;MAca,WAAW;AACxB;AACE,IAAA,YAA4B,OAA2C;AAAI,QAA/C,YAAO,GAAP,OAAO,CAAoC;AAAC,KAAG;AAC7E,CAAC;AACD,MAGa,OAAO,GAAuB,CAAC,OAAO,EAAE,OAAO,KAC1D,IAAI,WAAW,CAAC,EAAE,IAAIA,OAAU,CAAC,mBAAmB,CAAC,EAAE,EAAE,OAAO,EAAE,OAAO,CAAC,EAAE;AAC9E,MACa,aAAa,GAAuB,CAAC,OAAO,EAAE,OAAO,KAChE,IAAI,WAAW,CAAC,EAAE,IAAIA,OAAU,CAAC,yBAAyB,CAAC,EAAE,EAAE,OAAO,EAAE,OAAO,CAAC,EAAE;AACpF,MACa,MAAM,GAA+C,CAAC,OAAO,EAAE,OAAO,KACjF,IAAI,WAAW,CAAC,EAAE,IAAIA,OAAU,CAAC,cAAc,CAAC,EAAE,EAAE,OAAO,EAAE,OAAO,CAAC,EAAE;AACzE,MACa,aAAa,GAAG,CAAC,OAAgB,EAAE,OAAyC;AAAO,IAC9F,IAAI,kBAA2B,CAAC;AAClC,IAAE,MAAM,UAAU,GAAiB,CAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU,KAAI,oBAAoB,CAAC,OAAO,CAAC,CAAC;AACxF,IAAE,MAAM,cAAc,GAAG,CAAC,IAAiB,eAAa,OAAA,UAAU,OAAC,IAAI,CAAC,WAAW,mCAAI,EAAE,CAAC,CAAA,EAAA,CAAC;AAC3F,IACE,IAAI,OAAO,OAAO,KAAK,QAAQ,EAAE;AACnC,QAAI,kBAAkB,GAAG,CAAC,CAAC,EAAE,IAAI;AACjC,YAAM,IAAI,CAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,KAAK,MAAK,KAAK,EAAE;AACpC,gBAAQ,QACE,cAAc,CAAC,IAAI,CAAC;AAC9B,qBAAa,WAAW,EAAE;AAC1B,qBAAa,OAAO,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,EACtC;AACV,aAAO;AACP,YACM,OAAO,cAAc,CAAC,IAAI,CAAC,KAAK,OAAO,CAAC;AAC9C,SAAK,CAAC;AACN,KAAG;AAAC,SAAK,IAAI,OAAO,YAAY,MAAM,EAAE;AACxC,QAAI,kBAAkB,GAAG,CAAC,CAAC,EAAE,IAAI,KAAK,OAAO,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC;AACzE,KAAG;AAAC,SAAK;AACT,QAAI,kBAAkB,GAAG,CAAC,CAAC,EAAE,IAAI,KAAK,OAAO,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC;AAC1E,KAAG;AACH,IACE,OAAO,IAAI,WAAW,CAAC,EAAE,IAAIA,OAAU,CAAC,cAAc,CAAC,EAAE,EAAE,kBAAkB,EAAE,OAAO,CAAC,CAAC,CAAC;AAC3F,EAAE;AACF,MACa,SAAS,GAAuB,CAAC,OAAO,EAAE,OAAO,KAC5D,IAAI,WAAW,CAAC,EAAE,IAAIA,OAAU,CAAC,iBAAiB,CAAC,EAAE,EAAE,OAAO,EAAE,OAAO,CAAC,EAAE;AAC5E,MACa,OAAO,GAAuB,CAAC,OAAO,EAAE,OAAO,KAAK,IAAI,WAAW,CAAC,EAAE,IAAIA,OAAU,CAAC,eAAe,CAAC,EAAE,EAAE,OAAO,EAAE,OAAO,CAAC,EAAE;AACzI,MACa,QAAQ,GAAuB,CAAC,OAAO,EAAE,OAAO,KAAK,IAAI,WAAW,CAAC,EAAE,IAAIA,OAAU,CAAC,gBAAgB,CAAC,EAAE,EAAE,OAAO,EAAE,OAAO,CAAC,EAAE;AAC3I,MACa,OAAO,GAAuB,CAAC,OAAO,EAAE,OAAO,KAC1D,IAAI,WAAW,CAAC,EAAE,IAAIA,OAAU,CAAC,sBAAsB,CAAC,EAAE,EAAE,OAAO,EAAE,OAAO,CAAC,EAAE;AACjF,MACa,MAAM,GAAsC,CAAC,OAAO,EAAE,OAAO,KACxE,IAAI,WAAW,CAAC,EAAE,IAAIA,OAAU,CAAC,cAAc,CAAC,EAAE,EAAE,OAAO,EAAE,OAAO,CAAC;AACvE;AAAC,SCrCe,8BAA8B,CAAI,aAAgB;AAAI,IACpE,OAAO,aAAa,IAAI,aAAa,IAAI,OAAO,aAAa,CAAC,aAAa,CAAC,KAAK,UAAU,CAAC;AAC9F,CAAC;AACD,SACgB,QAAQ,CAAC,KAAU;AAAI,IACrC,OAAO,OAAO,KAAK,KAAK,QAAQ,CAAC;AACnC,CAAC;AACD,SACgB,QAAQ,CAAC,KAAU;AAAI,IACrC,OAAO,OAAO,KAAK,KAAK,QAAQ,CAAC;AACnC,CAAC;AACD,SACgB,MAAM,CAAC,CAAM;AAAI,IAC/B,OAAO,OAAO,CAAC,KAAK,UAAU,CAAC;AACjC,CAAC;AACD,SACgB,wBAAwB,CAAC,KAAU;AAAI,IACrD,OAAO,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,MAAM,IAAI,KAAK,CAAC,KAAK,CAAC,IAAI,IAAI,IAAI,YAAY,iBAAiB,CAAC,CAAC;AAC1G,CAAC;AACD,SACgB,QAAQ,CAAC,CAAM;AAAI,IACjC,OAAO,CAAC,IAAI,OAAO,CAAC,KAAK,QAAQ,CAAC;AACpC;AACA;AAAC,SChDe,WAAW,CAAI,gBAA8B;AAAI,IAC/D,OAAO,CAAC,mBAA8B,EAAE,UAA2B,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,SAAS,EAAE;AAAO,QACxG,IAAI,mBAAmB,YAAY,WAAW,EAAE;AACpD,YAAM,OAAO,mBAAmB,CAAC,OAAO,CAAC,gBAAgB,CAAC,aAAa,CAAU,CAAC;AAClF,SAAK;AACL,QACI,MAAM,aAAa,GAAG,gBAAgB,CAAC,QAAQ,CAC7C,QAAQ,CAAC,mBAAmB,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,mBAAmB,CAAC,GAAG,EAAE,CAAC,SAAS,CAAC,mBAAmB,CAAC,CAChG,CAAC;AACN,QACI,IAAI,OAAO,CAAC,IAAI,EAAE;AACtB,YAAM,OAAO,aAAa,CAAC,GAAG,CAAC,KAAK,IAAI,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;AAC1E,SAAK;AACL,QACI,IAAI,QAAQ,CAAC,mBAAmB,CAAC,EAAE;AACvC,YAAM,OAAO,aAAa,CAAC,GAAG,CAAC,KAAK,IAAI,KAAK,CAAC,aAAa,CAAC,CAAC;AAC7D,SAAK;AACL,QACI,OAAO,aAAa,CAAC,GAAG,CAAC,KAAK,IAAI,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC,CAAC;AAC/E,KAAG,CAAC;AACJ,CAAC;AACD,SAQgB,QAAQ,CAAC,QAAa,EAAE,cAAmB,EAAE,KAAW,EAAE,cAAuB,IAAI;AAAI;AAClG,IAAL,MAAM,OAAO,GAAkB,EAAE,CAAC;AACpC,IACE,MAAM,MAAM,GAAG,CAAC,GAAW,EAAE,QAAa;AAAO,QAC/C,IAAI,QAAQ,CAAC,GAAG,CAAC,KAAK,QAAQ,EAAE;AACpC,YAAM,OAAO,CAAC,GAAG,CAAC,GAAG,IAAI,YAAY,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,QAAQ,EAAE,WAAW,CAAC,CAAC;AAC5E,SAAK;AACL,QACI,QAAQ,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC;AAC7B,KAAG,CAAC;AACJ,IACE,IAAI,QAAQ,CAAC,cAAc,CAAC,EAAE;AAChC,QAAI,MAAM,CAAC,cAAc,EAAE,KAAK,CAAC,CAAC;AAClC,KAAG;AAAC,SAAK;AACT;AACI,QAAA,KAAK,MAAM,CAAC,IAAI,cAAc,EAAE;AACpC,YAAM,MAAM,CAAC,CAAC,EAAE,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,SAAK;AACL,KAAG;AACH,IACE,IAAI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE;AACnC;AACI,QAAA,MAAA,QAAQ,CAAC,WAAW,+CAApB,QAAQ,EAAe,OAAO,EAAE;AACpC,KAAG;AACH,IACE,OAAO,QAAQ,CAAC;AAClB;AACA;AC/CO,MAAM,eAAe,GAAG,CAAC,YAAoD;AAAO,IACzF,IAAI,QAAQ,CAAC,YAAY,CAAC,IAAI,YAAY,EAAE;AAC9C,QAAI,OAAO,EAAE,GAAG,EAAE,KAAK,EAAE,OAAO,EAAE,YAAY,EAAE,SAAS,EAAE,EAAE,EAAE,CAAC;AAChE,KAAG;AACH,IACE,IAAI,QAAQ,CAAC,YAAY,CAAC,IAAI,YAAY,EAAE;AAC9C,QAAI,OAAO,QAAQ,CAAC,YAAsB,CAAC,CAAC;AAC5C,KAAG;AACH,IACE,IAAI,QAAQ,CAAC,YAAY,CAAC,EAAE;AAC9B,QAAI,MAAM,SAAS,GAAG,QAAQ,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;AACjD,QACI,uCACK,SAAS,KACZ,OAAO,EAAE,YAAY,CAAC,OAAO,IAC7B;AACN,KAAG;AACH,IACE,MAAM,IAAI,KAAK,CAAC,qDAAqD,CAAC,CAAC;AACzE,CAAC,CAAC;AAEF,MAAM,QAAQ,GAAG,CAAC,MAAc;AAAO,IACrC,IAAI,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,GAAG,KAAK,MAAM,EAAE;AACjD,QAAI,OAAO,EAAE,GAAG,EAAE,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,SAAS,EAAE,EAAE,EAAE,CAAC;AAC1D,KAAG;AACH,IACE,MAAM,QAAQ,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AACrC,IAAE,MAAM,GAAG,GAAG,QAAQ,CAAC,GAAG,EAAY,CAAC;AACvC,IAAE,MAAM,SAAS,GAAG,QAAQ,CAAC,MAAM,CAC/B,CAAC,IAAI,EAAE,IAAI;AACf,QAAM,QAAQ,IAAI;AAClB,YAAQ,KAAK,SAAS,CAAC;AACvB,YAAQ,KAAK,MAAM;AACnB,gBAAU,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;AAC9B,gBACU,OAAO,IAAI,CAAC;AACtB,YAAQ,KAAK,OAAO;AACpB,gBAAU,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;AAC5B,gBACU,OAAO,IAAI,CAAC;AACtB,YAAQ,KAAK,KAAK;AAClB,gBAAU,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC;AAC1B,gBACU,OAAO,IAAI,CAAC;AACtB,YAAQ,KAAK,MAAM,CAAC;AACpB,YAAQ,KAAK,KAAK,CAAC;AACnB,YAAQ,KAAK,KAAK;AAClB,gBAAU,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AAC3B,gBACU,OAAO,IAAI,CAAC;AACtB,YAAQ;AACR,gBAAU,MAAM,IAAI,KAAK,CAAC,yBAAyB,IAAI,GAAG,IAAI,GAAG,WAAW,aAAa,MAAM,EAAE,CAAC,CAAC;AACnG,SAAO;AACP,KAAK,EACD,EAAE,GAAG,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,CAC1D,CAAC;AACJ,IACE,OAAO,EAAE,GAAG,EAAE,OAAO,EAAE,KAAK,EAAE,SAAS,EAAE,CAAC;AAC5C,CAAC,CAAC;AACF;AAAuB;AC1EvB;AACA;AACA;AAKA;AACA,SAAgB,gBAAgB,CAAC,IAAY,EAAE,IAAY,CAAC,EAAE,IAAY,CAAC,EAAE,SAAiB,CAAC;AAAI,IACjG,MAAM,KAAK,GAAG,QAAQ,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;AACnD,IACE,KAAK,CAAC,cAAc,CAAC,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;AAC3G;AAEC;AACE,IAAD,MAAM,CAAC,cAAc,CAAC,KAAK,EAAE,SAAS,EAAE,EAAE,GAAG,EAAE,MAAM,CAAC,EAAE,CAAC,CAAC;AAC5D,IACE,OAAO,KAAK,CAAC;AACf,CAAC;AAED;AACA;AACA;AACA,SAAgB,gBAAgB,CAAC,IAAY,EAAE,QAAgB,CAAC,EAAE,QAAgB,CAAC;AAAI;AACJ;AACJ,IAC7E,MAAM,KAAK,GAAG,IAAI,OAAO,CAAC,IAAI,EAAE;AAClC,QAAI,OAAO,EAAE,IAAI;AACjB,QAAI,UAAU,EAAE,IAAI;AACpB,QAAI,IAAI,EAAE,MAAM;AAChB,QAAI,MAAM,EAAE,CAAC;AACb,KAAG,CAAC,CAAC;AACL;AAEC;AACE,IAAD,MAAM,CAAC,gBAAgB,CAAC,KAAK,EAAE;AACjC,QAAI,OAAO,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,EAAE;AAC1C,KAAG,CAAC,CAAC;AACL,IACE,OAAO,KAAK,CAAC;AACf,CAAC;AAED;AACA,SAAgB,mBAAmB,CAAC,IAAY,EAAE,YAAoD,EAAE,MAAgB;AAAI,IAC1H,MAAM,EAAE,GAAG,EAAE,OAAO,EAAE,SAAS,EAAE,GAAG,eAAe,CAAC,YAAY,CAAC,CAAC;AACpE,IACE,MAAM,KAAK,GAAG,QAAQ,CAAC,WAAW,CAAC,eAAe,CAAQ,CAAC;AAC7D,IAAE,MAAM,sBAAsB,GAAG,KAAK,CAAC,cAAc,CAAC;AACtD;AAEC,IAAC,IAAI,KAAK,CAAC,YAAY,EAAE;AAC1B,QAAI,KAAK,CAAC,YAAY,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,CAAC,OAAO,EAAE,SAAS,CAAC,GAAG,EAAE,SAAS,CAAC,KAAK,EAAE,SAAS,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;AAC7H,KAAG;AAAC,SAAK;AACT;AACI;AACI,QAAJ,MAAM,YAAY,GAAG,CAAC,SAAS,CAAC,OAAO;AAC3C,cAAQ,UAAU;AAClB,cAAQ,EAAE,GAAG,SAAS,CAAC,GAAG;AAC1B,kBAAQ,MAAM;AACd,kBAAQ,EAAE,GAAG,SAAS,CAAC,KAAK;AAC5B,sBAAQ,QAAQ;AAChB,sBAAQ,EAAE,GAAG,SAAS,CAAC,IAAI;AAC3B,0BAAQ,MAAM;AACd,0BAAQ,EAAE,EACJ,IAAI,EAAE,CAAC;AACb,QAAI,KAAK,CAAC,iBAAiB,CACrB,IAAI,EACJ,IAAI,kBACJ,IAAI,mBACJ,MAAM,aACN,CAAC,aACD,GAAG,YACH,CAAC,iBACD,YAAY,sBACZ,KAAK,cACN,CAAC;AACN,KAAG;AACH;AAEC;AACE,IAAD,MAAM,CAAC,gBAAgB,CAAC,KAAK,EAAE;AACjC,QAAI,OAAO,EAAE,EAAE,GAAG,EAAE,MAAM,OAAO,EAAE;AACnC,QAAI,GAAG,EAAE,EAAE,GAAG,EAAE,MAAM,GAAG,EAAE;AAC3B,QAAI,MAAM,EAAE,EAAE,GAAG,EAAE,MAAM,MAAM,EAAE;AACjC,QAAI,MAAM,EAAE,EAAE,GAAG,EAAE,MAAM,CAAC,CAAC,SAAS,CAAC,GAAG,EAAE;AAC1C,QAAI,OAAO,EAAE,EAAE,GAAG,EAAE,MAAM,CAAC,CAAC,SAAS,CAAC,OAAO,EAAE;AAC/C,QAAI,QAAQ,EAAE,EAAE,GAAG,EAAE,MAAM,CAAC,CAAC,SAAS,CAAC,KAAK,EAAE;AAC9C,QAAI,OAAO,EAAE,EAAE,GAAG,EAAE,MAAM,CAAC,CAAC,SAAS,CAAC,IAAI,EAAE;AAC5C,KAAG,CAAC,CAAC;AACL;AAEC;AACE,IAAD,KAAK,CAAC,cAAc,GAAG;AACxB,QAAG,MAAM,CAAC,cAAc,CAAC,KAAK,EAAE,kBAAkB,EAAE,EAAE,YAAY,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,IAAI,EAAE,CAAC,CAAC;AAC9F,QACI,OAAO,sBAAsB,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;AACzD,KAAG,CAAC;AACJ,IACE,OAAO,KAAK,CAAC;AACf,CAAC;AAED;AACA,SAAgB,eAAe,CAAC,IAAY,EAAE,YAAqB,KAAK,EAAE,aAAsB,IAAI;AAAI,IACtG,MAAM,KAAK,GAAG,QAAQ,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;AAC9C,IAAE,KAAK,CAAC,SAAS,CAAC,IAAI,EAAE,SAAS,EAAE,UAAU,CAAC,CAAC;AAC/C,IACE,OAAO,KAAK,CAAC;AACf;AACA;AC5GA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA,SAAgB,aAAa,CAA0B,IAAmB,EAAE,KAAQ;AAAI,IACtF,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;AAC5B,IACE,OAAO,KAAK,CAAC;AACf,CAAC;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAgB,iBAAiB,CAAC,IAAmB,EAAE,IAAY,EAAE,SAAmB;AAAI,IAC1F,OAAO,aAAa,CAAC,IAAI,EAAE,eAAe,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC,CAAC;AAC/D,CAAC;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAgB,qBAAqB,CACnC,IAAU,EACV,IAAY,EACZ,YAAoD,EACpD,MAAgB;AACf,IACD,OAAO,aAAa,CAAC,IAAI,EAAE,mBAAmB,CAAC,IAAI,EAAE,YAAY,EAAE,MAAM,CAAC,CAAC,CAAC;AAC9E,CAAC;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAgB,kBAAkB,CAChC,IAAU,EACV,IAAY,EACZ,IAAY,CAAC,EACb,IAAY,CAAC,EACb,QAAoB,gBAAgB,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;AAC/C,IACD,OAAO,aAAa,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;AACpC,CAAC;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAgB,kBAAkB,CAAC,IAAqC,EAAE,IAAY,EAAE,IAAY,CAAC,EAAE,IAAY,CAAC;AAAI,IACtH,OAAO,aAAa,CAAC,IAAI,EAAE,gBAAgB,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AAC3D;AACA;ACvEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAgB,iBAAiB,CAAC,OAAoB;AAAI,IACxD,OAAO,CAAC,KAAK,GAAG,MAAM,iBAAiB,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;AAC5D,IAAE,OAAO,CAAC,IAAI,GAAG,MAAM,iBAAiB,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;AAC1D;AACA;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAgB,aAAa,CAAC,KAAa,EAAE,OAAwC;AAAI,IACvF,IAAI,EAAE,OAAO,YAAY,gBAAgB,CAAC,IAAI,EAAE,OAAO,YAAY,mBAAmB,CAAC,EAAE;AAC3F,QAAI,OAAO;AACX,KAAG;AACH,IACE,OAAO,CAAC,KAAK,EAAE,CAAC;AAClB,IAAE,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC;AACxB,IAAE,iBAAiB,CAAC,OAAO,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC;AAC5C;AACA;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAgB,YAAY,CAC1B,OAAsB,EACtB,OAA4D,EAC5D,MAA+B;AAC9B,IACD,IAAI,EAAE,OAAO,YAAY,iBAAiB,CAAC,EAAE;AAC/C,QAAI,OAAO;AACX,KAAG;AACH,IACE,OAAO,CAAC,KAAK,EAAE,CAAC;AAClB,IACE,IAAI,QAAQ,CAAC,OAAO,CAAC,EAAE;AACzB,QAAI,MAAM,MAAM,GAA6B,OAAO,CAAC,aAAa,CAAC,iBAAiB,OAAO,IAAI,CAAC,CAAC;AACjG,QAAI,IAAI,CAAC,MAAM,EAAE;AACjB,YAAM,OAAO;AACb,SAAK;AACL,QACI,iBAAiB,CAAC,MAAM,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;AAC/C,KAAG;AAAC,SAAK,IAAI,OAAO,YAAY,iBAAiB,EAAE;AACnD,QAAI,iBAAiB,CAAC,OAAO,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;AAChD,KAAG;AAAC,SAAK;AACT,QAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE;AAC3B,YAAM,OAAO;AACb,SAAK;AACL,QACI,IAAI,wBAAwB,CAAC,OAAO,CAAC,EAAE;AAC3C,YAAM,OAAO,CAAC,OAAO,CAAC,MAAM,IAAI,iBAAiB,CAAC,MAAM,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC,CAAC;AAC5E,SAAK;AAAC,aAAK;AACX,YAAM,OAAO,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,GAAG;AACpD,gBAAQ,IAAI,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;AACzC,oBAAU,iBAAiB,CAAC,GAAG,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;AAClD,iBAAS;AACT,aAAO,CAAC,CAAC;AACT,SAAK;AACL,KAAG;AACH,CAAC;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,iBAAiB,CAAC,MAAyB,EAAE,MAAyB,EAAE,MAA+B;AAAI,IAClH,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC;AACzB,IAAE,IAAI,MAAM,CAAC,UAAU,EAAE;AACzB,QAAI,iBAAiB,CAAC,MAAM,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAC;AAC9C,KAAG;AACH;AACA;AC1DA;AACA;AACA;AACA,MAAsB,aAAa;AACnC,IAAS,MAAM,CAAI,KAAe;AAAI,QAClC,OAAO,OAAO,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;AACvE,KAAG;AACH;AACA;ACKA,MAAM,MAAM,GAAG,OAAO,CAAC;AAEvB;AACA;AACA;AACA,MAAsB,YAAgB,SAAQ,aAAa;AAC3D,IAAE,YAAmB,OAA8B,EAAS,YAA0B,EAAY,QAAW,EAAS,OAAgB;AACtI,QAAI,KAAK,EAAE,CAAC;AACZ,QAFqB,YAAO,GAAP,OAAO,CAAuB;AAAC,QAAQ,iBAAY,GAAZ,YAAY,CAAc;AAAC,QAAW,aAAQ,GAAR,QAAQ,CAAG;AAAC,QAAQ,YAAO,GAAP,OAAO,CAAS;AAAC,KAEpI;AACH,IACS,MAAM,CAAI,KAAe;AAAI,QAClC,OAAO,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;AAC/B,KAAG;AACH,IACS,aAAa;AAAK,QACvB,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,CAAC;AACjC,KAAG;AACH,IAIS,KAAK,CAAI,mBAA8B,EAAE,OAAyB;AAAI,QAC3E,IAAI,CAAC,OAAO,IAAI,EAAE,EAAE,IAAI,EAAE;AAC9B,YAAM,IAAI,QAAQ,CAAC,mBAAmB,CAAC,EAAE;AACzC,gBAAQ,OAAO,QAAQ,CAAC,aAAa,CAAC,mBAAmB,CAAC,CAAC;AAC3D,aAAO;AACP,YACM,IAAI,mBAAmB,YAAY,WAAW,EAAE;AACtD,gBAAQ,OAAO,mBAAmB,CAAC,OAAO,CAAC,QAAe,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC;AACvE,aAAO;AACP,SAAK;AACL,QACI,OAAO,WAAW,CAAI,IAAI,CAAC,YAAY,CAAC,CAAC,mBAAmB,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC;AACtF,KAAG;AACH,IAIS,QAAQ,CAAI,mBAA8B,EAAE,OAAyB;AAAI,QAC9E,IAAI,CAAC,OAAO,IAAI,EAAE,EAAE,IAAI,EAAE;AAC9B,YAAM,IAAI,QAAQ,CAAC,mBAAmB,CAAC,EAAE;AACzC,gBAAQ,OAAO,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,mBAAmB,CAAC,CAAC,CAAC;AAC1E,aAAO;AACP,YACM,IAAI,mBAAmB,YAAY,WAAW,EAAE;AACtD,gBAAQ,OAAO,mBAAmB,CAAC,OAAO,CAAC,QAAe,CAAC,CAAC;AAC5D,aAAO;AACP,SAAK;AACL,QACI,OAAO,WAAW,CAAI,IAAI,CAAC,YAAY,CAAC,CAAC,mBAAmB,EAAE,OAAO,CAAC,CAAC;AAC3E,KAAG;AACH,IAIS,SAAS,CAAI,mBAA8B,EAAE,OAAyB;AAAI,QAC/E,IAAI,MAAM,GAAoB,EAAE,CAAC;AACrC,QACI,IAAI,CAAC,OAAO,IAAI,EAAE,EAAE,IAAI,EAAE;AAC9B,YAAM,IAAI,QAAQ,CAAC,mBAAmB,CAAC,EAAE;AACzC,gBAAQ,MAAM,GAAG,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,mBAAmB,CAAC,CAAC,CAAC;AAC5E,aAAO;AACP,YACM,IAAI,mBAAmB,YAAY,WAAW,EAAE;AACtD,gBAAQ,MAAM,GAAG,mBAAmB,CAAC,OAAO,CAAC,QAAe,CAAC,CAAC;AAC9D,aAAO;AACP,SAAK;AAAC,aAAK;AACX,YAAM,MAAM,GAAG,WAAW,CAAI,IAAI,CAAC,YAAY,CAAC,CAAC,mBAAmB,EAAE,OAAO,CAAC,CAAC;AAC/E,SAAK;AACL,QACI,IAAI,MAAM,IAAI,MAAM,CAAC,MAAM,EAAE;AACjC,YAAM,OAAO,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;AACvC,SAAK;AACL,QACI,OAAO,IAAI,CAAC;AAChB,KAAG;AACH,IAGS,QAAQ,CAAC,KAAU,EAAE,KAAW;AAAI,QACzC,QAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;AACjD,QAAI,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,aAAa,EAAE,CAAC;AACtE,KAAG;AACH,IACS,MAAM,CAAiC,MAAS;AAAI,QACzD,MAAM,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;AAC7C,QACI,IAAI,EAAE,UAAU,YAAY,UAAU,CAAC,EAAE;AAC7C,YAAM,MAAM,IAAI,KAAK,CAAC,GAAG,MAAM,oBAAoB,CAAC,CAAC;AACrD,SAAK;AACL,QACI,OAAO,UAA2B,CAAC;AACvC,KAAG;AACH,IACS,IAAI,CAAC,MAAe;AAAI,QAC7B,IAAI,CAAC,MAAM,CAAC,CAAC;AACjB,QAAI,IAAI,CAAC,aAAa,EAAE,CAAC;AACzB,KAAG;AACH,IACS,KAAK,CAAC,WAA6B,IAAI,CAAC,OAAO;AAAI,QACxD,MAAM,OAAO,GAAG,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;AACpD,QACI,IAAI,EAAE,OAAO,YAAY,WAAW,CAAC,EAAE;AAC3C,YAAM,MAAM,IAAI,KAAK,CAAC,iBAAiB,QAAQ,uBAAuB,CAAC,CAAC;AACxE,SAAK;AACL,QACI,OAAO,CAAC,KAAK,EAAE,CAAC;AACpB,QAAI,IAAI,CAAC,aAAa,EAAE,CAAC;AACzB,KAAG;AACH,IACS,IAAI,CAAC,WAA6B,IAAI,CAAC,OAAO;AAAI,QACvD,MAAM,OAAO,GAAG,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;AACpD,QACI,IAAI,EAAE,OAAO,YAAY,WAAW,CAAC,EAAE;AAC3C,YAAM,MAAM,IAAI,KAAK,CAAC,gBAAgB,QAAQ,uBAAuB,CAAC,CAAC;AACvE,SAAK;AACL,QACI,iBAAiB,CAAC,OAAO,CAAC,CAAC;AAC/B,QAAI,OAAO,CAAC,IAAI,EAAE,CAAC;AACnB,QAAI,IAAI,CAAC,aAAa,EAAE,CAAC;AACzB,KAAG;AACH,IACS,KAAK,CAAC,WAA6B,IAAI,CAAC,OAAO;AAAI,QACxD,MAAM,OAAO,GAAG,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;AACpD,QACI,IAAI,EAAE,OAAO,YAAY,WAAW,CAAC,EAAE;AAC3C,YAAM,MAAM,IAAI,KAAK,CAAC,iBAAiB,QAAQ,uBAAuB,CAAC,CAAC;AACxE,SAAK;AACL,QACI,iBAAiB,CAAC,OAAO,CAAC,CAAC;AAC/B,QAAI,OAAO,CAAC,KAAK,EAAE,CAAC;AACpB,QAAI,IAAI,CAAC,aAAa,EAAE,CAAC;AACzB,KAAG;AACH,IACS,kBAAkB,CACvB,WAA6B,IAAI,CAAC,OAAO,EACzC,IAAY,EACZ,IAAY,CAAC,EACb,IAAY,CAAC,EACb,QAAoB,gBAAgB,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;AACjD,QACC,MAAM,OAAO,GAAG,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;AACpD,QACI,IAAI,EAAE,OAAO,YAAY,IAAI,CAAC,EAAE;AACpC,YAAM,MAAM,IAAI,KAAK,CAAC,gCAAgC,QAAQ,gBAAgB,CAAC,CAAC;AAChF,SAAK;AACL,QACI,MAAM,eAAe,GAAG,kBAAkB,CAAC,OAAO,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;AAC3E,QAAI,IAAI,CAAC,aAAa,EAAE,CAAC;AACzB,QACI,OAAO,eAAe,CAAC;AAC3B,KAAG;AACH,IAIS,qBAAqB,CAC1B,WAA6B,IAAI,CAAC,OAAO,EACzC,IAAY,EACZ,YAAoD,EACpD,MAAgB;AACjB,QACC,MAAM,OAAO,GAAG,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;AACpD,QACI,IAAI,EAAE,OAAO,YAAY,IAAI,CAAC,EAAE;AACpC,YAAM,MAAM,IAAI,KAAK,CAAC,mCAAmC,QAAQ,gBAAgB,CAAC,CAAC;AACnF,SAAK;AACL,QACI,MAAM,KAAK,GAAG,qBAAqB,CAAC,OAAO,EAAE,IAAI,EAAE,YAAY,EAAE,MAAM,CAAC,CAAC;AAC7E,QACI,IAAI,CAAC,aAAa,EAAE,CAAC;AACzB,QACI,OAAO,KAAK,CAAC;AACjB,KAAG;AACH,IACS,iBAAiB,CAAC,WAA6B,IAAI,CAAC,OAAO,EAAE,IAAY,EAAE,SAAmB;AAAI,QACvG,MAAM,KAAK,GAAG,iBAAiB,CAAC,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,EAAE,IAAI,EAAE,SAAS,CAAC,CAAC;AACtF,QAAI,IAAI,CAAC,aAAa,EAAE,CAAC;AACzB,QACI,OAAO,KAAK,CAAC;AACjB,KAAG;AACH,IACS,mBAAmB,CACxB,mBAAoD,EACpD,SAAY,EACZ,QAAgC;AACjC,QACC,MAAM,YAAY,GAAG,IAAI,CAAC,eAAe,CAAC,mBAAmB,CAAC,CAAC;AACnE,QAAI,IAAI,CAAC,YAAY,EAAE;AACvB;AACM,YAAA,OAAO,CAAC,KAAK,CAAC,GAAG,mBAAmB,kBAAkB,CAAC,CAAC;AAC9D,YAAM,OAAO;AACb,SAAK;AACL,QAAI,YAAY,CAAC,mBAAmB,CAAC,SAAmB,EAAE,QAAQ,CAAC,CAAC;AACpE,QAAI,IAAI,CAAC,aAAa,EAAE,CAAC;AACzB,KAAG;AACH,IACE,IAAW,QAAQ;AACrB,QAAI,OAAO;AACX,YAAM,QAAQ,EAAE,CAAC,GAAW,EAAE,WAA6B,IAAI,CAAC,OAAO,EAAE,KAAK,GAAG,MAAM;AACvF,gBAAQ,IAAI,CAAC,qBAAqB,CAAC,QAAQ,EAAE,KAAK,EAAE,GAAG,CAAC,CAAC;AACzD,aAAO;AACP,YAAM,WAAW,EAAE,CAAC,WAA6B,IAAI,CAAC,OAAO,EAAE,KAAK,GAAG,MAAM;AAC7E,gBAAQ,IAAI,CAAC,qBAAqB,CAAC,QAAQ,EAAE,KAAK,EAAE,EAAE,GAAG,EAAE,QAAQ,EAAE,OAAO,EAAE,EAAE,EAAE,CAAC,CAAC;AACpF,aAAO;AACP,YAAM,UAAU,EAAE,CAAC,WAA6B,IAAI,CAAC,OAAO,EAAE,KAAK,GAAG,MAAM;AAC5E,gBAAQ,IAAI,CAAC,qBAAqB,CAAC,QAAQ,EAAE,KAAK,EAAE,EAAE,GAAG,EAAE,OAAO,EAAE,OAAO,EAAE,EAAE,EAAE,CAAC,CAAC;AACnF,aAAO;AACP,YAAM,QAAQ,EAAE,CAAC,WAA6B,IAAI,CAAC,OAAO,EAAE,KAAK,GAAG,MAAM;AAC1E,gBAAQ,IAAI,CAAC,qBAAqB,CAAC,QAAQ,EAAE,KAAK,EAAE,EAAE,GAAG,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;AAChF,aAAO;AACP,YAAM,cAAc,EAAE,CAAC,WAA6B,IAAI,CAAC,OAAO,EAAE,KAAK,GAAG,MAAM;AAChF,gBAAQ,IAAI,CAAC,qBAAqB,CAAC,QAAQ,EAAE,KAAK,EAAE,EAAE,GAAG,EAAE,WAAW,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;AACtF,aAAO;AACP,SAAK,CAAC;AACN,KAAG;AACH,IACE,IAAW,KAAK;AAClB,QAAI,OAAO;AACX,YAAM,WAAW,EAAE,CAAC,WAA6B,IAAI,CAAC,OAAO;AAC7D,gBAAQ,IAAI,CAAC,kBAAkB,CAAC,QAAQ,EAAE,aAAa,CAAC,CAAC;AACzD,aAAO;AACP,YAAM,QAAQ,EAAE,CAAC,WAA6B,IAAI,CAAC,OAAO;AAC1D,gBAAQ,IAAI,CAAC,kBAAkB,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;AACtD,aAAO;AACP,SAAK,CAAC;AACN,KAAG;AACH,IACS,kBAAkB,CAAC,WAA6B,IAAI,CAAC,OAAO,EAAE,IAAY,EAAE,IAAY,CAAC,EAAE,IAAY,CAAC;AAAI,QACjH,kBAAkB,CAAC,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AACpE,QAAI,IAAI,CAAC,aAAa,EAAE,CAAC;AACzB,KAAG;AACH,IACS,aAAa,CAAC,KAAa,EAAE,WAA6B,IAAI,CAAC,OAAO;AAAI,QAC/E,aAAa,CAAC,KAAK,EAAE,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC,CAAC;AAC1D,QAAI,IAAI,CAAC,aAAa,EAAE,CAAC;AACzB,KAAG;AACH,IACS,YAAY,CACjB,WAA6B,IAAI,CAAC,OAAO,EACzC,OAAoE,EACpE,SAAkC,EAAE,UAAU,EAAE,IAAI,EAAE;AACvD,QACC,IAAI,CAAC,QAAQ,EAAE;AACnB,YAAM,MAAM,IAAI,KAAK,CAAC,uBAAuB,QAAQ,EAAE,CAAC,CAAC;AACzD,SAAK;AACL,QAAI,YAAY,CAAC,OAAO,EAAE,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,EAAE,MAAM,CAAC,CAAC;AACnE,QAAI,IAAI,CAAC,aAAa,EAAE,CAAC;AACzB,KAAG;AACH,IACU,gBAAgB,CAAC,QAA0B;AAAI,QACrD,IAAI,OAAO,CAAC;AAChB;AAEG,QAAC,IAAI,QAAQ,KAAK,MAAM,IAAI,QAAQ,KAAK,QAAQ,EAAE;AACtD,YAAM,OAAO,QAAQ,CAAC;AACtB,SAAK;AACL,QACI,IAAI,QAAQ,CAAC,QAAQ,CAAC,EAAE;AAC5B,YAAM,MAAM,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC;AAC/D,YAAM,IAAI,MAAM,EAAE;AAClB,gBAAQ,OAAO,GAAG,MAAM,CAAC,aAAa,CAAC;AACvC,aAAO;AAAC,iBAAK;AACb;AACQ,gBAAA,OAAO,CAAC,KAAK,CAAC,GAAG,QAAQ,kBAAkB,CAAC,CAAC;AACrD,aAAO;AACP,SAAK;AAAC,aAAK,IAAI,QAAQ,YAAY,WAAW,EAAE;AAChD,YAAM,OAAO,GAAG,QAAQ,CAAC,OAAO,CAAC,QAAe,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC;AAC7D,SAAK;AAAC,aAAK;AACX,YAAM,IAAI,QAAQ,YAAY,YAAY,IAAI,QAAQ,YAAY,UAAU,EAAE;AAC9E,gBAAQ,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC;AACzC,aAAO;AAAC,iBAAK;AACb,gBAAQ,OAAO,GAAG,QAAQ,CAAC;AAC3B,aAAO;AACP,SAAK;AACL,QACI,OAAO,OAAO,CAAC;AACnB,KAAG;AACH,IACU,eAAe,CAAC,mBAA0D;AACpF,QAAI,IAAI,YAA0B,CAAC;AACnC,QAAI,IAAI,QAAQ,CAAC,mBAAmB,CAAC,EAAE;AACvC,YAAM,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC,CAAC;AAC1E,SAAK;AAAC,aAAK,IAAI,mBAAmB,YAAY,YAAY,EAAE;AAC5D,YAAM,YAAY,GAAG,mBAAmB,CAAC;AACzC,SAAK;AAAC,aAAK;AACX,YAAM,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE,CAAC,SAAS,CAAC,mBAAmB,CAAC,CAAC,CAAC;AAChF,SAAK;AACL,QAAI,OAAO,YAAY,CAAC;AACxB,KAAG;AACH;AACA;AC9SA;AACA;AACA;AACA,MAAa,SAAa,SAAQ,YAAe;AACjD,IAAE,YAAmB,OAA4B,EAAS,YAA0B,EAAY,QAAW,EAAS,OAAoB;AACxI,QAAI,KAAK,CAAC,OAAO,EAAE,YAAY,EAAE,QAAQ,EAAE,OAAO,CAAC,CAAC;AACpD,QAFqB,YAAO,GAAP,OAAO,CAAqB;AAAC,QAAQ,iBAAY,GAAZ,YAAY,CAAc;AAAC,QAAW,aAAQ,GAAR,QAAQ,CAAG;AAAC,QAAQ,YAAO,GAAP,OAAO,CAAa;AAAC,KAEtI;AACH,IACE,IAAW,SAAS;AAAK,QACvB,OAAO,IAAI,CAAC,QAAQ,CAAC;AACzB,KAAG;AACH,IACS,MAAM,CAAI,KAAe,EAAE,wBAAiC,KAAK;AAAI,QAC1E,IAAI,qBAAqB,EAAE;AAC/B,YAAM,OAAO,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAiB,CAAC;AACnE,SAAK;AACL,QACI,OAAO,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;AAC/B,KAAG;AACH,IACS,sBAAsB;AAAK,QAChC,IAAI,IAAI,CAAC,YAAY,EAAE;AAC3B,YAAM,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,aAAa,EAAE,CAAC;AACxE,SAAK;AAAC,aAAK;AACX,YAAM,IAAI,CAAC,aAAa,EAAE,CAAC;AAC3B,SAAK;AACL,KAAG;AACH;AACA;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SACgB,OAAO,CAAC,GAAW;AAAI,IACrC,MAAM,CAAC,GAAG,GAAG,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;AACjC,IAAE,MAAM,OAAO,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,GAAG,IAAI,EAAE,GAAG,CAAC,CAAE,CAAC;AACzE,IAAE,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC,KAAK,IAAI,QAAQ,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC;AACnG,IACE,OAAO,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC;AAC/B,CAAC;AACD,SACgB,KAAK,CAAC,KAAa;AAAI,IACrC,OAAO,oCAAoC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC1D,CAAC;AACD,SACgB,IAAI,CAAC,KAAa;AAAI,IACpC,OAAO,CAAC,KAAK,IAAI,EAAE,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;AAC1C;AACA;AAAC,SCvBe,gBAAgB;AAChC,IAAE,OAAO,SAAS,CAAC,SAAS,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,SAAS,CAAC,SAAS,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;AAC1F;AACA;ACHA;AAsBA,MAAM,WAAW,GAAG,CAAC,MAAe,EAAE,QAAiB;AAAO,IAC5D,OAAO,QAAQ,KAAK,SAAS,GAAG,MAAM,KAAK,SAAS,GAAG,MAAM,KAAK,QAAQ,CAAC;AAC7E,CAAC,CAAC;AACF;AACA,MAAM,gBAAgB,GAAG,CAAC,MAAc,EAAE,QAAiB;AAAO,IAChE,OAAO,QAAQ,KAAK,SAAS,GAAG,IAAI,GAAG,MAAM,CAAC,QAAQ,CAAC,QAAkB,CAAC,CAAC;AAC7E,CAAC,CAAC;AACF;AACA,MAAM,aAAa,GAAG,CACpB,EAAe,EACf,IAAY,EACZ,SAAwC;AACpC,IACJ,IAAI,IAAI,GAAG,KAAK,CAAC;AACnB,IAAE,IAAI,OAAO,GAAG,EAAE,CAAC;AACnB,IACE,KAAK,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;AACvC,QAAI,MAAM,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACnC,QAAI,MAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,SAAS,GAAG,gBAAgB,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,EAAE,CAAC;AACjF,QACI,IAAI,GAAG,SAAS,CAAC,MAAM,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;AACxC,QAAI,OAAO,GAAG,CAAC,IAAI,GAAG,IAAI,IAAI,IAAI,QAAQ,cAAc,MAAM,GAAG,GAAG,EAAE,CAAC;AACvE,KAAG;AACH,IACE,MAAM,OAAO,GAAG,MAAM,mBAAmB,IAAI,GAAG,MAAM,GAAG,EAAE,qBAAqB,OAAO,EAAE,CAAC;AAC5F,IACE,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;AAC3B,CAAC,CAAC;AACF;AACA,MAAM,MAAM,GAAG,CAAC,EAAe,EAAE,GAA8B;AAC/D,IAAE,IAAI,IAAI,CAAC;AACX,IAAE,IAAI,KAAK,CAAC;AACZ,IAAE,MAAM,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;AACpB,IAAE,KAAK,IAAI,IAAI,GAAG,EAAE;AACpB,QAAI,IAAI,GAAG,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE;AAClC,YAAM,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC;AACxB,YACM,IAAI,KAAK,CAAC,KAAK,CAAC,EAAE;AACxB,gBAAQ,KAAK,GAAG,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;AACnC,aAAO;AACP,YACM,IAAI,KAAK,KAAK,MAAM,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,MAAM,EAAE;AACjE,gBAAQ,SAAS;AACjB,aAAO;AACP,YACM,IAAI,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,KAAK,IAAI,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,KAAK,IAAI,CAAC,KAAK,CAAC,EAAE;AACvF,gBAAQ,OAAO,KAAK,CAAC;AACrB,aAAO;AACP,SAAK;AACL,KAAG;AACH,IACE,OAAO,IAAI,CAAC;AACd,CAAC,CAAC;AACF;AACA,MAAM,WAAW,GAAG,CAAC,EAAe,EAAE,QAAsD,EAAE,KAAK,GAAG,KAAK;AAC3G,IAAE,IAAI,QAAQ,IAAI,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;AAC3C,QAAI,IAAI,MAAc,CAAC;AACvB,QAAI,IAAI,IAAI,GAAG,KAAK,CAAC;AACrB,QAAI,IAAI,OAAe,CAAC;AACxB,QACI,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;AACpB,YAAM,MAAM,GAAG,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC;AACzD,YAAM,IAAI,GAAG,KAAK,GAAG,MAAM,KAAK,QAAQ,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3E,YAAM,IAAI,CAAC,IAAI,EAAE;AACjB,gBAAQ,OAAO,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;AAC9B,gBACQ,OAAO,KAAK,CAAC;AACrB,aAAO;AACP,SAAK,CAAC,CAAC;AACP,QACI,MAAM,OAAO,GAAG,MAAM,mBAAmB,IAAI,GAAG,MAAM,GAAG,EAAE,YAAY,KAAK,GAAG,OAAO,GAAG,EAAE,UAAU,OAAO,eAAe,MAAM,GAAG,CAAC;AACzI,QACI,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;AAC7B,KAAG;AACH,IACE,MAAM,MAAM,GAAG,KAAK,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC;AAC7D,IACE,IAAI,QAAQ,IAAI,OAAO,QAAQ,KAAK,QAAQ,EAAE;AAChD,QAAI,MAAM,IAAI,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC;AAClC,QAAI,MAAM,OAAO,GAAG,MACd,mBAAmB,IAAI,GAAG,MAAM,GAAG,EAAE,YAAY,KAAK,GAAG,OAAO,GAAG,EAAE,mBAAmB,QAAQ,IAAI,GAAG,aAAa,MAAM,GAAG,CAAC;AACpI,QACI,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;AAC7B,KAAG;AACH,IACE,MAAM,IAAI,GAAG,KAAK,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,MAAM,KAAK,QAAQ,GAAG,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;AACzG,IAAE,MAAM,OAAO,GAAG,MAAM,mBAAmB,IAAI,GAAG,MAAM,GAAG,EAAE,YAAY,KAAK,GAAG,OAAO,GAAG,EAAE,UAAU,QAAQ,eAAe,MAAM,GAAG,CAAC;AACxI,IACE,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;AAC3B,CAAC,CAAC;AACF;AACA,MAAM,UAAU,GAAG,CAAC,IAAI,KAA2B,OAAO;AAC1D,IAAE,OAAO,EAAE,IAAI;AACf,CAAC,CAAC,CAAC;AACH;AAGe,WAEmB,CAAC,EAAoB;AACvD,IAAE,MAAM,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC;AAC9B,IAAE,MAAM,IAAI,GAAG,MAAM,GAAG,CAAC,CAAC;AAC1B,IAAE,MAAM,OAAO,GAAG,MAAM,YAAY,EAAE,WAAW,IAAI,GAAG,MAAM,GAAG,EAAE,WAAW,CAAC;AAC/E,IACE,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;AAC3B;AAVA;AACA;AACA;AACA;AACA,MAAa,OAAO,GAAG,UAAU,KAM9B;AACH,WAKuC,CAAC,EAAU,EAAE,QAAgB;AACpE,IAAE,MAAM,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC;AAC9B,IAAE,MAAM,IAAI,GAAG,MAAM,KAAK,QAAQ,CAAC;AACnC,IAAE,MAAM,OAAO,GAAG,MAAM,mBAAmB,IAAI,GAAG,MAAM,GAAG,EAAE,mBAAmB,QAAQ,aAAa,MAAM,EAAE,CAAC;AAC9G,IACE,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;AAC3B;AAVA;AACA;AACA;AACA;AACA,MAAa,YAAY,GAAG,UAAU,KAMnC;AACH,WAKmC,CAAC,EAAE,EAAE,QAAQ;AAChD,IAAE,MAAM,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAClC,IAAE,MAAM,IAAI,GAAG,MAAM,KAAK,QAAQ,CAAC;AACnC,IAAE,MAAM,OAAO,GAAG,MAAM,mBAAmB,IAAI,GAAG,MAAM,GAAG,EAAE,gBAAgB,QAAQ,eAAe,MAAM,GAAG,CAAC;AAC9G,IACE,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;AAC3B;AAVA;AACA;AACA;AACA;AACA,MAAa,QAAQ,GAAG,UAAU,KAM/B;AACH,WAOsC,CAAC,EAAE,EAAE,QAA2B;AACtE,IAAE,IAAI,QAAQ,IAAI,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;AAC3C,QAAI,MAAM,MAAM,GAAW,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AAC/C,QAAI,MAAM,eAAe,GAAG,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAC/C,QAAI,MAAM,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC;AACjD,QAAI,MAAM,OAAO,GAAG,MAAM,mBAAmB,IAAI,GAAG,MAAM,GAAG,EAAE,mBAAmB,eAAe,eAAe,MAAM,GAAG,CAAC;AAC1H,QACI,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;AAC7B,KAAG;AACH,IACE,MAAM,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AACrC,IAAE,MAAM,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;AACxC,IAAE,MAAM,OAAO,GAAG,MAAM,mBAAmB,IAAI,GAAG,MAAM,GAAG,EAAE,mBAAmB,QAAQ,eAAe,MAAM,GAAG,CAAC;AACjH,IACE,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;AAC3B;AArBA;AACA;AACA;AACA;AACA;AACA;AACA,MAAa,WAAW,GAAG,UAAU,KAelC;AACH,YAI0C,CAAC,EAAE,EAAE,IAAqB,EAAE,GAAG;AACzE,IAAE,IAAI,QAAQ,CAAC,IAAI,CAAC,EAAE;AACtB,QAAI,IAAI,IAAI,GAAG,KAAK,CAAC;AACrB,QAAI,IAAI,OAAe,CAAC;AACxB,QACI,KAAK,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;AACzC,YAAM,MAAM,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACrC,YAAM,MAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,SAAS,GAAG,gBAAgB,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,EAAE,CAAC;AACnF,YAAM,IAAI,GAAG,WAAW,CAAC,MAAM,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;AAC5C,YAAM,OAAO,GAAG,CAAC,IAAI,GAAG,IAAI,IAAI,IAAI,QAAQ,cAAc,MAAM,GAAG,GAAG,EAAE,CAAC;AACzE,SAAK;AACL,QAAI,MAAM,OAAO,GAAG,MAAM,mBAAmB,IAAI,GAAG,MAAM,GAAG,EAAE,sBAAsB,OAAO,EAAE,CAAC;AAC/F,QACI,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;AAC7B,KAAG;AACH,IACE,MAAM,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAClC,IAAE,MAAM,QAAQ,GAAG,GAAG,KAAK,SAAS,GAAG,gBAAgB,GAAG,GAAG,GAAG,EAAE,CAAC;AACnE,IAAE,MAAM,IAAI,GAAG,WAAW,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;AACxC,IAAE,MAAM,OAAO,GAAG,MAAM,mBAAmB,IAAI,GAAG,MAAM,GAAG,EAAE,uBAAuB,IAAI,IAAI,QAAQ,cAAc,MAAM,GAAG,CAAC;AAC5H,IACE,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;AAC3B;AAzBA;AACA;AACA;AACA,MAAa,eAAe,GAAG,UAAU,MAsBtC;AACH,YAKyC,CAAC,EAAE,EAAE,IAAI,EAAE,GAAG;AACvD,IAAE,IAAI,QAAQ,CAAC,IAAI,CAAC,EAAE;AACtB,QAAI,OAAO,aAAa,CAAC,EAAE,EAAE,IAAI,EAAE,WAAW,CAAC,CAAC;AAChD,KAAG;AACH,IACE,MAAM,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAClC,IAAE,MAAM,QAAQ,GAAG,GAAG,KAAK,SAAS,GAAG,gBAAgB,GAAG,GAAG,GAAG,EAAE,CAAC;AACnE,IAAE,MAAM,IAAI,GAAG,WAAW,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;AACxC,IAAE,MAAM,OAAO,GAAG,MAAM,mBAAmB,IAAI,GAAG,MAAM,GAAG,EAAE,sBAAsB,IAAI,IAAI,QAAQ,cAAc,MAAM,GAAG,CAAC;AAC3H,IACE,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;AAC3B;AAfA;AACA;AACA;AACA;AACA,MAAa,cAAc,GAAG,UAAU,MAWrC;AACH,YAC4C,CAAC,EAAE,EAAE,IAAI,EAAE,GAAG;AAC1D,IAAE,IAAI,QAAQ,CAAC,IAAI,CAAC,EAAE;AACtB,QAAI,OAAO,aAAa,CAAC,EAAE,EAAE,IAAI,EAAE,gBAAgB,CAAC,CAAC;AACrD,KAAG;AACH,IACE,MAAM,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAClC,IAAE,MAAM,QAAQ,GAAG,GAAG,KAAK,SAAS,GAAG,gBAAgB,GAAG,GAAG,GAAG,EAAE,CAAC;AACnE,IAAE,MAAM,IAAI,GAAG,gBAAgB,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;AAC7C,IAAE,MAAM,OAAO,GAAG,MAAM,mBAAmB,IAAI,GAAG,MAAM,GAAG,EAAE,sBAAsB,IAAI,IAAI,QAAQ,cAAc,MAAM,GAAG,CAAC;AAC3H,IACE,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;AAC3B;AAAG,MAXU,iBAAiB,GAAG,UAAU,MAWxC;AACH,YAQqC,CAAC,EAAE,EAAE,QAAQ,EAAE,KAAK,GAAG,KAAK,KAAK,WAAW,CAAC,EAAE,EAAE,QAAQ,EAAE,KAAK;AAPrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAa,UAAU,GAAG,UAAU,MAAoE;AACxG,YAC0C,CAAC,EAAE,EAAE,QAAQ,KAAK,WAAW,CAAC,EAAE,EAAE,QAAQ,EAAE,IAAI;AAAG,MAAhF,eAAe,GAAG,UAAU,MAAoD;AAC7F,MACa,aAAa,GAAG,WAAW;AACxC,YAMsC,CAAC,EAAE,EAAE,QAAQ;AACnD,IAAE,IAAI,QAAQ,IAAI,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;AAC3C,QAAI,IAAI,MAAc,CAAC;AACvB,QAAI,IAAI,IAAI,GAAG,KAAK,CAAC;AACrB,QAAI,IAAI,OAAe,CAAC;AACxB,QACI,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;AACpB,YAAM,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;AAC1B,YAAM,IAAI,GAAG,MAAM,KAAK,QAAQ,CAAC,CAAC,CAAC,CAAC;AACpC,YAAM,IAAI,CAAC,IAAI,EAAE;AACjB,gBAAQ,OAAO,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;AAC9B,gBACQ,OAAO,KAAK,CAAC;AACrB,aAAO;AACP,SAAK,CAAC,CAAC;AACP,QACI,MAAM,OAAO,GAAG,MAAM,mBAAmB,IAAI,GAAG,MAAM,GAAG,EAAE,mBAAmB,OAAO,eAAe,MAAM,GAAG,CAAC;AAClH,QACI,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;AAC7B,KAAG;AACH,IACE,MAAM,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC;AAC7B,IAAE,MAAM,IAAI,GAAG,MAAM,KAAK,QAAQ,CAAC;AACnC,IAAE,MAAM,OAAO,GAAG,MAAM,mBAAmB,IAAI,GAAG,MAAM,GAAG,EAAE,mBAAmB,QAAQ,eAAe,MAAM,GAAG,CAAC;AACjH,IACE,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;AAC3B;AA/BA;AACA;AACA;AACA;AACA;AACA,MAAa,WAAW,GAAG,UAAU,MA0BlC;AACH,MACa,cAAc,GAAG,YAAY;AAC1C,YAOsC,CAAC,EAAE,EAAE,QAAQ;AACnD,IAAE,MAAM,IAAI,GAAG,MAAM,CAAC,EAAE,EAAE,QAAQ,CAAC,CAAC;AACpC,IAAE,MAAM,OAAO,GAAG,MAAM,mBAAmB,IAAI,GAAG,MAAM,GAAG,EAAE,gBAAgB,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE,CAAC;AACxG,IACE,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;AAC3B;AAXA;AACA;AACA;AACA;AACA;AACA;AACA,MAAa,WAAW,GAAG,UAAU,MAKlC;AACH,YAKqC,CAAC,EAAE,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE;AACvD,IAAE,MAAM,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAClC,IAAE,MAAM,QAAQ,GAAG,GAAG,KAAK,SAAS,GAAG,gBAAgB,GAAG,GAAG,GAAG,EAAE,CAAC;AACnE,IAAE,MAAM,IAAI,GAAG,WAAW,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;AACxC,IAAE,MAAM,OAAO,GAAG,MAAM,mBAAmB,IAAI,GAAG,MAAM,GAAG,EAAE,kBAAkB,IAAI,IAAI,QAAQ,cAAc,MAAM,GAAG,CAAC;AACvH,IACE,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;AAC3B;AAXA;AACA;AACA;AACA;AACA,MAAa,UAAU,GAAG,UAAU,MAOjC;AACH,YAKsC,EAAE;AACxC,IAAE,MAAM,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC;AACpC,IAAE,MAAM,OAAO,GAAG,MAAM,mBAAmB,IAAI,GAAG,MAAM,GAAG,EAAE,gBAAgB,CAAC;AAC9E,IACE,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;AAC3B;AATA;AACA;AACA;AACA;AACA,MAAa,WAAW,GAAG,UAAU,MAKlC;AACH,YAKuC,EAAE;AACzC,IAAE,MAAM,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,WAAW,CAAC,CAAC;AACrC,IAAE,MAAM,OAAO,GAAG,MAAM,mBAAmB,IAAI,GAAG,MAAM,GAAG,EAAE,iBAAiB,CAAC;AAC/E,IACE,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;AAC3B;AATA;AACA;AACA;AACA;AACA,MAAa,YAAY,GAAG,UAAU,MAKnC;AACH,YAMoC,EAAE;AACtC,IAAE,MAAM,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC;AAClC,IAAE,MAAM,OAAO,GAAG,MAAM,mBAAmB,IAAI,GAAG,MAAM,GAAG,EAAE,cAAc,CAAC;AAC5E,IACE,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;AAC3B;AAVA;AACA;AACA;AACA;AACA;AACA,MAAa,SAAS,GAAG,UAAU,MAKhC;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,QAAQ,CAAC,YAAkC;AAAI,IACtD,IAAI,EAAE,GAAG,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9B,IACE,IAAI,CAAC,EAAE,EAAE;AACX,QAAI,OAAO,IAAI,CAAC;AAChB,KAAG;AACH,IACE,MAAM,UAAU,GAAG;AACrB,QAAI,EAAE,IAAI,EAAE,EAAE,CAAC,WAAW,IAAI,EAAE,CAAC,YAAY,IAAI,EAAE,CAAC,cAAc,EAAE,CAAC,MAAM,CAAC;AAC5E,QAAI,EAAE,IAAI,EAAE,CAAC,KAAK,CAAC,OAAO,KAAK,MAAM;AACrC,QAAI,EAAE,IAAI,EAAE,CAAC,KAAK,CAAC,UAAU,KAAK,QAAQ;AAC1C,QAAI,EAAE,IAAI,EAAE,CAAC,IAAI,KAAK,QAAQ;AAC9B,QAAI,EAAE,IAAI,EAAE,CAAC,YAAY,CAAC,QAAQ,CAAC;AACnC,KAAG,CAAC;AACJ,IACE,IAAI,gBAAgB,EAAE,EAAE;AAC1B;AACI;AACI,QAAJ,UAAU,CAAC,KAAK,EAAE,CAAC;AACvB,KAAG;AACH,IACE,OAAO,EAAE,EAAE;AACb,QAAI,IAAI,EAAE,KAAK,QAAQ,EAAE;AACzB,YAAM,MAAM;AACZ,SAAK;AACL,QACI,IAAI,UAAU,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE;AAC3C,YAAM,OAAO,IAAI,CAAC;AAClB,SAAK;AACL,QACI,EAAE,GAAG,EAAE,CAAC,UAAU,CAAC;AACvB,KAAG;AACH,IACE,OAAO,KAAK,CAAC;AACf,CAAC;AACD,YAYqC,EAAE;AACvC,IAAE,MAAM,IAAI,GAAG,QAAQ,CAAC,EAAE,CAAC,CAAC;AAC5B,IAAE,MAAM,OAAO,GAAG,MAAM,mBAAmB,IAAI,GAAG,MAAM,GAAG,EAAE,eAAe,CAAC;AAC7E,IACE,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;AAC3B;AAhBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAa,UAAU,GAAG,UAAU,MAKjC;AACH,YAOuC,EAAE;AACzC,IAAE,MAAM,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,WAAW,CAAC,CAAC;AACrC,IAAE,MAAM,OAAO,GAAG,MAAM,mBAAmB,IAAI,GAAG,MAAM,GAAG,EAAE,iBAAiB,CAAC;AAC/E,IACE,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;AAC3B;AAXA;AACA;AACA;AACA;AACA;AACA;AACA,MAAa,YAAY,GAAG,UAAU,MAKnC;AACH,YAYsC,EAAE;AACxC,IAAE,MAAM,IAAI,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;AAC7B,IACE,MAAM,OAAO,GAAG,MAAM,mBAAmB,IAAI,GAAG,MAAM,GAAG,EAAE,gBAAgB,CAAC;AAC9E,IACE,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;AAC3B;AAjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAa,WAAW,GAAG,UAAU,MAMlC;AACH,YAMsC,EAAE;AACxC,IAAE,MAAM,OAAO,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AAC/B,IAAE,MAAM,IAAI,GAAG,OAAO,KAAK,OAAO,CAAC,aAAa,CAAC,aAAa,CAAC;AAC/D,IAAE,MAAM,OAAO,GAAG,MAAM,mBAAmB,IAAI,GAAG,MAAM,GAAG,EAAE,gBAAgB,CAAC;AAC9E,IACE,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;AAC3B;AAXA;AACA;AACA;AACA;AACA;AACA,MAAa,WAAW,GAAG,UAAU,MAMlC;AACH,YAOwC,CAAC,EAAE,EAAE,QAAQ;AACrD,IAAE,MAAM,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC;AAC/C,IAAE,MAAM,IAAI,GAAG,MAAM,GAAG,CAAC,CAAC;AAC1B,IAAE,MAAM,OAAO,GAAG,MAAM,mBAAmB,IAAI,GAAG,MAAM,GAAG,EAAE,sBAAsB,QAAQ,GAAG,CAAC;AAC/F,IACE,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;AAC3B;AAZA;AACA;AACA;AACA;AACA;AACA;AACA,MAAa,aAAa,GAAG,UAAU,MAMpC;AACH,YAK2C,CAAC,EAAE,EAAE,QAAQ;AACxD,IAAE,MAAM,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC;AAC7C,IAAE,MAAM,IAAI,GAAG,MAAM,GAAG,CAAC,CAAC;AAC1B,IAAE,MAAM,OAAO,GAAG,MAAM,mBAAmB,IAAI,GAAG,MAAM,GAAG,EAAE,sBAAsB,QAAQ,GAAG,CAAC;AAC/F,IACE,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;AAC3B;AAVA;AACA;AACA;AACA;AACA,MAAa,gBAAgB,GAAG,UAAU,MAMvC;AACH,YAKmD,CAAC,EAAE,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE;AAC1E,IAAE,MAAM,MAAM,GAAG,CAAC,CAAC,IAAI,CACnB,CAAC,CAAC,EAAE,CAAC;AACT,SAAO,IAAI,CAAC,QAAQ,CAAC;AACrB,SAAO,IAAI,EAAE,CACV,CAAC;AACJ,IAAE,IAAI,IAAI,IAAI,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;AACvC,QAAI,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACnC,QAAI,MAAM,OAAO,GAAG,MACd,mBAAmB,IAAI,GAAG,MAAM,GAAG,EAAE,wBAAwB,QAAQ,yBAAyB,IAAI,IAAI,GAAG,aAAa,MAAM,GAAG,CAAC;AACtI,QACI,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;AAC7B,KAAG;AACH,IAAE,MAAM,IAAI,GAAG,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;AAC3C,IAAE,MAAM,OAAO,GAAG,MAAM,mBAAmB,IAAI,GAAG,MAAM,GAAG,EAAE,wBAAwB,QAAQ,gBAAgB,IAAI,eAAe,MAAM,GAAG,CAAC;AAC1I,IACE,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;AAC3B;AArBA;AACA;AACA;AACA;AACA,MAAa,wBAAwB,GAAG,UAAU,MAiB/C;AACH,YACgD,CAAC,EAAE,EAAE,QAAQ;AAC7D,IAAE,IAAI,QAAQ,YAAY,iBAAiB,EAAE;AAC7C,QAAI,MAAM,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;AAC3C,QACI,MAAM,IAAI,GAAG,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;AACxC,QACI,MAAM,OAAO,GAAG,MACd,mBAAmB,IAAI,GAAG,MAAM,GAAG,EAAE,sBAAsB,QAAQ,CAAC,SAAS,gBAAgB,MAAM,CAAC,CAAC,CAAC,CAAC,SAAS,IAAI,CAAC;AAC3H,QACI,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;AAC7B,KAAG;AACH,IACE,IAAI,wBAAwB,CAAC,QAAQ,CAAC,EAAE;AAC1C,QAAI,MAAM,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;AAC3C,QACI,MAAM,IAAI,GAAG,MAAM,CAAC,MAAM,KAAK,QAAQ,CAAC,MAAM,IAAI,MAAM,CAAC,OAAO,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,KAAK,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AACjI,QACI,MAAM,qBAAqB,GAAG,CAAC,CAAC,QAAQ,CAAC;AAC7C,aAAO,GAAG,EAAE;AACZ,aAAO,GAAG,CAAC,MAAM,IAAI,MAAM,CAAC,SAAS,CAAC;AACtC,aAAO,IAAI,CAAC,GAAG,CAAC,CAAC;AACjB,QACI,MAAM,mBAAmB,GAAG,MAAM;AACtC,aAAO,GAAG,EAAE;AACZ,aAAO,GAAG,CAAC,MAAM,IAAI,MAAM,CAAC,SAAS,CAAC;AACtC,aAAO,IAAI,CAAC,GAAG,CAAC,CAAC;AACjB,QACI,MAAM,OAAO,GAAG,MACd,mBAAmB,IAAI,GAAG,MAAM,GAAG,EAAE,sBAAsB,qBAAqB,gBAAgB,mBAAmB,IAAI,CAAC;AAC9H,QACI,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;AAC7B,KAAG;AACH,IACE,MAAM,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC;AAC7B,IAAE,MAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,KAAK,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC;AAC7E,IACE,MAAM,qBAAqB,GAAG,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC;AACvD,UAAM,QAAQ,CAAC,MAAM,CAAC,CAAC,GAAW,EAAE,GAAW,EAAE,CAAC,KAAK,GAAG,GAAG,GAAG,CAAC,KAAK,QAAQ,CAAC,MAAM,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,EAAE,CAAC;AACzG,UAAM,QAAQ,CAAC;AACf,IAAE,MAAM,OAAO,GAAG,MAAM,mBAAmB,IAAI,GAAG,MAAM,GAAG,EAAE,sBAAsB,qBAAqB,gBAAgB,MAAM,IAAI,CAAC;AACnI,IACE,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;AAC3B;AAAG,MA1CU,qBAAqB,GAAG,UAAU;AAAO;AAAC;AAClB;AAC1B;AAAsB;AAEb;AAElB;AACI;AAAsC;AAAoC;AAA0C;AAEjG;AAGG;AACV;AAEf;AAAoC;AAA8B;AAA4B;AAA8B;AAEnG;AACpB;AACe;AACP;AAEW;AAEtB;AACL;AAEqB;AAC8B;AAAkD;AAAc;AACnH;AACW;AAAY;AAGvB;AAAY;AAAY;AAClB;AAAY;AAAY;AAAc;AAAc;AAAc;AAEjE;AAAc;AAAc;AAAc;AAC1C;AAAc;AAAc;AAAc;AAAc;AAAc;AAAc;AAAc;AAC5F;AACF;AAAc;AAAa;AAAI;AAAC,SCnhB3B,WAAW,CAAC,QAA8C;AAAI,IAC5E,IAAI,CAAC,QAAQ;AAAE,QAAA,OAAO;AACxB,IACE,IAAI,OAAO,OAAO,KAAK,WAAW,EAAE;AACtC,QAAI,OAAO,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;AAClC,KAAG;AACH,IAAE,IAAI,OAAO,IAAI,KAAK,WAAW,EAAE;AACnC,QAAI,MAAM,gBAAgB,GAAG,EAAE,CAAC;AAChC,QAAI,KAAK,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE;AAC7C,YAAM,IAAI,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC;AAAE,gBAAA,gBAAgB,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC;AAChF,SAAK;AACL,QACK,MAAc,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC;AAC7C,KAAG;AACH;AACA;AClBA,IAAI,OAAO,GAAuB;AAClC,IAAE,SAAS,EAAE,EAAE;AACf,IAAE,YAAY,EAAE,EAAE;AAClB,IAAE,OAAO,EAAE,EAAE;AACb,CAAC,CAAC;AACF,SACgB,uBAAuB,CAAC,MAA0B;AAAI,IACpE,OAAO,mCAAQ,OAAO,GAAK,MAAM,CAAE,CAAC;AACtC,CAAC;AACD,SACgB,oBAAoB;AAAK,IACvC,OAAO,OAAO,CAAC;AACjB;AACA;ACGA;AACA;AACA;AACA,SAAgB,aAAa,CAAC,OAAuC;AAAI,IACvE,MAAM,OAAO,mBAAK,OAAO,EAAE,EAAE,EAAE,YAAY,EAAE,EAAE,EAAE,SAAS,EAAE,EAAE,IAAK,oBAAoB,EAAE,CAAE,CAAC;AAC9F,IACE,OAAO;AACT,QAAI,YAAY,EAAE,CAAC,GAAG,OAAO,CAAC,YAAY,EAAE,GAAG,OAAO,CAAC,YAAY,EAAE,GAAG,OAAO,CAAC,eAAe,CAAC;AAChG,QAAI,OAAO,EAAE,CAAC,IAAI,OAAO,CAAC,iBAAiB,GAAG,CAAC,oBAAoB,CAAC,GAAG,EAAE,CAAC,EAAE,GAAG,OAAO,CAAC,OAAO,EAAE,GAAG,OAAO,CAAC,OAAO,CAAC;AACnH,QAAI,SAAS,EAAE,CAAC,GAAG,OAAO,CAAC,SAAS,EAAE,GAAG,OAAO,CAAC,SAAS,EAAE,GAAG,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,IAAI,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;AACrH,QAAI,eAAe,EAAE,CAAC,GAAG,OAAO,CAAC,eAAe,CAAC;AACjD,KAAG,CAAC;AACJ;AACA;ACzBA;AACA;AACA;AACA,SAAgB,sBAAsB,CAAI,OAAsC;AAAI,IAClF,MAAM,cAAc,GAAG,aAAa,CAAC,OAAO,CAAC,CAAC;AAChD,IACE,IAAI,OAAO,CAAC,gBAAgB,EAAE;AAChC,QAAI,cAAc,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;AACxD,KAAG;AACH,IACE,cAAc,CAAC,OAAO,GAAG,CAAC,OAAO,CAAC,OAAO,GAAG,gBAAgB,GAAG,OAAO,CAAC,OAAO,IAAI,EAAE,CAAC,CAAC;AACxF,IACE,OAAO,cAAc,CAAC;AACxB;AACA;AClBA;AACA;AACA;AACA,SAAgB,KAAK,CAAI,QAA8B,EAAE,SAAa;AAAI;AACtB,IAClD,OAAO,gCAAK,QAAQ,GAAK,SAAS,CAAiB,CAAC;AACtD;AACA;AC6BA;AACA;AACA;AACA,SAAgB,mBAAmB,CAAI,IAAS,EAAE,KAAU,EAAE,WAAqB;AAAI,IACrF,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,MAAM,CAAC,SAAS,EAAE;AACpD,QAAI,OAAO;AACX,KAAG;AACH,IACE,KAAK,MAAM,GAAG,IAAI,MAAM,CAAC,mBAAmB,CAAC,KAAK,CAAC,EAAE;AACvD,QAAI,MAAM,UAAU,GAAG,MAAM,CAAC,wBAAwB,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;AACnE,QACI,IAAI,CAAC,UAAU,EAAE;AACrB,YAAM,SAAS;AACf,SAAK;AACL,QACI,IAAI,OAAO,UAAU,CAAC,KAAK,KAAK,UAAU,IAAI,GAAG,KAAK,aAAa,IAAI,OAAO,IAAI,CAAC,GAAG,CAAC,KAAK,WAAW,EAAE;AAC7G,YAAM,IAAI,CAAC,GAAG,CAAC,GAAG,WAAW,CAAC,GAAG,CAAC,CAAC;AACnC,SAAK;AAAC,aAAK,IAAI,UAAU,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE;AAC5D,YAAM,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,GAAG,EAAE;AACvC,gBAAQ,GAAG,EAAE,KAAK,KAAK,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC,GAAG,KAAK,CAAC;AAC/C,gBAAQ,GAAG,EAAE,MAAM,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;AAClC,gBAAQ,YAAY,EAAE,IAAI;AAC1B,aAAO,CAAC,CAAC;AACT,SAAK;AACL,KAAG;AACH,IACE,mBAAmB,CAAC,IAAI,EAAE,MAAM,CAAC,cAAc,CAAC,KAAK,CAAC,EAAE,WAAW,CAAC,CAAC;AACvE,IACE,IAAI,CAAC,cAAc,GAAG,MAAM,IAAI,CAAC;AACnC,CAAC;AAED;AACA;AACA;AACA,SAAgB,eAAe,CAAI,IAA+B,EAAE,QAAwC;AAAI,IAC9G,MAAM,IAAI,GAAQ,kBAAK,QAAQ,KAAM,EAAE,CAAC;AAC1C,IACE,mBAAmB,CAAI,IAAI,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI;AACnD,QAAI,MAAM,MAAM,GAAyC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;AACjF,QAAI,MAAM,CAAC,WAAW,GAAG,CAAC,EAA2B,KAAU,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;AACvF,QAAI,MAAM,CAAC,SAAS,GAAG,GAAG,IAAI,MAAM,CAAC,GAAG,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;AAC1D,QAAI,MAAM,CAAC,KAAK,GAAG,MAAM,MAAM,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;AAC9C;AACI,QAAA,MAAM,CAAC,GAAG,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;AACjC,QACI,OAAO,MAAM,CAAC;AAClB,KAAG,CAAC,CAAC;AACL,IACE,OAAO,IAAI,CAAC;AACd,CAAC;AAED;AACA;AACA;AACA,SAAgB,YAAY,CAAI,IAA+B,EAAE,UAA0C;AAAI,IAC7G,OAAO;AACT,QAAI,OAAO,EAAE,IAAI;AACjB,QAAI,UAAU,EAAE,MAAM,eAAe,CAAC,IAAI,EAAE,UAAU,CAAC;AACvD,KAAG,CAAC;AACJ;AACA;ACrEA,MAAM,cAAc,GAA4C;AAChE,IAAE,iBAAiB,EAAE,IAAI;AACzB,IAAE,eAAe,EAAE,EAAE;AACrB,IAAE,KAAK,EAAE,EAAE;AACX,IAAE,YAAY;AACd,IAAE,SAAS,EAAE,EAAE;AACf,IAAE,YAAY,EAAE,EAAE;AAClB,IAAE,OAAO,EAAE,EAAE;AACb,IAAE,OAAO,EAAE,EAAE;AACb,IAAE,eAAe,EAAE,EAAE;AACrB,CAAC,CAAC;AAEF;AACA;AACA;AACA,SAAgB,qBAAqB,CAAC,OAA8B;AAAI,IACtE,OAAO,KAAK,CAAuB,cAAc,EAAE,OAAO,CAAC,CAAC;AAC9D;AACA;AC3BA,MAAM,uBAAuB,mCACxB,qBAAqB,EAAE,KAC1B,OAAO,EAAE,KAAK,EACd,gBAAgB,EAAE,IAAI,EACtB,aAAa,EAAE,IAAI,EACnB,kBAAkB,EAAE,EAAE,EACtB,sBAAsB,EAAE,EAAE,EAC1B,cAAc,EAAE,EAAE,EAClB,2BAA2B,EAAE,EAAE,GAChC,CAAC;AAEF;AACA;AACA;AACA,SAAgB,0BAA0B,CAAI,SAA+B;AAAI,IAC/E,OAAO,KAAK,CAAC,uBAAuB,EAAE,SAAS,CAAC,CAAC;AACnD;AACA;ACVA;AACA;AACA;AACA,SAAgB,6CAA6C,CAAI,OAAsC;AAAI,IACzG,MAAM,oBAAoB,GAAG,OAAO,CAAC,kBAAkB,CAAC,MAAM,IAAI,OAAO,CAAC,cAAc,CAAC,MAAM,CAAC;AAClG,IAAE,MAAM,gBAAgB,GAAG,OAAO,CAAC,sBAAsB,CAAC,MAAM,IAAI,OAAO,CAAC,2BAA2B,CAAC,MAAM,CAAC;AAC/G,IAAE,IAAI,oBAAoB,IAAI,gBAAgB,EAAE;AAChD,QAAI,IAAI,qBAAqB,GAAG,EAAE,CAAC;AACnC,QAAI,IAAI,oBAAoB,EAAE;AAC9B,YAAM,qBAAqB,GAAG;AAC9B,gBAAQ,SAAS,EAAE,CAAC,GAAG,OAAO,CAAC,kBAAkB,EAAE,GAAG,OAAO,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,IAAI,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/G,aAAO,CAAC;AACR,SAAK;AACL,QAAI,IAAI,gBAAgB,EAAE;AAC1B,YAAM,qBAAqB,mCAChB,qBAAqB,KACxB,aAAa,EAAE,CAAC,GAAG,OAAO,CAAC,sBAAsB,EAAE,GAAG,OAAO,CAAC,2BAA2B,CAAC,GAAG,CAAC,CAAC,IAAI,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,GAC7H,CAAC;AACR,SAAK;AACL,QAAI,OAAO,CAAC,iBAAiB,CAAC,OAAO,CAAC,SAAS,EAAE;AACjD,YAAM,GAAG,EAAE,qBAAqB;AAChC,SAAK,CAAC,CAAC;AACP,KAAG;AACH,CAAC;AAED;AACA;AACA;AACA,SAAgB,eAAe,CAAC,OAAuC;AAAI,IACzE,IAAI,OAAO,CAAC,eAAe,CAAC,MAAM,EAAE;AACtC,QAAI,OAAO,CAAC,eAAe,CAAC,OAAO,CAAC,cAAc;AAClD,YAAM,MAAM,CAAC,QAAQ,EAAE,QAAQ,CAAC,GAAG,cAAc,CAAC;AAClD,YACM,OAAO,CAAC,cAAc,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;AACjD,SAAK,CAAC,CAAC;AACP,KAAG;AACH,CAAC;AAED;AACA;AACA;AACA,SAAgB,sBAAsB,CAAI,aAA4C;AAAI,IACxF,MAAM,OAAO,GAAG,MAAM,CAAC,aAAa,CAAC;AACvC,UAAM,0BAA0B,CAAI,EAAE,SAAS,EAAE,aAAa,EAAE,CAAC;AACjE,UAAM,0BAA0B,CAAC,aAAa,CAAC,CAAC;AAChD,IACE,MAAM,cAAc,GAAG,sBAAsB,CAAI,OAAO,CAAC,CAAC;AAC5D,IACE,UAAU,CACR,YAAY,CAAC;AACjB,QAAM,WAAW,CAAC,cAAc,CAAC,CAAC;AAClC,QAAM,OAAO,CAAC,sBAAsB,CAAC,cAAc,CAAC,CAAC,cAAc,CAAC,2BAA2B,EAAE;AACjG,YAAQ,GAAG,EAAE;AACb,gBAAU,eAAe,EAAE,cAAc,CAAC,eAAe;AACzD,aAAS;AACT,SAAO,CAAC,CAAC;AACT,QACM,eAAe,CAAC,OAAO,CAAC,CAAC;AAC/B,QACM,6CAA6C,CAAC,OAAO,CAAC,CAAC;AAC7D,QACM,OAAO,CAAC,iBAAiB,EAAE,CAAC;AAClC,KAAK,CAAC,CACH,CAAC;AACJ,IACE,OAAO,CAAC,SAAiC;AAC3C,QAAI,MAAM,QAAQ,GAA0B,EAAE,KAAK,EAAE,EAAE,EAAE,aAAa,EAAE,IAAI,EAAE,SAAS,EAAE,EAAE,EAAE,CAAC;AAC9F,QAAI,MAAM,EAAE,aAAa,EAAE,KAAK,EAAE,SAAS,EAAE,mCAAQ,QAAQ,GAAK,SAAS,CAAE,CAAC;AAC9E,QACI,IAAI,SAAS,IAAI,SAAS,CAAC,MAAM,EAAE;AACvC,YAAM,SAAS,CAAC,OAAO,CAAC,CAAC,QAAkB;AAC3C,gBAAQ,OAAO,CAAC,gBAAgB,CAAE,QAAgB,CAAC,OAAO,EAAE,QAAe,CAAC,CAAC;AAC7E,aAAO,CAAC,CAAC;AACT,SAAK;AACL,QACI,MAAM,SAAS,GAAG,eAAe,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;AACtD,QACI,IAAI,OAAO,CAAC,aAAa,IAAI,aAAa,EAAE;AAChD,YAAM,SAAS,CAAC,aAAa,EAAE,CAAC;AAChC,SAAK;AACL,QACI,OAAO,SAAS,CAAC;AACrB,KAAG,CAAC;AACJ,CAAC;AAED,SAAS,eAAe,CAAI,OAAsC,EAAE,KAAkB;AAAI,IACxF,MAAM,OAAO,GAAG,OAAO,CAAC,eAAe,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;AAC7D,IAAE,MAAM,YAAY,GAAG,OAAO,CAAC,YAAY,CAAC;AAC5C,IACE,MAAM,SAAS,GAAG,QAAQ,CAAC,OAAO,CAAC,iBAAiB,EAAE,KAAK,CAAC,CAAC;AAC/D,IACE,OAAO,IAAI,SAAS,CAAC,OAAO,EAAE,YAAY,EAAE,SAAS,EAAE,YAAY,CAAC,aAAa,CAAC,CAAC;AACrF;AACA;AC7GA;AACA;AACA;AACA,MAAa,aAAoC,SAAQ,SAAY;AACrE,IAAE,YACS,aAAgB,EAChB,gBAA8B,EAC9B,WAAoB,EACpB,WAAkC,EAClC,YAA0B,EACjC,iBAAoB,EACb,OAAoB;AAC5B,QACC,KAAK,CAAC,WAAW,EAAE,YAAY,EAAE,iBAAiB,EAAE,OAAO,CAAC,CAAC;AACjE,QATW,kBAAa,GAAb,aAAa,CAAG;AAAC,QACjB,qBAAgB,GAAhB,gBAAgB,CAAc;AAAC,QAC/B,gBAAW,GAAX,WAAW,CAAS;AAAC,QACrB,gBAAW,GAAX,WAAW,CAAuB;AAAC,QACnC,iBAAY,GAAZ,YAAY,CAAc;AAAC,QAE3B,YAAO,GAAP,OAAO,CAAa;AAC/B,KAEG;AACH,IAIS,SAAS,CAAI,mBAA8B,EAAE,OAAyB;AAAI,QAC/E,IAAI,CAAC,OAAO,IAAI,EAAE,EAAE,IAAI,IAAI,QAAQ,CAAC,mBAAmB,CAAC,EAAE;AAC/D,YAAM,OAAO,QAAQ,CAAC,aAAa,CAAC,mBAAmB,CAAC,CAAC;AACzD,SAAK;AACL,QACI,OAAO,WAAW,CAAI,IAAI,CAAC,gBAAgB,CAAC,CAAC,mBAAmB,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC;AAC1F,KAAG;AACH,IAIS,YAAY,CAAI,mBAA8B,EAAE,OAAyB;AAAI,QAClF,IAAI,CAAC,OAAO,IAAI,EAAE,EAAE,IAAI,IAAI,QAAQ,CAAC,mBAAmB,CAAC,EAAE;AAC/D,YAAM,OAAO,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,mBAAmB,CAAC,CAAC,CAAC;AACxE,SAAK;AACL,QACI,OAAO,WAAW,CAAI,IAAI,CAAC,gBAAgB,CAAC,CAAC,mBAAmB,EAAE,OAAO,CAAC,CAAC;AAC/E,KAAG;AACH,IAGS,YAAY,CAAC,KAAU,EAAE,KAAW;AAAI,QAC7C,QAAQ,CAAC,IAAI,CAAC,aAAa,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;AACtD,QAAI,IAAI,CAAC,aAAa,EAAE,CAAC;AACzB,KAAG;AACH;AACA;ACtDA;AACA;AACA,SAAgB,eAAe,CAAC,IAAe;AAAI,IACjD,OAAO,SAAS,IAAI,SAAS,CAAC,cAAc,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;AAC9D;AACA;ACFA;AACA;AACA;AACA,SAAgB,8BAA8B,CAAO,OAA6C;AAAI,IACpG,MAAM,cAAc,GAAG,sBAAsB,CAAI,OAAO,CAAC,CAAC;AAC5D,IACE,cAAc,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;AACjD,IACE,OAAO,cAAc,CAAC;AACxB;AACA;AAAC,MCVY,aAAa;AAAG;yCAH5B,SAAS,SAAC,kBACT,QAAQ,EAAE,EAAE;QACb;;;;;;0BACI;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,MAGa,UAAU;AAAG;sCAHzB,QAAQ,SAAC,kBACR,YAAY;CAAE,CAAC,aAAa,CAAC,cAC9B;;;;;;;;iJACI;AAAC;ACAN,MAAM,2BAA2B,mCAC5B,0BAA0B,EAAO,KACpC,IAAI,EAAE,aAAa,EACnB,QAAQ,EAAE,EAAE,GACb,CAAC;AAEF;AACA;AACA;AACA,SAAgB,8BAA8B,CAAO,SAAsC;AAAI,IAC7F,OAAO,KAAK,CAAC,2BAA2B,EAAE,SAAS,CAAC,CAAC;AACvD;AACA;AAAC,SCsBe,iBAAiB,CAAuB,aAAmD;AAAI,IAC7G,MAAM,OAAO,GAAG,MAAM,CAAC,aAAa,CAAC;AACvC,UAAM,8BAA8B,CAAO,EAAE,SAAS,EAAE,aAAa,EAAE,CAAC;AACxE,UAAM,8BAA8B,CAAC,aAAa,CAAC,CAAC;AACpD,IACE,MAAM,cAAc,GAAG,8BAA8B,CAAO,OAAO,CAAC,CAAC;AACvE,IACE,UAAU,CACR,YAAY,CAAC;AACjB,QAAM,WAAW,CAAC,cAAc,CAAC,CAAC;AAClC,QAAM,OAAO,CAAC,sBAAsB,CAAC,cAAc,CAAC,CAAC;AACrD,QACM,eAAe,CAAC,OAAO,CAAC,CAAC;AAC/B,QACM,6CAA6C,CAAC,OAAO,CAAC,CAAC;AAC7D,KAAK,CAAC,CACH,CAAC;AACJ,IACE,OAAO,CAAK,QAAiB,EAAE,SAA4C;AAC7E,QAAI,MAAM,QAAQ,GAAqC,EAAE,KAAK,EAAE,EAAE,EAAE,SAAS,EAAE,EAAS,EAAE,aAAa,EAAE,IAAI,EAAE,SAAS,EAAE,EAAE,EAAE,CAAC;AAC/H,QAAI,MAAM,EAAE,aAAa,EAAE,KAAK,EAAE,SAAS,EAAE,SAAS,EAAE,mCAAQ,QAAQ,GAAK,SAAS,CAAE,CAAC;AACzF,QACI,IAAI,SAAS,IAAI,SAAS,CAAC,MAAM,EAAE;AACvC,YAAM,SAAS,CAAC,OAAO,CAAC,CAAC,QAAkB;AAC3C,gBAAQ,OAAO,CAAC,gBAAgB,CAAE,QAAgB,CAAC,OAAO,EAAE,QAAe,CAAC,CAAC;AAC7E,aAAO,CAAC,CAAC;AACT,SAAK;AACL,QACI,OAAO,CAAC,cAAc,CAAC,2BAA2B,EAAE;AACxD,YAAM,GAAG,EAAE;AACX,gBAAQ,eAAe,EAAE,cAAc,CAAC,eAAe;AACvD,aAAO;AACP,SAAK,CAAC,CAAC,iBAAiB,CAAC,OAAO,CAAC,IAAI,EAAE;AACvC,YAAM,GAAG,EAAE,EAAE,QAAQ,EAAE,QAAQ,IAAI,OAAO,CAAC,QAAQ,EAAE;AACrD,SAAK,CAAC,CAAC;AACP,QACI,MAAM,SAAS,GAAG,mBAAmB,CAAC,OAAO,EAAE,KAAK,EAAE,SAAS,CAAC,CAAC;AACrE,QACI,IAAI,OAAO,CAAC,aAAa,IAAI,aAAa,EAAE;AAChD,YAAM,SAAS,CAAC,aAAa,EAAE,CAAC;AAChC,SAAK;AACL,QACI,OAAO,SAAS,CAAC;AACrB,KAAG,CAAC;AACJ,CAAC;AAED,SAAS,mBAAmB,CAC1B,OAA6C,EAC7C,KAAkB,EAClB,SAAc;AACb,IACD,MAAM,WAAW,GAAG,OAAO,CAAC,eAAe,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;AAC5D,IAAE,MAAM,YAAY,GAAG,WAAW,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE,CAAC,SAAS,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,IAAI,WAAW,CAAC,YAAY,CAAC;AACnH,IAAE,MAAM,SAAS,GAAG,WAAW,CAAC,YAAY,CAAC,aAAa,CAAC,eAAe,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClG,IACE,IAAI,CAAC,SAAS,EAAE;AAClB,QAAI,MAAM,IAAI,KAAK,CAAC,mCAAmC,OAAO,CAAC,SAAS,sBAAsB,CAAC,CAAC;AAChG,KAAG;AACH,IACE,MAAM,aAAa,GAAG,QAAQ,CAAC,WAAW,CAAC,iBAAiB,EAAE,SAAS,CAAC,CAAC;AAC3E,IAAE,MAAM,SAAS,GAAG,QAAQ,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE,KAAK,CAAC,CAAC;AAC/E,IACE,OAAO,IAAI,aAAa,CACtB,aAAa,EACb,WAAW,CAAC,YAAY,EACxB,WAAW,CAAC,aAAa,EACzB,WAAW,EACX,YAAY,EACZ,SAAS,EACT,YAAY,CAAC,aAAa,CAC3B,CAAC;AACJ;AACA;ACjHA;AACA;AACA;AACA,MAAa,kBAAyC,SAAQ,YAAe;AAC7E,IAAE,YACS,aAAgB,EAChB,OAA8B,EAC9B,YAA0B,EACvB,QAAW,EACd,OAAgB;AACxB,QACC,KAAK,CAAC,OAAO,EAAE,YAAY,EAAE,QAAQ,EAAE,OAAO,CAAC,CAAC;AACpD,QAPW,kBAAa,GAAb,aAAa,CAAG;AAAC,QACjB,YAAO,GAAP,OAAO,CAAuB;AAAC,QAC/B,iBAAY,GAAZ,YAAY,CAAc;AAAC,QACxB,aAAQ,GAAR,QAAQ,CAAG;AAAC,QACf,YAAO,GAAP,OAAO,CAAS;AAC3B,KAEG;AACH,IACE,IAAW,SAAS;AAAK,QACvB,OAAO,IAAI,CAAC,QAAQ,CAAC;AACzB,KAAG;AACH,IACS,MAAM,CAAI,KAAe,EAAE,wBAAiC,KAAK;AAAI,QAC1E,IAAI,qBAAqB,EAAE;AAC/B,YAAM,OAAO,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAiB,CAAC;AACnE,SAAK;AACL,QACI,OAAO,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;AAC/B,KAAG;AACH,IAGS,YAAY,CAAC,KAAU,EAAE,KAAW;AAAI,QAC7C,QAAQ,CAAC,IAAI,CAAC,aAAa,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;AACtD,QAAI,IAAI,CAAC,aAAa,EAAE,CAAC;AACzB,KAAG;AACH;AACA;ACrCA;AACA;AACA;AACA,SAAgB,+BAA+B,CAAO,OAAkD;AAAI,IAC1G,MAAM,cAAc,GAAG,aAAa,CAAC,OAAO,CAAC,CAAC;AAChD,IACE,IAAI,OAAO,CAAC,gBAAgB,EAAE;AAChC,QAAI,cAAc,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;AACxD,KAAG;AACH,IAAE,cAAc,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;AACjD,IACE,cAAc,CAAC,OAAO,GAAG,CAAC,OAAO,CAAC,OAAO,GAAG,gBAAgB,GAAG,OAAO,CAAC,OAAO,IAAI,EAAE,CAAC,CAAC;AACxF,IACE,OAAO,cAAc,CAAC;AACxB;AACA;ACCA,MAAM,8BAA8B,mCAC/B,qBAAqB,EAAE,KAC1B,IAAI,EAAE,aAAa,EACnB,QAAQ,EAAE,EAAE,EACZ,OAAO,EAAE,KAAK,EACd,aAAa,EAAE,IAAI,EACnB,kBAAkB,EAAE,EAAE,EACtB,cAAc,EAAE,EAAE,EAClB,gBAAgB,EAAE,IAAI,GACvB,CAAC;AAEF;AACA;AACA;AACA,SAAgB,mCAAmC,CACjD,SAA2C;AAC1C,IACD,OAAO,KAAK,CAAC,8BAA8B,EAAE,SAAS,CAAC,CAAC;AAC1D;AACA;AAAC,SCgBe,sBAAsB,CACpC,aAAwD;AACvD,IACD,MAAM,OAAO,GAAG,MAAM,CAAC,aAAa,CAAC;AACvC,UAAM,mCAAmC,CAAO,EAAE,SAAS,EAAE,aAAa,EAAE,CAAC;AAC7E,UAAM,mCAAmC,CAAC,aAAa,CAAC,CAAC;AACzD,IACE,MAAM,cAAc,GAAG,+BAA+B,CAAO,OAAO,CAAC,CAAC;AACxE,IACE,UAAU,CACR,YAAY,CAAC;AACjB,QAAM,WAAW,CAAC,cAAc,CAAC,CAAC;AAClC,QAAM,OAAO,CAAC,sBAAsB,CAAC,cAAc,CAAC,CAAC;AACrD,QAAM,eAAe,CAAC,OAAO,CAAC,CAAC;AAC/B,KAAK,CAAC,CACH,CAAC;AACJ,IACE,OAAO,CAAK,QAAiB,EAAE,SAAiD;AAClF,QAAI,MAAM,QAAQ,GAA0C;AAC5D,YAAM,KAAK,EAAE,EAAE;AACf,YAAM,SAAS,EAAE,EAAS;AAC1B,YAAM,aAAa,EAAE,IAAI;AACzB,YAAM,SAAS,EAAE,EAAE;AACnB,SAAK,CAAC;AACN,QAAI,MAAM,EAAE,aAAa,EAAE,KAAK,EAAE,SAAS,EAAE,SAAS,EAAE,mCAAQ,QAAQ,GAAK,SAAS,CAAE,CAAC;AACzF,QACI,IAAI,SAAS,IAAI,SAAS,CAAC,MAAM,EAAE;AACvC,YAAM,SAAS,CAAC,OAAO,CAAC,CAAC,QAAkB;AAC3C,gBAAQ,OAAO,CAAC,gBAAgB,CAAE,QAAgB,CAAC,OAAO,EAAE,QAAe,CAAC,CAAC;AAC7E,aAAO,CAAC,CAAC;AACT,SAAK;AACL,QACI,OAAO,CAAC,cAAc,CAAC,2BAA2B,EAAE;AACxD,YAAM,GAAG,EAAE;AACX,gBAAQ,eAAe,EAAE,cAAc,CAAC,eAAe;AACvD,aAAO;AACP,SAAK,CAAC,CAAC,iBAAiB,CAAC,OAAO,CAAC,IAAI,EAAE;AACvC,YAAM,GAAG,EAAE,EAAE,QAAQ,EAAE,QAAQ,IAAI,OAAO,CAAC,QAAQ,EAAE;AACrD,SAAK,CAAC,CAAC;AACP,QACI,IAAI,OAAO,CAAC,kBAAkB,CAAC,MAAM,IAAI,OAAO,CAAC,cAAc,CAAC,MAAM,EAAE;AAC5E,YAAM,OAAO,CAAC,iBAAiB,CAAC,OAAO,CAAC,SAAS,EAAE;AACnD,gBAAQ,GAAG,EAAE,EAAE,SAAS,EAAE,CAAC,GAAG,OAAO,CAAC,kBAAkB,EAAE,GAAG,OAAO,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,IAAI,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;AACxH,aAAO,CAAC,CAAC;AACT,SAAK;AACL,QACI,MAAM,SAAS,GAAG,wBAAwB,CAAC,OAAO,EAAE,KAAK,EAAE,SAAS,CAAC,CAAC;AAC1E,QACI,IAAI,OAAO,CAAC,aAAa,IAAI,aAAa,EAAE;AAChD,YAAM,SAAS,CAAC,aAAa,EAAE,CAAC;AAChC,SAAK;AACL,QACI,OAAO,SAAS,CAAC;AACrB,KAAG,CAAC;AACJ,CAAC;AAED,SAAS,wBAAwB,CAC/B,OAAkD,EAClD,KAAkB,EAClB,SAAc;AACb,IACD,MAAM,WAAW,GAAG,OAAO,CAAC,eAAe,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;AAC5D,IAAE,MAAM,YAAY,GAAG,WAAW,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE,CAAC,SAAS,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,IAAI,WAAW,CAAC,YAAY,CAAC;AACnH,IAAE,MAAM,SAAS,GAAG,WAAW,CAAC,YAAY,CAAC,aAAa,CAAC,eAAe,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClG,IACE,IAAI,CAAC,SAAS,EAAE;AAClB,QAAI,MAAM,IAAI,KAAK,CAAC,yBAAyB,OAAO,CAAC,SAAS,sBAAsB,CAAC,CAAC;AACtF,KAAG;AACH,IACE,MAAM,aAAa,GAAG,QAAQ,CAAC,WAAW,CAAC,iBAAiB,EAAE,SAAS,CAAC,CAAC;AAC3E,IAAE,MAAM,SAAS,GAAG,QAAQ,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE,KAAK,CAAC,CAAC;AAC/E,IACE,OAAO,IAAI,kBAAkB,CAAC,aAAa,EAAE,WAAW,EAAE,WAAW,CAAC,YAAY,EAAE,SAAS,EAAE,YAAY,CAAC,aAAa,CAAC,CAAC;AAC7H;AACA;AChIA;AACA;AACA;AACA,MAAa,gBAAoB,SAAQ,aAAa;AACtD,IAAE,YAAmB,OAAU;AAC/B,QAAI,KAAK,EAAE,CAAC;AACZ,QAFqB,YAAO,GAAP,OAAO,CAAG;AAAC,KAE7B;AACH;AACA;ACNA;AACA;AACA;AACA,SAAgB,oBAAoB,CAAI,OAA6C;AAAI,IACvF,MAAM,cAAc,GAAG,aAAa,CAAC,OAAO,CAAC,CAAC;AAChD,IACE,cAAc,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;AACjD,IACE,OAAO,cAAc,CAAC;AACxB;AACA;ACJA,MAAM,qBAAqB,qBACtB,qBAAqB,EAAE,CAC3B,CAAC;AAEF;AACA;AACA;AACA,SAAgB,wBAAwB,CAAI,SAAqC;AAAI,IACnF,OAAO,KAAK,CAAC,qBAAqB,EAAE,SAAS,CAAyC,CAAC;AACzF;AACA;ACEA;AACA;AACA;AACA,SAAgB,oBAAoB,CAAI,aAAmD;AAAI,IAC7F,MAAM,OAAO,GAAG,MAAM,CAAC,aAAa,CAAC,GAAG,aAAa,GAAG,aAAa,CAAC,OAAO,CAAC;AAChF,IAAE,MAAM,OAAO,GAAG,MAAM,CAAC,aAAa,CAAC,GAAG,wBAAwB,CAAI,EAAE,OAAO,EAAE,CAAC,GAAG,wBAAwB,CAAC,aAAa,CAAC,CAAC;AAC7H,IACE,MAAM,cAAc,GAAG,oBAAoB,CAAC,OAAO,CAAC,CAAC;AACvD,IACE,UAAU,CAAC;AACb,QAAI,OAAO,CAAC,sBAAsB,CAAC,cAAc,CAAC,CAAC;AACnD,QAAI,eAAe,CAAC,OAAO,CAAC,CAAC;AAC7B,KAAG,CAAC,CAAC;AACL,IACE,SAAS,CAAC;AACZ,QAAI,MAAM,aAAa,GAAS,OAAQ,CAAC,MAAM;AAC/C,cAA8E,OAAQ,CAAC,MAAM,CAAI,OAAO,CAAC;AACzG,cAAQ,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;AAC7B,QACI,IAAI,8BAA8B,CAAC,aAAa,CAAC,EAAE;AACvD;AACM,YAAA,aAAa,CAAC,WAAW,EAAE,CAAC;AAClC,SAAK;AACL,KAAG,CAAC,CAAC;AACL,IACE,OAAO,CAAC,SAAwC;AAClD,QAAI,MAAM,QAAQ,GAAiC,EAAE,SAAS,EAAE,EAAE,EAAE,CAAC;AACrE,QAAI,MAAM,EAAE,SAAS,EAAE,mCAAQ,QAAQ,GAAK,SAAS,CAAE,CAAC;AACxD,QACI,IAAI,SAAS,IAAI,SAAS,CAAC,MAAM,EAAE;AACvC,YAAM,SAAS,CAAC,OAAO,CAAC,CAAC,QAAkB;AAC3C,gBAAQ,OAAO,CAAC,gBAAgB,CAAE,QAAgB,CAAC,OAAO,EAAE,QAAe,CAAC,CAAC;AAC7E,aAAO,CAAC,CAAC;AACT,SAAK;AACL,QACI,OAAO,IAAI,gBAAgB,CAAI,OAAO,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC;AACpG,KAAG,CAAC;AACJ;AACA;AAAC,MC1DqB,UAAW,SAAQ,MAAM;AAC/C,CACC;AACD,SACgB,YAAY,CAAC,MAAc;AAAI,IAC7C,OAAO,iBAAiB,IAAI,MAAM,CAAC;AACrC;AACA;ACCA;AACA;AACA;AACA,MAAa,gBAAoB,SAAQ,SAAY;AACrD,IAAE,YACE,OAA8B,EAC9B,YAA0B,EAC1B,QAAW,EACK,MAAc,EACd,kBAAuC;AACxD,QACC,KAAK,CAAC,OAAO,EAAE,YAAY,EAAE,QAAQ,EAAE,YAAY,CAAC,aAAa,CAAC,CAAC;AACvE,QAJoB,WAAM,GAAN,MAAM,CAAQ;AAAC,QACf,uBAAkB,GAAlB,kBAAkB,CAAqB;AAC3D,KAEG;AACH;AAEC;AACE;AACE,IAAI,iBAAiB,CAAC,OAAsB;AAAI,QACjD,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE,EAAE;AAClC,YAAM,OAAO;AACb,SAAK;AACL,QACI,IAAI,OAAO,IAAI,OAAO,CAAC,MAAM,EAAE;AACnC,YAAM,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;AACxD,SAAK;AACL,QACI,IAAI,OAAO,IAAI,OAAO,CAAC,WAAW,EAAE;AACxC,YAAM,IAAI,CAAC,kBAAkB,CAAC,cAAc,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;AAClE,SAAK;AACL,QACI,IAAI,OAAO,IAAI,OAAO,CAAC,IAAI,EAAE;AACjC,YAAM,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;AACvD,SAAK;AACL,QACI,IAAI,OAAO,IAAI,OAAO,CAAC,QAAQ,EAAE;AACrC,YAAM,IAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC5D,SAAK;AACL,QACI,IAAI,CAAC,0BAA0B,EAAE,CAAC;AACtC,KAAG;AACH;AAEC;AACE;AACE,IAAI,aAAa,CAAC,IAAY,EAAE,KAAa;AAAI,QAClD,IAAI,IAAI,CAAC,gBAAgB,EAAE,EAAE;AACjC,YAAM,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;AACpD,YAAM,IAAI,CAAC,0BAA0B,EAAE,CAAC;AACxC,SAAK;AACL,KAAG;AACH;AAEC;AACE;AACE,IAAI,kBAAkB,CAAC,IAAY,EAAE,KAAa;AAAI,QACvD,IAAI,IAAI,CAAC,gBAAgB,EAAE,EAAE;AACjC,YAAM,IAAI,CAAC,kBAAkB,CAAC,aAAa,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;AACzD,YAAM,IAAI,CAAC,0BAA0B,EAAE,CAAC;AACxC,SAAK;AACL,KAAG;AACH;AAEC;AACE;AACE,IAAI,YAAY,CAAC,IAAY,EAAE,KAAa;AAAI,QACjD,IAAI,IAAI,CAAC,gBAAgB,EAAE,EAAE;AACjC,YAAM,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;AACnD,YAAM,IAAI,CAAC,0BAA0B,EAAE,CAAC;AACxC,SAAK;AACL,KAAG;AACH;AAEC;AACE;AACE,IAAI,gBAAgB,CAAC,QAAuB;AAAI,QACjD,IAAI,IAAI,CAAC,gBAAgB,EAAE,EAAE;AACjC,YAAM,IAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;AACpD,YAAM,IAAI,CAAC,0BAA0B,EAAE,CAAC;AACxC,SAAK;AACL,KAAG;AACH;AAEC;AACE;AACE,IAAI,WAAW,CAAC,GAAiB;AAAI,QACtC,IAAI,IAAI,CAAC,gBAAgB,EAAE,EAAE;AACjC,YAAM,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;AAC1C,YAAM,IAAI,CAAC,0BAA0B,EAAE,CAAC;AACxC,SAAK;AACL,KAAG;AACH;AAEC;AACE;AACE,IAAI,eAAe,CAAC,KAAY;AAAI,QACrC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;AACpC;AACM,YAAA,OAAO,CAAC,IAAI,CACV,kGAAkG;AAC1G,gBAAU,qDAAqD,CACxD,CAAC;AACR,YACM,OAAO;AACb,SAAK;AACL,QACI,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;AACvC,KAAG;AACH,IACU,0BAA0B;AAAK,QACrC,IAAI,CAAC,kBAAmB,CAAC,iBAAiB,EAAE,CAAC;AACjD,QAAI,IAAI,CAAC,aAAa,EAAE,CAAC;AACzB,KAAG;AACH,IACU,gBAAgB;AAAK,QAC3B,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE;AAClC;AACM,YAAA,OAAO,CAAC,IAAI,CACV,0GAA0G;AAClH,gBAAU,8CAA8C,CACjD,CAAC;AACR,YACM,OAAO,KAAK,CAAC;AACnB,SAAK;AACL,QACI,OAAO,IAAI,CAAC;AAChB,KAAG;AACH;AACA;ACnIA;AACA;AACA;AACA;AACA;AACA,MAAa,kBAAmB,SAAQ,cAAc;AACtD,IAgBE,YAAY,OAAsB;AACpC,QAAI,KAAK,EAAE,CAAC;AACZ,QAlBU,eAAU,GAAW,EAAE,CAAC;AAClC,QAAU,oBAAe,GAAW,EAAE,CAAC;AACvC,QAAU,aAAQ,GAAS,EAAE,CAAC;AAC9B,QAAU,iBAAY,GAAkB,IAAI,CAAC;AAC7C,QAAU,YAAO,GAAiB,EAAE,CAAC;AACrC,QAAU,aAAQ,GAA8B,IAAI,CAAC;AACrD,QAAU,eAAU,GAA8B,IAAI,CAAC;AACvD,QAAU,mBAAc,GAA8B,IAAI,CAAC;AAC3D,QAAU,iBAAY,GAAgC,IAAI,CAAC;AAC3D,QACmB,kBAAa,GAAG,IAAI,aAAa,CAAS,CAAC,CAAC,CAAC;AAChE,QAAmB,uBAAkB,GAAG,IAAI,aAAa,CAAS,CAAC,CAAC,CAAC;AACrE,QAAmB,gBAAW,GAAG,IAAI,aAAa,CAAO,CAAC,CAAC,CAAC;AAC5D,QAAmB,oBAAe,GAAG,IAAI,aAAa,CAAgB,CAAC,CAAC,CAAC;AACzE,QAAmB,eAAU,GAAG,IAAI,aAAa,CAAe,CAAC,CAAC,CAAC;AACnE,QAII,IAAI,OAAO,EAAE;AACjB,YAAM,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC,MAAM,IAAI,EAAE,CAAC;AAC7C,YAAM,IAAI,CAAC,eAAe,GAAG,OAAO,CAAC,WAAW,IAAI,EAAE,CAAC;AACvD,YAAM,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,IAAI,IAAI,EAAE,CAAC;AACzC,YAAM,IAAI,CAAC,YAAY,GAAG,OAAO,CAAC,QAAQ,IAAI,IAAI,CAAC;AACnD,YAAM,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,GAAG,IAAI,EAAE,CAAC;AACvC,YAAM,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,IAAI,IAAI,IAAI,CAAC;AAC3C,YAAM,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC,MAAM,IAAI,IAAI,CAAC;AAC/C,YAAM,IAAI,CAAC,cAAc,GAAG,OAAO,CAAC,UAAU,IAAI,IAAI,CAAC;AACvD,YAAM,IAAI,CAAC,YAAY,GAAG,OAAO,CAAC,QAAQ,IAAI,IAAI,CAAC;AACnD,SAAK;AACL,QACI,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,CAAC;AACpD,QAAI,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;AAC9D,QAAI,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC;AAChD,QAAI,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC,YAAY,EAAwB,CAAC;AAC9E,QAAI,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC,YAAY,EAA8B,CAAC;AAC1E,QACI,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;AACzC,QACI,IAAI,CAAC,iBAAiB,EAAE,CAAC;AAC7B,KAAG;AACH,IACE,IAAW,QAAQ;AAAK,QACtB,OAAO,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,IAAI,iBAAiB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AAC5F,KAAG;AACH,IAGS,SAAS,CAAC,MAAc;AAAI,QACjC,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC;AAC7B,QAAI,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;AACzC,KAAG;AACH,IACS,QAAQ,CAAC,IAAY,EAAE,KAAa;AAAI,QAC7C,IAAI,CAAC,UAAU,mCAAQ,IAAI,CAAC,UAAU,KAAE,CAAC,IAAI,GAAG,KAAK,GAAE,CAAC;AAC5D,QAAI,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;AACzC,KAAG;AACH,IACS,cAAc,CAAC,WAAmB;AAAI,QAC3C,IAAI,CAAC,eAAe,GAAG,WAAW,CAAC;AACvC,QAAI,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;AACzC,KAAG;AACH,IACS,aAAa,CAAC,IAAY,EAAE,KAAa;AAAI,QAClD,IAAI,CAAC,eAAe,mCAAQ,IAAI,CAAC,eAAe,KAAE,CAAC,IAAI,GAAG,KAAK,GAAE,CAAC;AACtE,QAAI,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;AACzC,KAAG;AACH,IACS,UAAU,CAAC,IAAU;AAAI,QAC9B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;AACzB,QAAI,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;AACzC,KAAG;AACH,IACS,OAAO,CAAC,IAAY,EAAE,KAAa;AAAI,QAC5C,IAAI,CAAC,QAAQ,mCAAQ,IAAI,CAAC,QAAQ,KAAE,CAAC,IAAI,GAAG,KAAK,GAAE,CAAC;AACxD,QAAI,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;AACzC,KAAG;AACH,IACS,WAAW,CAAC,QAAuB;AAAI,QAC5C,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC;AACjC,QAAI,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;AACzC,KAAG;AACH,IACS,MAAM,CAAC,GAAiB;AAAI,QACjC,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC;AACvB,QAAI,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;AACzC,KAAG;AACH,IACE,IAAW,IAAI;AAAK,QAClB,OAAO,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC;AACjC,KAAG;AACH,IACE,IAAW,MAAM;AAAK,QACpB,OAAO,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC;AACnC,KAAG;AACH,IACE,IAAW,QAAQ;AAAK,QACtB,OAAO,IAAI,CAAC,YAAY,IAAI,CAAC,IAAI,CAAC,CAAC;AACvC,KAAG;AACH,IACE,IAAW,UAAU;AAAK,QACxB,OAAO,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC;AACvC,KAAG;AACH;AAEC;AACE;AACE,IAAI,iBAAiB;AAAK,QAC3B,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AAC7C,QAAI,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;AACvD,QAAI,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AACzC,QAAI,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;AACjD,QAAI,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AACvC,KAAG;AACH,IACS,QAAQ;AAAK,QAClB,OAAO,oBAAoB,CAAC;AAChC,KAAG;AACH,IACU,aAAa;AAAK,QACxB,MAAM,QAAQ,GAAG,IAAI,sBAAsB,EAAE,CAAC;AAClD,QACI,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC;AACtC,QAAI,QAAQ,CAAC,WAAW,GAAG,IAAI,CAAC,eAAe,CAAC;AAChD,QAAI,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC;AAClC,QAAI,QAAQ,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAa,CAAC;AAC3C,QAAI,QAAQ,CAAC,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC;AAChC,QACI,OAAO,QAAQ,CAAC;AACpB,KAAG;AACH;AACA;AC5IA;AACA,MAUa,uBAAuB;AACpC,IAVA;AACG,QAWD,gBAAW,GAAQ,IAAI,CAAC;AAC1B,KAOC;AACD,IANE,OAAO;AAAK,QACV,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC;AACvC,QACI,OAAO,IAAI,CAAC;AAChB,KAAG;AACH;mDApBC,SAAS,SAAC,kBACT,QAAQ,EAAE,cAAc;IACxB,SAAS,EAAE,sBACT,0BACE,OAAO,EAAE,UAAU,0BACnB,WAAW,EAAE,uBAAuB,sBACrC,kBACF,cACF;;;;;;;eACI;AAAC;AACI,yBAAP,KAAK;AAAK,sBAIV,YAAY,SAAC,OAAO;AACnB;;;;;;;;;;;;;;;;;oBAAE;AAON;AACA;AACA;AACA;AACA;AACA;AACA,MAGa,6BAA6B;AAAG;yDAH5C,QAAQ,SAAC,kBACR,YAAY,EAAE,CAAC,uBAAuB,CAAC;EACxC;;;;;;;;8KACI;AAAC;ACxBN;AACA;AACA;AACA,SAAgB,oBAAoB,CAAI,OAA6C;AAAI,IACvF,MAAM,cAAc,GAAG,sBAAsB,CAAC,OAAO,CAAC,CAAC;AACzD,IACE,IAAI,OAAO,CAAC,eAAe,IAAI,OAAO,CAAC,YAAY,EAAE;AACvD,QAAI,cAAc,CAAC,YAAY,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;AAC9D,KAAG;AACH,IACE,IAAI,OAAO,CAAC,YAAY,EAAE;AAC5B,QAAI,cAAc,CAAC,SAAS,CAAC,IAAI,CAC3B,OAAO,CAAC,YAAY,CAAC,UAAU,EAAE;AACvC,YAAQ,MAAM,EAAE,IAAI,OAAO,EAAS;AACpC,YAAQ,eAAe,CAAC,KAAY;AAAI,gBAC9B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAClC,aAAS;AACT,SAAO,CAAC,EACF;AACN,YAAQ,OAAO,EAAE,MAAM;AACvB,YAAQ,WAAW,EAAE,UAAU;AAC/B,SAAO,CACF,CAAC;AACN,QACI,cAAc,CAAC,SAAS,CAAC,IAAI,CAC3B;AACN,YAAQ,OAAO,EAAE,kBAAkB;AACnC,YAAQ,QAAQ,EAAE,IAAI,kBAAkB,CAAC;AACzC,gBAAU,MAAM,EAAE,OAAO,CAAC,MAAM;AAChC,gBAAU,WAAW,EAAE,OAAO,CAAC,WAAW;AAC1C,gBAAU,IAAI,EAAE,OAAO,CAAC,IAAI;AAC5B,aAAS,CAAC;AACV,SAAO,EACD;AACN,YAAQ,OAAO,EAAE,cAAc;AAC/B,YAAQ,WAAW,EAAE,kBAAkB;AACvC,SAAO,CACF,CAAC;AACN,KAAG;AAAC,SAAK;AACT,QAAI,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,mBAAmB,CAAC,UAAU,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;AAChF,KAAG;AACH,IACE,OAAO,cAAc,CAAC;AACxB;AACA;AAAC,WCrCO,EAAE;AAJV,MAAM,qBAAqB,mCACtB,0BAA0B,EAAE,KAC/B,MAAM,EAAE,EAAE,EACV,WAAW,EAAE,EAAE,EACf,IAAI,MACJ,QAAQ,EAAE,IAAI,EACd,eAAe,EAAE,IAAI,EACrB,YAAY,EAAE,IAAI,EAClB,MAAM,EAAE,EAAE,EACV,GAAG,EAAE,EAAE,EACP,IAAI,EAAE,IAAI,EACV,MAAM,EAAE,IAAI,EACZ,QAAQ,EAAE,IAAI,EACd,UAAU,EAAE,IAAI,GACjB,CAAC;AAEF;AACA;AACA;AACA,SAAgB,wBAAwB,CAAI,SAAqC;AAAI,IACnF,OAAO,KAAK,CAAC,qBAAqB,EAAE,SAAS,CAAC,CAAC;AACjD;AACA;ACVA;AACA;AACA;AACA,SAAgB,oBAAoB,CAAI,aAAmD;AAAI,IAC7F,MAAM,OAAO,GAAG,MAAM,CAAC,aAAa,CAAC;AACvC,UAAM,wBAAwB,CAAI,EAAE,SAAS,EAAE,aAAa,EAAE,CAAC;AAC/D,UAAM,wBAAwB,CAAC,aAAa,CAAC,CAAC;AAC9C,IACE,MAAM,cAAc,GAAG,oBAAoB,CAAI,OAAO,CAAC,CAAC;AAC1D,IACE,UAAU,CACR,YAAY,CAAC;AACjB,QAAM,WAAW,CAAC,cAAc,CAAC,CAAC;AAClC,QAAM,OAAO,CAAC,sBAAsB,CAAC,cAAc,CAAC,CAAC;AACrD,QACM,eAAe,CAAC,OAAO,CAAC,CAAC;AAC/B,QACM,6CAA6C,CAAC,OAAO,CAAC,CAAC;AAC7D,QACM,OAAO,CAAC,iBAAiB,EAAE,CAAC;AAClC,KAAK,CAAC,CACH,CAAC;AACJ,IACE,OAAO,CAAC,SAAwC;AAClD,QAAI,MAAM,QAAQ,GAAiC;AACnD,YAAM,KAAK,EAAE,EAAE;AACf,YAAM,aAAa,EAAE,IAAI;AACzB,YAAM,SAAS,EAAE,EAAE;AACnB,SAAK,CAAC;AACN,QACI,MAAM,EAAE,aAAa,EAAE,KAAK,EAAE,SAAS,EAAE,mCAAQ,QAAQ,GAAK,SAAS,CAAE,CAAC;AAC9E,QACI,IAAI,SAAS,IAAI,SAAS,CAAC,MAAM,EAAE;AACvC,YAAM,SAAS,CAAC,OAAO,CAAC,CAAC,QAAkB;AAC3C,gBAAQ,OAAO,CAAC,gBAAgB,CAAE,QAAgB,CAAC,OAAO,EAAE,QAAe,CAAC,CAAC;AAC7E,aAAO,CAAC,CAAC;AACT,SAAK;AACL,QACI,MAAM,EAAE,MAAM,EAAE,WAAW,EAAE,IAAI,EAAE,QAAQ,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,UAAU,EAAE,mCAAQ,OAAO,GAAK,SAAS,CAAE,CAAC;AAC1H,QACI,OAAO,CAAC,gBAAgB,CAAC,cAAc,EAAE;AAC7C,YAAM,QAAQ,EAAE,IAAI,kBAAkB,CAAC,EAAE,MAAM,EAAE,WAAW,EAAE,IAAI,EAAE,QAAQ,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,UAAU,EAAE,CAAC;AACxH,SAAK,CAAC,CAAC;AACP,QAAI,MAAM,MAAM,GAAS,OAAQ,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;AACxF,QACI,OAAO,MAAM,CAAC,GAAG,CAAC;AACtB,YAAM,MAAM,SAAS,GAAG,sBAAsB,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;AAC/D,YACM,SAAS,CAAC,MAAM,CAAC,iBAAiB,EAAE,CAAC;AAC3C,YACM,IAAI,OAAO,CAAC,aAAa,IAAI,aAAa,EAAE;AAClD,gBAAQ,SAAS,CAAC,aAAa,EAAE,CAAC;AAClC,aAAO;AACP,YACM,OAAO,SAAS,CAAC;AACvB,SAAK,CAAC,CAAC;AACP,KAAG,CAAC;AACJ,CAAC;AAED,SAAS,sBAAsB,CAAI,OAA6C,EAAE,KAAkB;AAAI,IACtG,MAAM,OAAO,GAAG,OAAO,CAAC,eAAe,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;AAC7D,IAAE,MAAM,YAAY,GAAG,OAAO,CAAC,YAAY,CAAC;AAC5C,IACE,MAAM,SAAS,GAAG,QAAQ,CAAC,OAAO,CAAC,iBAAiB,EAAE,KAAK,CAAC,CAAC;AAC/D;AAEC;AACE;AACE,IAAH,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;AACvB,QAAI,OAAO,IAAI,gBAAgB,CAAC,OAAO,EAAE,YAAY,EAAE,SAAS,EAAE,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC;AACpH,KAAG;AACH,IACE,OAAO,IAAI,gBAAgB,CACzB,OAAO,EACP,YAAY,EACZ,SAAS,EACT,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,EACtB,OAAO,CAAC,MAAM,CAAC,cAAc,CAAkC,CAChE,CAAC;AACJ;AACA;ACtGA;AACA;AACA;AACA,IAAY;AAAZ,WAAY,UAAU;AACrB,IAAC,yBAAW,CAAA;AAAC,IACZ,2BAAa,CAAA;AAAC,IACd,+BAAiB,CAAA;AAAC,IAClB,yBAAW,CAAA;AAAC,IACZ,6BAAe,CAAA;AAAC,IAChB,2BAAa,CAAA;AAAC,IACd,6BAAe,CAAA;AAAC,IAChB,iCAAmB,CAAA;AACrB,CAAC,EATW,UAAU,KAAV,UAAU,QASrB;AAOD;AACA;AACA;AACA,MAAa,aAAiB,SAAQ,aAAa;AACnD,IAAE,YAAmB,OAAU,EAAS,UAAsB,EAAS,UAAiC;AACxG,QAAI,KAAK,EAAE,CAAC;AACZ,QAFqB,YAAO,GAAP,OAAO,CAAG;AAAC,QAAQ,eAAU,GAAV,UAAU,CAAY;AAAC,QAAQ,eAAU,GAAV,UAAU,CAAuB;AAAC;AAGZ;AACjF,QACR,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC/C,QAAI,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC7D,KAAG;AACH,IACS,SAAS,CAAC,GAAW,EAAE,MAAkB;AAAI,QAClD,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC5B,QACI,MAAM,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC;AAC1C,YAAM,GAAG;AACT,YAAM,MAAM;AACZ,SAAK,CAAC,CAAC;AACP;AAEG,QAAC,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC;AAC7B,QACI,OAAO,GAAG,CAAC;AACf,KAAG;AACH,IACS,gBAAgB,CAAC,YAA0B;AAAI,QACpD,MAAM,QAAQ,GAAG,YAAY,CAAC,GAAG,CAAC,CAAC,WAAuB;AAC9D,YAAM,OAAO,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC;AACvC,gBAAQ,GAAG,EAAE,WAAW,CAAC,GAAG;AAC5B,gBAAQ,MAAM,EAAE,WAAW,CAAC,MAAM;AAClC,aAAO,CAAC,CAAC;AACT,SAAK,CAAC,CAAC;AACP,QACI,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC;AAC7B,QACI,OAAO,QAAQ,CAAC;AACpB,KAAG;AACH,IACS,QAAQ,CAAC,QAAuB,EAAE,IAAW;AAAI,QACtD,QAAQ,CAAC,OAAO,CAAC,CAAC,OAAoB,EAAE,GAAW;AACvD,YAAM,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;AAC/B,SAAK,CAAC,CAAC;AACP,KAAG;AACH;AACA;AChEA;AACA;AACA;AACA,SAAgB,iBAAiB,CAAI,OAA0C;AAAI,IACjF,MAAM,cAAc,GAAG,aAAa,CAAC,OAAO,CAAC,CAAC;AAChD,IACE,cAAc,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;AACjD,IAAE,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;AACvD,IACE,OAAO,cAAc,CAAC;AACxB;AACA;ACPA,MAAM,kBAAkB,qBACnB,qBAAqB,EAAE,CAC3B,CAAC;AAEF;AACA;AACA;AACA,SAAgB,qBAAqB,CAAI,SAAkC;AAAI,IAC7E,OAAO,KAAK,CAAC,kBAAkB,EAAE,SAAS,CAAC,CAAC;AAC9C;AACA;ACIA;AACA;AACA;AACA,SAAgB,iBAAiB,CAAI,aAAgD;AAAI,IACvF,MAAM,OAAO,GAAG,MAAM,CAAC,aAAa,CAAC,GAAG,aAAa,GAAG,aAAa,CAAC,OAAO,CAAC;AAChF,IAAE,MAAM,OAAO,GAAG,MAAM,CAAC,aAAa,CAAC,GAAG,qBAAqB,CAAI,EAAE,OAAO,EAAE,CAAC,GAAG,qBAAqB,CAAC,aAAa,CAAC,CAAC;AACvH,IAAE,MAAM,cAAc,GAAG,iBAAiB,CAAC,OAAO,CAAC,CAAC;AACpD,IACE,UAAU,CAAC;AACb,QAAI,OAAO,CAAC,sBAAsB,CAAC,cAAc,CAAC,CAAC;AACnD,QAAI,eAAe,CAAC,OAAO,CAAC,CAAC;AAC7B,KAAG,CAAC,CAAC;AACL,IACE,SAAS,CAAC;AACZ,QAAI,IAAI,OAAO,CAAC,MAAM,EAAE;AACxB,YAAM,OAAO,CAAC,MAAM,CAAC,qBAAqB,CAAC,CAAC,MAAM,EAAE,CAAC;AACrD,SAAK;AAAC,aAAK;AACX,YAAM,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC,MAAM,EAAE,CAAC;AAClD,SAAK;AACL,KAAG,CAAC,CAAC;AACL,IACE,OAAO,CAAC,SAAkC;AAC5C,QAAI,MAAM,QAAQ,GAA2B,EAAE,SAAS,EAAE,EAAE,EAAE,CAAC;AAC/D,QAAI,MAAM,EAAE,SAAS,EAAE,mCAAQ,QAAQ,GAAK,SAAS,CAAE,CAAC;AACxD,QACI,IAAI,SAAS,IAAI,SAAS,CAAC,MAAM,EAAE;AACvC,YAAM,SAAS,CAAC,OAAO,CAAC,CAAC,QAAkB;AAC3C,gBAAQ,OAAO,CAAC,gBAAgB,CAAE,QAAgB,CAAC,OAAO,EAAE,QAAe,CAAC,CAAC;AAC7E,aAAO,CAAC,CAAC;AACT,SAAK;AACL;AAEG;AACI;AACI,QAAP,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;AACzB,YAAM,OAAO,IAAI,aAAa,CAAI,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC,CAAC;AACrH,SAAK;AACL,QACI,OAAO,IAAI,aAAa,CAAI,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,OAAO,CAAC,MAAM,CAAC,UAAU,CAAC,EAAE,OAAO,CAAC,MAAM,CAAC,qBAAqB,CAAC,CAAC,CAAC;AAC5H,KAAG,CAAC;AACJ;AACA;AC1DA;AACA;AACA;AACA,MAAa,aAAoC,SAAQ,aAAa;AACtE,IAAE,YAAmB,aAAgB,EAAS,OAA8B,EAAS,YAA0B,EAAS,OAAgB;AACxI,QAAI,KAAK,EAAE,CAAC;AACZ,QAFqB,kBAAa,GAAb,aAAa,CAAG;AAAC,QAAQ,YAAO,GAAP,OAAO,CAAuB;AAAC,QAAQ,iBAAY,GAAZ,YAAY,CAAc;AAAC,QAAQ,YAAO,GAAP,OAAO,CAAS;AAAC,KAEtI;AACH,IACS,aAAa;AAAK,QACvB,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,CAAC;AACjC,KAAG;AACH,IAGS,YAAY,CAAC,KAAU,EAAE,KAAW;AAAI,QAC7C,QAAQ,CAAC,IAAI,CAAC,aAAa,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;AACtD,QAAI,IAAI,CAAC,aAAa,EAAE,CAAC;AACzB,KAAG;AACH;AACA;ACtBA;AACA;AACA;AACA,SAAgB,0BAA0B,CAAO,OAA6C;AAAI,IAChG,MAAM,cAAc,GAAG,aAAa,CAAC,OAAO,CAAC,CAAC;AAChD,IACE,cAAc,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;AACjD,IAAE,cAAc,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;AACjD,IACE,OAAO,cAAc,CAAC;AACxB;AACA;ACEA,MAAM,2BAA2B,mCAC5B,qBAAqB,EAAE,KAC1B,IAAI,EAAE,aAAa,EACnB,aAAa,EAAE,IAAI,EACnB,QAAQ,EAAE,EAAE,GACb,CAAC;AAEF;AACA;AACA;AACA,SAAgB,8BAA8B,CAAO,SAAsC;AAAI,IAC7F,OAAO,KAAK,CAAC,2BAA2B,EAAE,SAAS,CAAC,CAAC;AACvD;AACA;ACEA;AACA;AACA;AACA,SAAgB,iBAAiB,CAAuB,aAAmD;AAAI,IAC7G,MAAM,OAAO,GAAG,MAAM,CAAC,aAAa,CAAC;AACvC,UAAM,8BAA8B,CAAO,EAAE,IAAI,EAAE,aAAa,EAAE,CAAC;AACnE,UAAM,8BAA8B,CAAC,aAAa,CAAC,CAAC;AACpD,IACE,MAAM,cAAc,GAAG,0BAA0B,CAAO,OAAO,CAAC,CAAC;AACnE,IACE,UAAU,CACR,YAAY,CAAC;AACjB,QAAM,WAAW,CAAC,cAAc,CAAC,CAAC;AAClC,QAAM,OAAO,CAAC,sBAAsB,CAAC,cAAc,CAAC,CAAC;AACrD,QAAM,eAAe,CAAC,OAAO,CAAC,CAAC;AAC/B,KAAK,CAAC,CACH,CAAC;AACJ,IACE,OAAO,CAAK,mBAA4D,EAAE,SAAyC;AACrH,QAAI,MAAM,QAAQ,GAAkC;AACpD,YAAM,SAAS,EAAE,EAAS;AAC1B,YAAM,aAAa,EAAE,IAAI;AACzB,YAAM,SAAS,EAAE,EAAE;AACnB,SAAK,CAAC;AACN,QAAI,MAAM,iBAAiB,GAAG,OAAO,mBAAmB,KAAK,QAAQ,GAAG,mBAAmB,GAAG,SAAS,CAAC;AACxG,QAAI,MAAM,EAAE,aAAa,EAAE,SAAS,EAAE,SAAS,EAAE,mCAAQ,QAAQ,GAAK,iBAAiB,CAAE,CAAC;AAC1F,QAAI,MAAM,QAAQ,GAAG,OAAO,mBAAmB,KAAK,QAAQ,GAAG,mBAAmB,GAAG,OAAO,CAAC,QAAQ,CAAC;AACtG,QACI,IAAI,SAAS,IAAI,SAAS,CAAC,MAAM,EAAE;AACvC,YAAM,SAAS,CAAC,OAAO,CAAC,CAAC,QAAkB;AAC3C,gBAAQ,OAAO,CAAC,gBAAgB,CAAE,QAAgB,CAAC,OAAO,EAAE,QAAe,CAAC,CAAC;AAC7E,aAAO,CAAC,CAAC;AACT,SAAK;AACL,QACI,IAAI,QAAQ,EAAE;AAClB,YAAM,OAAO,CAAC,cAAc,CAAC,2BAA2B,EAAE;AAC1D,gBAAQ,GAAG,EAAE;AACb,oBAAU,eAAe,EAAE,cAAc,CAAC,eAAe;AACzD,iBAAS;AACT,aAAO,CAAC,CAAC,iBAAiB,CAAC,OAAO,CAAC,IAAI,EAAE;AACzC,gBAAQ,GAAG,EAAE,EAAE,QAAQ,EAAE;AACzB,aAAO,CAAC,CAAC;AACT,SAAK;AACL,QACI,MAAM,SAAS,GAAG,mBAAmB,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;AAC9D,QACI,IAAI,OAAO,CAAC,aAAa,IAAI,aAAa,EAAE;AAChD,YAAM,SAAS,CAAC,aAAa,EAAE,CAAC;AAChC,SAAK;AACL,QACI,OAAO,SAAS,CAAC;AACrB,KAAG,CAAC;AACJ,CAAC;AAED,SAAS,mBAAmB,CAAW,OAA6C,EAAE,SAAc;AAAI,IACtG,MAAM,WAAW,GAAG,OAAO,CAAC,eAAe,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;AAC5D,IAAE,MAAM,YAAY,GAAG,WAAW,CAAC,YAAY,CAAC;AAChD,IACE,MAAM,aAAa,GAAG,QAAQ,CAAC,WAAW,CAAC,iBAAiB,EAAE,SAAS,CAAC,CAAC;AAC3E,IACE,OAAO,IAAI,aAAa,CAAC,aAAa,EAAE,WAAW,EAAE,WAAW,CAAC,YAAY,EAAE,YAAY,CAAC,aAAa,CAAC,CAAC;AAC7G;AACA;AAAC,SC5Fe,uBAAuB,CAAC,OAAkB;AAAI,IAC5D,MAAM,QAAQ,GAAc;AAC9B,QAAI,QAAQ,EAAE,OAAO,CAAC,QAAQ;AAC9B,QAAI,QAAQ,EAAE,OAAO,CAAC,QAAQ,IAAI,EAAE;AACpC,QAAI,MAAM,EAAE,OAAO,CAAC,MAAM;AAC1B,QAAI,OAAO,EAAE,OAAO,CAAC,OAAO,IAAI,EAAE;AAClC,QAAI,QAAQ,EAAE,OAAO,CAAC,QAAQ,IAAI,EAAE;AACpC,KAAG,CAAC;AACJ,IACE,MAAM,IAAI;AAAG,KAAA;AACf,IACG,QAAgB,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM;AAC1C,QAAI,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,IAAI,YAAY,EAAO,CAAC;AACrD,KAAG,CAAC,CAAC;AACL,IACE,OAAO,SAAS,CAAC,QAAQ,CAAC,CAAC,IAAW,CAAC,CAAC;AAC1C,CAAC;AACD,SACgB,uBAAuB,CAAC,OAAkB;AAAI,IAC5D,MAAM,QAAQ,GAAc;AAC9B,QAAI,QAAQ,EAAE,OAAO,CAAC,QAAQ;AAC9B,QAAI,MAAM,EAAE,OAAO,CAAC,MAAM;AAC1B,QAAI,OAAO,EAAE,OAAO,CAAC,OAAO,IAAI,EAAE;AAClC,QAAI,QAAQ,EAAE,OAAO,CAAC,QAAQ,IAAI,EAAE;AACpC,KAAG,CAAC;AACJ,IACE,MAAM,IAAI;AAAG,KAAA;AACf,IACG,QAAgB,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM;AAC1C,QAAI,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,IAAI,YAAY,EAAO,CAAC;AACrD,KAAG,CAAC,CAAC;AACL,IACE,OAAO,SAAS,CAAC,QAAQ,CAAC,CAAC,IAAW,CAAC,CAAC;AAC1C;AACA;ACpCA;AACA;ACDA;AACA;AACA;AACA;AACA;AAIi1C","sourcesContent":["import {\n  Matcher,\n  MatcherOptions,\n  NormalizerFn,\n  SelectorMatcherOptions,\n  queries as DOMQueries,\n  getDefaultNormalizer,\n  ByRoleOptions\n} from '@testing-library/dom';\n\ninterface MandatorySelectorMatchingOptions extends MatcherOptions {\n  selector: SelectorMatcherOptions['selector'];\n}\n\nexport class DOMSelector {\n  // Wrap selector functions in a class to make reflection easier in getChild\n  constructor(public readonly execute: (el: HTMLElement) => HTMLElement[]) {}\n}\n\nexport type DOMSelectorFactory<TOptions extends MatcherOptions = MatcherOptions> = (matcher: Matcher, options?: TOptions) => DOMSelector;\n\nexport const byLabel: DOMSelectorFactory = (matcher, options) =>\n  new DOMSelector(el => DOMQueries.queryAllByLabelText(el, matcher, options));\n\nexport const byPlaceholder: DOMSelectorFactory = (matcher, options) =>\n  new DOMSelector(el => DOMQueries.queryAllByPlaceholderText(el, matcher, options));\n\nexport const byText: DOMSelectorFactory<SelectorMatcherOptions> = (matcher, options) =>\n  new DOMSelector(el => DOMQueries.queryAllByText(el, matcher, options));\n\nexport const byTextContent = (matcher: Matcher, options: MandatorySelectorMatchingOptions): DOMSelector => {\n  let textContentMatcher: Matcher;\n  const normalizer: NormalizerFn = options?.normalizer || getDefaultNormalizer(options);\n  const getTextContent = (elem: HTMLElement): string => normalizer(elem.textContent ?? '');\n\n  if (typeof matcher === 'string') {\n    textContentMatcher = (_, elem) => {\n      if (options?.exact === false) {\n        return (\n          getTextContent(elem)\n            .toLowerCase()\n            .indexOf(matcher.toLowerCase()) >= 0\n        );\n      }\n\n      return getTextContent(elem) === matcher;\n    };\n  } else if (matcher instanceof RegExp) {\n    textContentMatcher = (_, elem) => matcher.test(getTextContent(elem));\n  } else {\n    textContentMatcher = (_, elem) => matcher(getTextContent(elem), elem);\n  }\n\n  return new DOMSelector(el => DOMQueries.queryAllByText(el, textContentMatcher, options));\n};\n\nexport const byAltText: DOMSelectorFactory = (matcher, options) =>\n  new DOMSelector(el => DOMQueries.queryAllByAltText(el, matcher, options));\n\nexport const byTitle: DOMSelectorFactory = (matcher, options) => new DOMSelector(el => DOMQueries.queryAllByTitle(el, matcher, options));\n\nexport const byTestId: DOMSelectorFactory = (matcher, options) => new DOMSelector(el => DOMQueries.queryAllByTestId(el, matcher, options));\n\nexport const byValue: DOMSelectorFactory = (matcher, options) =>\n  new DOMSelector(el => DOMQueries.queryAllByDisplayValue(el, matcher, options));\n\nexport const byRole: DOMSelectorFactory<ByRoleOptions> = (matcher, options) =>\n  new DOMSelector(el => DOMQueries.queryAllByRole(el, matcher, options));\n","import { DebugElement, ElementRef, Type, EventEmitter, OnDestroy } from '@angular/core';\n\nimport { DOMSelector } from './dom-selectors';\nimport { Token } from './token';\n\ntype OptionalPropertyNames<T> = {\n  [K in keyof T]-?: undefined extends T[K] ? K : never;\n}[keyof T];\ntype OptionalProperties<T> = Pick<T, OptionalPropertyNames<T>>;\n\nexport type OptionalsRequired<T> = Required<OptionalProperties<T>> & Partial<T>;\n\nexport type SpectatorElement = string | Element | DebugElement | ElementRef | Window | Document | DOMSelector;\n\nexport type QueryType = Type<any> | DOMSelector | string;\nexport interface QueryOptions<R> {\n  read?: Token<R>;\n  root?: boolean;\n}\n\nexport type EventEmitterType<P> = P extends EventEmitter<infer T> ? T : never;\n\nexport type KeysMatching<T, V> = { [K in keyof T]: T[K] extends V ? K : never }[keyof T];\n\nexport type SelectOptions = string | string[] | HTMLOptionElement | HTMLOptionElement[];\n\nexport interface KeyboardEventOptions {\n  key: string;\n  keyCode: number;\n}\n\nexport function doesServiceImplementsOnDestroy<S>(testedService: S): testedService is S & OnDestroy {\n  return 'ngOnDestroy' in testedService && typeof testedService['ngOnDestroy'] === 'function';\n}\n\nexport function isString(value: any): value is string {\n  return typeof value === 'string';\n}\n\nexport function isNumber(value: any): value is number {\n  return typeof value === 'number';\n}\n\nexport function isType(v: any): v is Type<any> {\n  return typeof v === 'function';\n}\n\nexport function isHTMLOptionElementArray(value: any): value is HTMLOptionElement[] {\n  return Array.isArray(value) && !!value.length && value.every(item => item instanceof HTMLOptionElement);\n}\n\nexport function isObject(v: any): v is object {\n  return v && typeof v === 'object';\n}\n","import { DebugElement, SimpleChange, SimpleChanges } from '@angular/core';\nimport { By } from '@angular/platform-browser';\n\nimport { DOMSelector } from '../dom-selectors';\nimport { isString, QueryOptions, QueryType } from '../types';\n\nexport function getChildren<R>(debugElementRoot: DebugElement): (directiveOrSelector: QueryType, options?: QueryOptions<R>) => R[] {\n  return (directiveOrSelector: QueryType, options: QueryOptions<R> = { root: false, read: undefined }): R[] => {\n    if (directiveOrSelector instanceof DOMSelector) {\n      return directiveOrSelector.execute(debugElementRoot.nativeElement) as any[];\n    }\n\n    const debugElements = debugElementRoot.queryAll(\n      isString(directiveOrSelector) ? By.css(directiveOrSelector) : By.directive(directiveOrSelector)\n    );\n\n    if (options.read) {\n      return debugElements.map(debug => debug.injector.get(options.read));\n    }\n\n    if (isString(directiveOrSelector)) {\n      return debugElements.map(debug => debug.nativeElement);\n    }\n\n    return debugElements.map(debug => debug.injector.get(directiveOrSelector));\n  };\n}\n\nexport function setProps<T, K extends string | number | symbol, V>(\n  instance: T,\n  key: K,\n  value: V,\n  firstChange?: boolean\n): T & { [KEY in K]: V };\nexport function setProps<T, KV>(instance: T, keyValues?: KV): T & KV;\nexport function setProps(instance: any, keyOrKeyValues: any, value?: any, firstChange: boolean = true): any {\n  const changes: SimpleChanges = {};\n\n  const update = (key: string, newValue: any): void => {\n    if (instance[key] !== newValue) {\n      changes[key] = new SimpleChange(instance[key], newValue, firstChange);\n    }\n\n    instance[key] = newValue;\n  };\n\n  if (isString(keyOrKeyValues)) {\n    update(keyOrKeyValues, value);\n  } else {\n    // tslint:disable-next-line:forin\n    for (const p in keyOrKeyValues) {\n      update(p, keyOrKeyValues[p]);\n    }\n  }\n\n  if (Object.keys(changes).length) {\n    // tslint:disable-next-line:no-life-cycle-call\n    instance.ngOnChanges?.(changes);\n  }\n\n  return instance;\n}\n","import { isNumber, isString, KeyboardEventOptions, isObject } from '../types';\n\nexport interface ModifierKeys {\n  alt?: boolean;\n  control?: boolean;\n  shift?: boolean;\n  meta?: boolean;\n}\n\nexport interface KeyOptions {\n  key: string | false;\n  keyCode: number | false;\n  modifiers: ModifierKeys;\n}\n\nexport const parseKeyOptions = (keyOrKeyCode: string | number | KeyboardEventOptions): KeyOptions => {\n  if (isNumber(keyOrKeyCode) && keyOrKeyCode) {\n    return { key: false, keyCode: keyOrKeyCode, modifiers: {} };\n  }\n\n  if (isString(keyOrKeyCode) && keyOrKeyCode) {\n    return parseKey(keyOrKeyCode as string);\n  }\n\n  if (isObject(keyOrKeyCode)) {\n    const parsedKey = parseKey(keyOrKeyCode.key);\n\n    return {\n      ...parsedKey,\n      keyCode: keyOrKeyCode.keyCode\n    };\n  }\n\n  throw new Error('keyboard.pressKey() requires a valid key or keyCode');\n};\n\nconst parseKey = (keyStr: string): KeyOptions => {\n  if (keyStr.indexOf('.') < 0 || '.' === keyStr) {\n    return { key: keyStr, keyCode: false, modifiers: {} };\n  }\n\n  const keyParts = keyStr.split('.');\n  const key = keyParts.pop() as string;\n  const modifiers = keyParts.reduce(\n    (mods, part) => {\n      switch (part) {\n        case 'control':\n        case 'ctrl':\n          mods.control = true;\n\n          return mods;\n        case 'shift':\n          mods.shift = true;\n\n          return mods;\n        case 'alt':\n          mods.alt = true;\n\n          return mods;\n        case 'meta':\n        case 'cmd':\n        case 'win':\n          mods.meta = true;\n\n          return mods;\n        default:\n          throw new Error(`invalid key modifier: ${part ? part : 'undefined'}, keyStr: ${keyStr}`);\n      }\n    },\n    { alt: false, control: false, shift: false, meta: false }\n  );\n\n  return { key, keyCode: false, modifiers };\n};\n","/**\n * Credit - Angular Material\n */\n\nimport { parseKeyOptions } from './internals/key-parser';\nimport { KeyboardEventOptions } from './types';\n\n/** Creates a browser MouseEvent with the specified options. */\nexport function createMouseEvent(type: string, x: number = 0, y: number = 0, button: number = 0): MouseEvent {\n  const event = document.createEvent('MouseEvent');\n\n  event.initMouseEvent(type, true, false, window, 0, x, y, x, y, false, false, false, false, button, null);\n\n  // `initMouseEvent` doesn't allow us to pass the `buttons` and\n  // defaults it to 0 which looks like a fake event.\n  Object.defineProperty(event, 'buttons', { get: () => 1 });\n\n  return event;\n}\n\n/**\n * Creates a browser TouchEvent with the specified pointer coordinates.\n */\nexport function createTouchEvent(type: string, pageX: number = 0, pageY: number = 0): UIEvent {\n  // In favor of creating events that work for most of the browsers, the event is created\n  // as a basic UI Event. The necessary details for the event will be set manually.\n  const event = new UIEvent(type, {\n    bubbles: true,\n    cancelable: true,\n    view: window,\n    detail: 0\n  });\n\n  // Most of the browsers don't have a \"initTouchEvent\" method that can be used to define\n  // the touch details.\n  Object.defineProperties(event, {\n    touches: { value: [{ pageX, pageY }] }\n  });\n\n  return event;\n}\n\n/** Dispatches a keydown event from an element. */\nexport function createKeyboardEvent(type: string, keyOrKeyCode: string | number | KeyboardEventOptions, target?: Element): KeyboardEvent {\n  const { key, keyCode, modifiers } = parseKeyOptions(keyOrKeyCode);\n\n  const event = document.createEvent('KeyboardEvent') as any;\n  const originalPreventDefault = event.preventDefault;\n\n  // Firefox does not support `initKeyboardEvent`, but supports `initKeyEvent`.\n  if (event.initKeyEvent) {\n    event.initKeyEvent(type, true, true, window, modifiers.control, modifiers.alt, modifiers.shift, modifiers.meta, keyCode);\n  } else {\n    // `initKeyboardEvent` expects to receive modifiers as a whitespace-delimited string\n    // See https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/initKeyboardEvent\n    const modifiersStr = (modifiers.control\n      ? 'Control '\n      : '' + modifiers.alt\n      ? 'Alt '\n      : '' + modifiers.shift\n      ? 'Shift '\n      : '' + modifiers.meta\n      ? 'Meta'\n      : ''\n    ).trim();\n    event.initKeyboardEvent(\n      type,\n      true /* canBubble */,\n      true /* cancelable */,\n      window /* view */,\n      0 /* char */,\n      key /* key */,\n      0 /* location */,\n      modifiersStr /* modifiersList */,\n      false /* repeat */\n    );\n  }\n\n  // Webkit Browsers don't set the keyCode when calling the init function.\n  // See related bug https://bugs.webkit.org/show_bug.cgi?id=16735\n  Object.defineProperties(event, {\n    keyCode: { get: () => keyCode },\n    key: { get: () => key },\n    target: { get: () => target },\n    altKey: { get: () => !!modifiers.alt },\n    ctrlKey: { get: () => !!modifiers.control },\n    shiftKey: { get: () => !!modifiers.shift },\n    metaKey: { get: () => !!modifiers.meta }\n  });\n\n  // IE won't set `defaultPrevented` on synthetic events so we need to do it manually.\n  // tslint:disable-next-line\n  event.preventDefault = function() {\n    Object.defineProperty(event, 'defaultPrevented', { configurable: true, get: () => true });\n\n    return originalPreventDefault.apply(this, arguments);\n  };\n\n  return event;\n}\n\n/** Creates a fake event object with any desired event type. */\nexport function createFakeEvent(type: string, canBubble: boolean = false, cancelable: boolean = true): Event {\n  const event = document.createEvent('Event');\n  event.initEvent(type, canBubble, cancelable);\n\n  return event;\n}\n","/**\n * Credit - Angular Material\n */\n\nimport { createFakeEvent, createKeyboardEvent, createMouseEvent, createTouchEvent } from './event-creators';\nimport { KeyboardEventOptions } from './types';\n\n/**\n * Utility to dispatch any event on a Node.\n *\n * @publicApi\n */\nexport function dispatchEvent<E extends Event = Event>(node: Node | Window, event: E): E {\n  node.dispatchEvent(event);\n\n  return event;\n}\n\n/**\n * Shorthand to dispatch a fake event on a specified node.\n *\n * dispatchFakeEvent(element, 'mousedown');\n *\n * @publicApi\n */\nexport function dispatchFakeEvent(node: Node | Window, type: string, canBubble?: boolean): Event {\n  return dispatchEvent(node, createFakeEvent(type, canBubble));\n}\n\n/**\n * Shorthand to dispatch a keyboard event with a specified key.\n *\n *  dispatchKeyboardEvent(calendarBodyEl, 'keydown', 'LEFT_ARROW');\n *\n *  @publicApi\n */\nexport function dispatchKeyboardEvent(\n  node: Node,\n  type: string,\n  keyOrKeyCode: string | number | KeyboardEventOptions,\n  target?: Element\n): KeyboardEvent {\n  return dispatchEvent(node, createKeyboardEvent(type, keyOrKeyCode, target));\n}\n\n/**\n * Shorthand to dispatch a mouse event on the specified coordinates.\n *\n *  dispatchMouseEvent(rippleTarget, 'mousedown', 50, 75);\n *  dispatchMouseEvent(rippleTarget, 'mouseup');\n *\n *  @publicApi\n */\nexport function dispatchMouseEvent(\n  node: Node,\n  type: string,\n  x: number = 0,\n  y: number = 0,\n  event: MouseEvent = createMouseEvent(type, x, y)\n): MouseEvent {\n  return dispatchEvent(node, event);\n}\n\n/**\n * Shorthand to dispatch a touch event on the specified coordinates.\n *\n * dispatchTouchEvent(rippleTarget, 'touchstart');\n *\n * @publicApi\n */\nexport function dispatchTouchEvent(node: HTMLElement | Window | Document, type: string, x: number = 0, y: number = 0): Event {\n  return dispatchEvent(node, createTouchEvent(type, x, y));\n}\n","import { dispatchFakeEvent } from '../dispatch-events';\n\n/**\n * Patches an elements focus and blur methods to emit events consistently and predictably.\n * This is necessary, because some browsers, like IE11, will call the focus handlers asynchronously,\n * while others won't fire them at all if the browser window is not focused.\n *\n * patchElementFocus(triggerEl);\n */\nexport function patchElementFocus(element: HTMLElement): void {\n  element.focus = () => dispatchFakeEvent(element, 'focus');\n  element.blur = () => dispatchFakeEvent(element, 'blur');\n}\n","import { dispatchFakeEvent } from './dispatch-events';\n\n/**\n * Focuses an input or textarea, sets its value and dispatches\n * the `input` or `textarea` event, simulating the user typing.\n * @param value Value to be set on the input.\n * @param element Element onto which to set the value.\n *\n * typeInElement('al', input);\n */\nexport function typeInElement(value: string, element: HTMLElement | Document | Window): void {\n  if (!(element instanceof HTMLInputElement) && !(element instanceof HTMLTextAreaElement)) {\n    return;\n  }\n\n  element.focus();\n  element.value = value;\n  dispatchFakeEvent(element, 'input', true);\n}\n","import { dispatchFakeEvent } from './dispatch-events';\nimport { isString, isHTMLOptionElementArray, SelectOptions } from './types';\n\n/**\n * Focuses a select element, selects the correct options and dispatches\n * the `change` event, simulating the user selecting an option\n * @param options Options to be selected.\n * @param element Element onto which to select the options.\n * @param config Object with extra config to dispatch change event when option selected\n *\n * selectOption('al' | ['al', 'ab'], select, config);\n */\nexport function selectOption(\n  options: SelectOptions,\n  element: HTMLElement | HTMLSelectElement | Document | Window,\n  config: { emitEvents: boolean }\n): void {\n  if (!(element instanceof HTMLSelectElement)) {\n    return;\n  }\n\n  element.focus();\n\n  if (isString(options)) {\n    const option: HTMLOptionElement | null = element.querySelector(`option[value=\"${options}\"]`);\n    if (!option) {\n      return;\n    }\n\n    setOptionSelected(option, element, config);\n  } else if (options instanceof HTMLOptionElement) {\n    setOptionSelected(options, element, config);\n  } else {\n    if (!element.multiple) {\n      return;\n    }\n\n    if (isHTMLOptionElementArray(options)) {\n      options.forEach(option => setOptionSelected(option, element, config));\n    } else {\n      element.querySelectorAll('option').forEach(opt => {\n        if (options.includes(opt.value)) {\n          setOptionSelected(opt, element, config);\n        }\n      });\n    }\n  }\n}\n\n/**\n * Set the option in the HTMLSelectElement to selected\n * @param option HTMLOptionElement to select\n * @param select HTMLSelectElement to add the options to\n * @param config Object with extra config to dispatch change event when option selected\n *\n * setOptionSelected(option, element, config);\n */\nfunction setOptionSelected(option: HTMLOptionElement, select: HTMLSelectElement, config: { emitEvents: boolean }): void {\n  option.selected = true;\n  if (config.emitEvents) {\n    dispatchFakeEvent(select, 'change', true);\n  }\n}\n","import { TestBed } from '@angular/core/testing';\n\nimport { SpyObject } from '../mock';\nimport { Token } from '../token';\n\n/**\n * @internal\n */\nexport abstract class BaseSpectator {\n  public inject<T>(token: Token<T>): SpyObject<T> {\n    return TestBed.inject ? TestBed.inject(token) : TestBed.get(token);\n  }\n}\n","import { ChangeDetectorRef, DebugElement, ElementRef, Type, EventEmitter } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ComponentFixture, tick } from '@angular/core/testing';\nimport { By } from '@angular/platform-browser';\n\nimport { Token } from '../token';\nimport { DOMSelector } from '../dom-selectors';\nimport { isString, QueryOptions, QueryType, SpectatorElement, EventEmitterType, KeysMatching, KeyboardEventOptions } from '../types';\nimport { SpyObject } from '../mock';\nimport { getChildren, setProps } from '../internals/query';\nimport { patchElementFocus } from '../internals/element-focus';\nimport { createMouseEvent } from '../event-creators';\nimport { dispatchFakeEvent, dispatchKeyboardEvent, dispatchMouseEvent, dispatchTouchEvent } from '../dispatch-events';\nimport { typeInElement } from '../type-in-element';\nimport { selectOption } from '../select-option';\n\nimport { BaseSpectator } from './base-spectator';\n\nconst KEY_UP = 'keyup';\n\n/**\n * @internal\n */\nexport abstract class DomSpectator<I> extends BaseSpectator {\n  constructor(public fixture: ComponentFixture<any>, public debugElement: DebugElement, protected instance: I, public element: Element) {\n    super();\n  }\n\n  public inject<T>(token: Token<T>): SpyObject<T> {\n    return super.inject(token);\n  }\n\n  public detectChanges(): void {\n    this.fixture.detectChanges();\n  }\n\n  public query<R extends Element>(selector: string | DOMSelector, options?: { root: boolean }): R | null;\n  public query<R>(directive: Type<R>): R | null;\n  public query<R>(directiveOrSelector: Type<any> | string, options: { read: Token<R> }): R | null;\n  public query<R>(directiveOrSelector: QueryType, options?: QueryOptions<R>): R | Element | null {\n    if ((options || {}).root) {\n      if (isString(directiveOrSelector)) {\n        return document.querySelector(directiveOrSelector);\n      }\n\n      if (directiveOrSelector instanceof DOMSelector) {\n        return directiveOrSelector.execute(document as any)[0] || null;\n      }\n    }\n\n    return getChildren<R>(this.debugElement)(directiveOrSelector, options)[0] || null;\n  }\n\n  public queryAll<R extends Element>(selector: string | DOMSelector, options?: { root: boolean }): R[];\n  public queryAll<R>(directive: Type<R>): R[];\n  public queryAll<R>(directiveOrSelector: Type<any> | string, options: { read: Token<R> }): R[];\n  public queryAll<R>(directiveOrSelector: QueryType, options?: QueryOptions<R>): R[] | Element[] {\n    if ((options || {}).root) {\n      if (isString(directiveOrSelector)) {\n        return Array.from(document.querySelectorAll(directiveOrSelector));\n      }\n\n      if (directiveOrSelector instanceof DOMSelector) {\n        return directiveOrSelector.execute(document as any);\n      }\n    }\n\n    return getChildren<R>(this.debugElement)(directiveOrSelector, options);\n  }\n\n  public queryLast<R extends Element>(selector: string | DOMSelector, options?: { root: boolean }): R | null;\n  public queryLast<R>(directive: Type<R>): R | null;\n  public queryLast<R>(directiveOrSelector: Type<any> | string, options: { read: Token<R> }): R | null;\n  public queryLast<R>(directiveOrSelector: QueryType, options?: QueryOptions<R>): R | Element | null {\n    let result: (R | Element)[] = [];\n\n    if ((options || {}).root) {\n      if (isString(directiveOrSelector)) {\n        result = Array.from(document.querySelectorAll(directiveOrSelector));\n      }\n\n      if (directiveOrSelector instanceof DOMSelector) {\n        result = directiveOrSelector.execute(document as any);\n      }\n    } else {\n      result = getChildren<R>(this.debugElement)(directiveOrSelector, options);\n    }\n\n    if (result && result.length) {\n      return result[result.length - 1];\n    }\n\n    return null;\n  }\n\n  public setInput<K extends keyof I>(input: Partial<I>): void;\n  public setInput<K extends keyof I>(input: K, inputValue: I[K]): void;\n  public setInput(input: any, value?: any): void {\n    setProps(this.instance, input, value, false);\n    this.debugElement.injector.get(ChangeDetectorRef).detectChanges();\n  }\n\n  public output<T, K extends keyof I = keyof I>(output: K): Observable<T> {\n    const observable = this.instance[output];\n\n    if (!(observable instanceof Observable)) {\n      throw new Error(`${output} is not an @Output`);\n    }\n\n    return observable as Observable<T>;\n  }\n\n  public tick(millis?: number): void {\n    tick(millis);\n    this.detectChanges();\n  }\n\n  public click(selector: SpectatorElement = this.element): void {\n    const element = this.getNativeElement(selector);\n\n    if (!(element instanceof HTMLElement)) {\n      throw new Error(`Cannot click: ${selector} is not a HTMLElement`);\n    }\n\n    element.click();\n    this.detectChanges();\n  }\n\n  public blur(selector: SpectatorElement = this.element): void {\n    const element = this.getNativeElement(selector);\n\n    if (!(element instanceof HTMLElement)) {\n      throw new Error(`Cannot blur: ${selector} is not a HTMLElement`);\n    }\n\n    patchElementFocus(element);\n    element.blur();\n    this.detectChanges();\n  }\n\n  public focus(selector: SpectatorElement = this.element): void {\n    const element = this.getNativeElement(selector);\n\n    if (!(element instanceof HTMLElement)) {\n      throw new Error(`Cannot focus: ${selector} is not a HTMLElement`);\n    }\n\n    patchElementFocus(element);\n    element.focus();\n    this.detectChanges();\n  }\n\n  public dispatchMouseEvent(\n    selector: SpectatorElement = this.element,\n    type: string,\n    x: number = 0,\n    y: number = 0,\n    event: MouseEvent = createMouseEvent(type, x, y)\n  ): MouseEvent {\n    const element = this.getNativeElement(selector);\n\n    if (!(element instanceof Node)) {\n      throw new Error(`Cannot dispatch mouse event: ${selector} is not a node`);\n    }\n\n    const dispatchedEvent = dispatchMouseEvent(element, type, x, y, event);\n    this.detectChanges();\n\n    return dispatchedEvent;\n  }\n\n  public dispatchKeyboardEvent(selector: SpectatorElement, type: string, keyCode: number, target?: Element): KeyboardEvent;\n  public dispatchKeyboardEvent(selector: SpectatorElement, type: string, key: string, target?: Element): KeyboardEvent;\n  public dispatchKeyboardEvent(selector: SpectatorElement, type: string, keyAndCode: KeyboardEventOptions, target?: Element): KeyboardEvent;\n  public dispatchKeyboardEvent(\n    selector: SpectatorElement = this.element,\n    type: string,\n    keyOrKeyCode: string | number | KeyboardEventOptions,\n    target?: Element\n  ): KeyboardEvent {\n    const element = this.getNativeElement(selector);\n\n    if (!(element instanceof Node)) {\n      throw new Error(`Cannot dispatch keyboard event: ${selector} is not a node`);\n    }\n\n    const event = dispatchKeyboardEvent(element, type, keyOrKeyCode, target);\n\n    this.detectChanges();\n\n    return event;\n  }\n\n  public dispatchFakeEvent(selector: SpectatorElement = this.element, type: string, canBubble?: boolean): Event {\n    const event = dispatchFakeEvent(this.getNativeElement(selector), type, canBubble);\n    this.detectChanges();\n\n    return event;\n  }\n\n  public triggerEventHandler<C = any, K extends KeysMatching<C, EventEmitter<any>> = any>(\n    directiveOrSelector: Type<C> | string | DebugElement,\n    eventName: K,\n    eventObj: EventEmitterType<C[K]>\n  ) {\n    const debugElement = this.getDebugElement(directiveOrSelector);\n    if (!debugElement) {\n      // tslint:disable:no-console\n      console.error(`${directiveOrSelector} does not exists`);\n      return;\n    }\n    debugElement.triggerEventHandler(eventName as string, eventObj);\n    this.detectChanges();\n  }\n\n  public get keyboard() {\n    return {\n      pressKey: (key: string, selector: SpectatorElement = this.element, event = KEY_UP) => {\n        this.dispatchKeyboardEvent(selector, event, key);\n      },\n      pressEscape: (selector: SpectatorElement = this.element, event = KEY_UP) => {\n        this.dispatchKeyboardEvent(selector, event, { key: 'Escape', keyCode: 27 });\n      },\n      pressEnter: (selector: SpectatorElement = this.element, event = KEY_UP) => {\n        this.dispatchKeyboardEvent(selector, event, { key: 'Enter', keyCode: 13 });\n      },\n      pressTab: (selector: SpectatorElement = this.element, event = KEY_UP) => {\n        this.dispatchKeyboardEvent(selector, event, { key: 'Tab', keyCode: 9 });\n      },\n      pressBackspace: (selector: SpectatorElement = this.element, event = KEY_UP) => {\n        this.dispatchKeyboardEvent(selector, event, { key: 'Backspace', keyCode: 8 });\n      }\n    };\n  }\n\n  public get mouse() {\n    return {\n      contextmenu: (selector: SpectatorElement = this.element) => {\n        this.dispatchMouseEvent(selector, 'contextmenu');\n      },\n      dblclick: (selector: SpectatorElement = this.element) => {\n        this.dispatchMouseEvent(selector, 'dblclick');\n      }\n    };\n  }\n\n  public dispatchTouchEvent(selector: SpectatorElement = this.element, type: string, x: number = 0, y: number = 0): void {\n    dispatchTouchEvent(this.getNativeElement(selector), type, x, y);\n    this.detectChanges();\n  }\n\n  public typeInElement(value: string, selector: SpectatorElement = this.element): void {\n    typeInElement(value, this.getNativeElement(selector));\n    this.detectChanges();\n  }\n\n  public selectOption(\n    selector: SpectatorElement = this.element,\n    options: string | string[] | HTMLOptionElement | HTMLOptionElement[],\n    config: { emitEvents: boolean } = { emitEvents: true }\n  ): void {\n    if (!selector) {\n      throw new Error(`Cannot find select: ${selector}`);\n    }\n    selectOption(options, this.getNativeElement(selector), config);\n    this.detectChanges();\n  }\n\n  private getNativeElement(selector: SpectatorElement): HTMLElement | Window | Document {\n    let element;\n\n    // Support global objects window and document\n    if (selector === window || selector === document) {\n      return selector;\n    }\n\n    if (isString(selector)) {\n      const exists = this.debugElement.query(By.css(selector));\n      if (exists) {\n        element = exists.nativeElement;\n      } else {\n        // tslint:disable:no-console\n        console.error(`${selector} does not exists`);\n      }\n    } else if (selector instanceof DOMSelector) {\n      element = selector.execute(document as any)[0] || null;\n    } else {\n      if (selector instanceof DebugElement || selector instanceof ElementRef) {\n        element = selector.nativeElement;\n      } else {\n        element = selector;\n      }\n    }\n\n    return element;\n  }\n\n  private getDebugElement(directiveOrSelector: string | DebugElement | Type<unknown>) {\n    let debugElement: DebugElement;\n    if (isString(directiveOrSelector)) {\n      debugElement = this.debugElement.query(By.css(directiveOrSelector));\n    } else if (directiveOrSelector instanceof DebugElement) {\n      debugElement = directiveOrSelector;\n    } else {\n      debugElement = this.debugElement.query(By.directive(directiveOrSelector));\n    }\n    return debugElement;\n  }\n}\n","import { ChangeDetectorRef, DebugElement, InjectionToken, Type, AbstractType } from '@angular/core';\nimport { ComponentFixture } from '@angular/core/testing';\n\nimport { SpyObject } from '../mock';\nimport { Token } from '../token';\nimport { DomSpectator } from '../base/dom-spectator';\n\n/**\n * @publicApi\n */\nexport class Spectator<C> extends DomSpectator<C> {\n  constructor(public fixture: ComponentFixture<C>, public debugElement: DebugElement, protected instance: C, public element: HTMLElement) {\n    super(fixture, debugElement, instance, element);\n  }\n\n  public get component(): C {\n    return this.instance;\n  }\n\n  public inject<T>(token: Token<T>, fromComponentInjector: boolean = false): SpyObject<T> {\n    if (fromComponentInjector) {\n      return this.debugElement.injector.get(token) as SpyObject<T>;\n    }\n\n    return super.inject(token);\n  }\n\n  public detectComponentChanges(): void {\n    if (this.debugElement) {\n      this.debugElement.injector.get(ChangeDetectorRef).detectChanges();\n    } else {\n      this.detectChanges();\n    }\n  }\n}\n","/**\n * @license\n * Copyright Netanel Basal. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NetanelBasal/spectator/blob/master/LICENSE\n */\n\nexport function hex2rgb(hex: string): string {\n  const h = hex.replace('#', '');\n  const matches = h.match(new RegExp('(.{' + h.length / 3 + '})', 'g'))!;\n  const [r, g, b] = matches.map(match => parseInt(match.length === 1 ? match + match : match, 16));\n\n  return `rgb(${r},${g},${b})`;\n}\n\nexport function isHex(value: string): boolean {\n  return /^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/.test(value);\n}\n\nexport function trim(value: string): string {\n  return (value || '').replace(/\\s/g, '');\n}\n","export function isRunningInJsDom() {\n  return navigator.userAgent.includes('Node.js') || navigator.userAgent.includes('jsdom');\n}\n","/** Credit: https://github.com/unindented/custom-jquery-matchers/tree/master/packages/custom-jquery-matchers */\n// tslint:disable:no-shadowed-variable\n\nimport $ from 'jquery';\n\nimport { hex2rgb, isHex, trim } from './internals/rgb-to-hex';\nimport { isHTMLOptionElementArray, isObject } from './types';\nimport { isRunningInJsDom } from './utils';\n\nexport interface CustomMatcherFactory {\n  (): CustomMatcher;\n}\n\nexport interface CustomMatcher {\n  compare<T>(actual: T, expected: T, ...args: any[]): CustomMatcherResult;\n}\n\nexport interface CustomMatcherResult {\n  pass: boolean;\n  message?: string;\n}\n\nconst hasProperty = (actual: unknown, expected: unknown): boolean => {\n  return expected === undefined ? actual !== undefined : actual === expected;\n};\n\nconst containsProperty = (actual: string, expected: unknown): boolean => {\n  return expected === undefined ? true : actual.includes(expected as string);\n};\n\nconst checkProperty = (\n  el: HTMLElement,\n  prop: object,\n  predicate: (actual, expected) => boolean\n): { pass: boolean; message: () => string } => {\n  let pass = false;\n  let failing = '';\n\n  for (const key of Object.keys(prop)) {\n    const actual = $(el).prop(key);\n    const addendum = prop[key] !== undefined ? ` with value '${prop[key]}'` : '';\n\n    pass = predicate(actual, prop[key]);\n    failing = !pass ? `'${prop}'${addendum}, but had '${actual}'` : '';\n  }\n\n  const message = () => `Expected element${pass ? ' not' : ''} to have property ${failing}`;\n\n  return { pass, message };\n};\n\nconst hasCss = (el: HTMLElement, css: { [key: string]: string }) => {\n  let prop;\n  let value;\n  const $el = $(el);\n  for (prop in css) {\n    if (css.hasOwnProperty(prop)) {\n      value = css[prop];\n\n      if (isHex(value)) {\n        value = hex2rgb(css[prop]);\n      }\n\n      if (value === 'auto' && $el.get(0).style[prop] === 'auto') {\n        continue;\n      }\n\n      if (trim($el.css(prop)) !== trim(value) && trim(el.style[prop]) !== trim(value)) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n};\n\nconst hasSameText = (el: HTMLElement, expected: string | string[] | ((s: string) => boolean), exact = false) => {\n  if (expected && Array.isArray(expected)) {\n    let actual: string;\n    let pass = false;\n    let failing: string;\n\n    $(el).each((i, e) => {\n      actual = exact ? $(e).text() : $.trim($(e).text());\n      pass = exact ? actual === expected[i] : actual.includes(expected[i]);\n      if (!pass) {\n        failing = expected[i];\n\n        return false;\n      }\n    });\n\n    const message = () => `Expected element${pass ? ' not' : ''} to have ${exact ? 'exact' : ''} text '${failing}', but had '${actual}'`;\n\n    return { pass, message };\n  }\n\n  const actual = exact ? $(el).text() : $.trim($(el).text());\n\n  if (expected && typeof expected !== 'string') {\n    const pass = expected(actual);\n    const message = () =>\n      `Expected element${pass ? ' not' : ''} to have ${exact ? 'exact' : ''} text matching '${expected}',` + ` but had '${actual}'`;\n\n    return { pass, message };\n  }\n\n  const pass = exact && !Array.isArray(expected) ? actual === expected : actual.indexOf(expected) !== -1;\n  const message = () => `Expected element${pass ? ' not' : ''} to have ${exact ? 'exact' : ''} text '${expected}', but had '${actual}'`;\n\n  return { pass, message };\n};\n\nconst comparator = (func): CustomMatcherFactory => () => ({\n  compare: func\n});\n\n/**\n *\n * expect('.zippy__content').not.toExist();\n */\nexport const toExist = comparator((el: string | Element) => {\n  const actual = $(el).length;\n  const pass = actual > 0;\n  const message = () => `Expected ${el} element${pass ? ' not' : ''} to exist`;\n\n  return { pass, message };\n});\n\n/**\n *\n * expect('.zippy__content').toHaveLength(3);\n */\nexport const toHaveLength = comparator((el: string, expected: number) => {\n  const actual = $(el).length;\n  const pass = actual === expected;\n  const message = () => `Expected element${pass ? ' not' : ''} to have length ${expected}, but had ${actual}`;\n\n  return { pass, message };\n});\n\n/**\n *\n * expect('.zippy__content').toHaveId('ID');\n */\nexport const toHaveId = comparator((el, expected) => {\n  const actual = $(el).attr('id');\n  const pass = actual === expected;\n  const message = () => `Expected element${pass ? ' not' : ''} to have ID '${expected}', but had '${actual}'`;\n\n  return { pass, message };\n});\n\n/**\n *\n * expect('.zippy__content').toHaveClass('class');\n * expect('.zippy__content').toHaveClass('class a, class b');\n * expect('.zippy__content').toHaveClass(['class a, class b']);\n */\nexport const toHaveClass = comparator((el, expected: string | string[]) => {\n  if (expected && Array.isArray(expected)) {\n    const actual: string = $(el).attr('class');\n    const expectedClasses = expected.join(' ');\n    const pass = $(el).hasClass(expectedClasses);\n    const message = () => `Expected element${pass ? ' not' : ''} to have value '${expectedClasses}', but had '${actual}'`;\n\n    return { pass, message };\n  }\n\n  const actual = $(el).attr('class');\n  const pass = $(el).hasClass(expected);\n  const message = () => `Expected element${pass ? ' not' : ''} to have class '${expected}', but had '${actual}'`;\n\n  return { pass, message };\n});\n\n/**\n * expect(host.query('.zippy')).toHaveAttribute('id', 'zippy');\n */\nexport const toHaveAttribute = comparator((el, attr: string | object, val) => {\n  if (isObject(attr)) {\n    let pass = false;\n    let failing: string;\n\n    for (const key of Object.keys(attr)) {\n      const actual = $(el).attr(key);\n      const addendum = attr[key] !== undefined ? ` with value '${attr[key]}'` : '';\n      pass = hasProperty(actual, attr[key]);\n      failing = !pass ? `'${attr}'${addendum}, but had '${actual}'` : '';\n    }\n    const message = () => `Expected element${pass ? ' not' : ''} to have attribute ${failing}`;\n\n    return { pass, message };\n  }\n\n  const actual = $(el).attr(attr);\n  const addendum = val !== undefined ? ` with value '${val}'` : '';\n  const pass = hasProperty(actual, val);\n  const message = () => `Expected element${pass ? ' not' : ''} to have attribute '${attr}'${addendum}, but had '${actual}'`;\n\n  return { pass, message };\n});\n\n/**\n *  expect(host.query('.checkbox')).toHaveProperty('checked', true);\n *  expect(host.query('.checkbox')).toHaveProperty({checked: true});\n */\nexport const toHaveProperty = comparator((el, prop, val) => {\n  if (isObject(prop)) {\n    return checkProperty(el, prop, hasProperty);\n  }\n\n  const actual = $(el).prop(prop);\n  const addendum = val !== undefined ? ` with value '${val}'` : '';\n  const pass = hasProperty(actual, val);\n  const message = () => `Expected element${pass ? ' not' : ''} to have property '${prop}'${addendum}, but had '${actual}'`;\n\n  return { pass, message };\n});\n\nexport const toContainProperty = comparator((el, prop, val) => {\n  if (isObject(prop)) {\n    return checkProperty(el, prop, containsProperty);\n  }\n\n  const actual = $(el).prop(prop);\n  const addendum = val !== undefined ? ` with value '${val}'` : '';\n  const pass = containsProperty(actual, val);\n  const message = () => `Expected element${pass ? ' not' : ''} to have property '${prop}'${addendum}, but had '${actual}'`;\n\n  return { pass, message };\n});\n\n/**\n *\n * expect('.zippy__content').toHaveText('Content');\n * expect('.zippy__content').toHaveText(['Content A', 'Content B']);\n *\n * expect('.zippy__content').toHaveText((text) => text.includes('..');\n */\nexport const toHaveText = comparator((el, expected, exact = false) => hasSameText(el, expected, exact));\n\nexport const toHaveExactText = comparator((el, expected) => hasSameText(el, expected, true));\n\nexport const toContainText = toHaveText;\n\n/**\n *\n * expect('.zippy__content').toHaveValue('value');\n * expect('.zippy__content').toHaveValue(['value a', 'value b']);\n */\nexport const toHaveValue = comparator((el, expected) => {\n  if (expected && Array.isArray(expected)) {\n    let actual: string;\n    let pass = false;\n    let failing: string;\n\n    $(el).each((i, e) => {\n      actual = $(e).val();\n      pass = actual === expected[i];\n      if (!pass) {\n        failing = expected[i];\n\n        return false;\n      }\n    });\n\n    const message = () => `Expected element${pass ? ' not' : ''} to have value '${failing}', but had '${actual}'`;\n\n    return { pass, message };\n  }\n\n  const actual = $(el).val();\n  const pass = actual === expected;\n  const message = () => `Expected element${pass ? ' not' : ''} to have value '${expected}', but had '${actual}'`;\n\n  return { pass, message };\n});\n\nexport const toContainValue = toHaveValue;\n\n/**\n *\n *  expect(host.element).toHaveStyle({\n *    backgroundColor: 'rgba(0, 0, 0, 0.1)'\n *  });\n */\nexport const toHaveStyle = comparator((el, expected) => {\n  const pass = hasCss(el, expected);\n  const message = () => `Expected element${pass ? ' not' : ''} to have CSS ${JSON.stringify(expected)}`;\n\n  return { pass, message };\n});\n\n/**\n *\n * expect('.zippy__content').toHaveData({data: 'role', val: 'admin'});\n */\nexport const toHaveData = comparator((el, { data, val }) => {\n  const actual = $(el).data(data);\n  const addendum = val !== undefined ? ` with value '${val}'` : '';\n  const pass = hasProperty(actual, val);\n  const message = () => `Expected element${pass ? ' not' : ''} to have data '${data}'${addendum}, but had '${actual}'`;\n\n  return { pass, message };\n});\n\n/**\n *\n * expect('.checkbox').toBeChecked();\n */\nexport const toBeChecked = comparator(el => {\n  const pass = $(el).is(':checked');\n  const message = () => `Expected element${pass ? ' not' : ''} to be checked`;\n\n  return { pass, message };\n});\n\n/**\n *\n * expect('.checkbox').toBeDisabled();\n */\nexport const toBeDisabled = comparator(el => {\n  const pass = $(el).is(':disabled');\n  const message = () => `Expected element${pass ? ' not' : ''} to be disabled`;\n\n  return { pass, message };\n});\n\n/**\n * An empty element is an element without child elements or text.\n *\n * expect('div').toBeEmpty();\n */\nexport const toBeEmpty = comparator(el => {\n  const pass = $(el).is(':empty');\n  const message = () => `Expected element${pass ? ' not' : ''} to be empty`;\n\n  return { pass, message };\n});\n\n/**\n * Hidden elements are elements that have:\n * 1. Display property set to \"none\"\n * 2. Width and height set to 0 (check not applied in jest)\n * 3. A hidden parent element (this also hides child elements)\n * 4. Type equal to \"hidden\" (only for form elements)\n * 5. A \"hidden\" attribute\n */\nfunction isHidden(elOrSelector: HTMLElement | string): boolean {\n  let el = $(elOrSelector)[0];\n\n  if (!el) {\n    return true;\n  }\n\n  const hiddenWhen = [\n    el => !(el.offsetWidth || el.offsetHeight || el.getClientRects().length),\n    el => el.style.display === 'none',\n    el => el.style.visibility === 'hidden',\n    el => el.type === 'hidden',\n    el => el.hasAttribute('hidden')\n  ];\n\n  if (isRunningInJsDom()) {\n    // When running in JSDOM (Jest), offset-properties and client rects are always reported as 0\n    // - hence, let's take a more \"naive\" approach here. (https://github.com/jsdom/jsdom/issues/135)\n    hiddenWhen.shift();\n  }\n\n  while (el) {\n    if (el === document) {\n      break;\n    }\n\n    if (hiddenWhen.some(rule => rule(el))) {\n      return true;\n    }\n\n    el = el.parentNode;\n  }\n\n  return false;\n}\n\n/**\n * Hidden elements are elements that have:\n * 1. Display property set to \"none\"\n * 2. Width and height set to 0\n * 3. A hidden parent element (this also hides child elements)\n * 4. Type equal to \"hidden\" (only for form elements)\n * 5. A \"hidden\" attribute\n *\n * expect('div').toBeHidden();\n *\n */\nexport const toBeHidden = comparator(el => {\n  const pass = isHidden(el);\n  const message = () => `Expected element${pass ? ' not' : ''} to be hidden`;\n\n  return { pass, message };\n});\n\n/**\n * The :selected selector selects option elements that are pre-selected.\n *\n * expect('div').toBeSelected();\n *\n */\nexport const toBeSelected = comparator(el => {\n  const pass = $(el).is(':selected');\n  const message = () => `Expected element${pass ? ' not' : ''} to be selected`;\n\n  return { pass, message };\n});\n\n/**\n * Hidden elements are elements that have:\n * 1. Display property set to \"none\"\n * 2. Width and height set to 0\n * 3. A hidden parent element (this also hides child elements)\n * 4. Type equal to \"hidden\" (only for form elements)\n * 5. A \"hidden\" attribute\n *\n * expect('div').toBeVisible();\n *\n */\nexport const toBeVisible = comparator(el => {\n  const pass = !isHidden(el);\n\n  const message = () => `Expected element${pass ? ' not' : ''} to be visible`;\n\n  return { pass, message };\n});\n\n/**\n * The :focus selector selects the element that currently has focus.\n *\n * expect('input').toBeFocused();\n */\nexport const toBeFocused = comparator(el => {\n  const element = $(el).get(0);\n  const pass = element === element.ownerDocument.activeElement;\n  const message = () => `Expected element${pass ? ' not' : ''} to be focused`;\n\n  return { pass, message };\n});\n\n/**\n * Check to see if the set of matched elements matches the given selector\n * returns true if the dom contains the element\n *\n * expect('div').toBeMatchedBy('.js-something')\n */\nexport const toBeMatchedBy = comparator((el, expected) => {\n  const actual = $(el).filter(expected).length;\n  const pass = actual > 0;\n  const message = () => `Expected element${pass ? ' not' : ''} to be matched by '${expected}'`;\n\n  return { pass, message };\n});\n\n/**\n *\n * expect('div').toHaveDescendant('.child')\n */\nexport const toHaveDescendant = comparator((el, selector) => {\n  const actual = $(el).find(selector).length;\n  const pass = actual > 0;\n  const message = () => `Expected element${pass ? ' not' : ''} to contain child '${selector}'`;\n\n  return { pass, message };\n});\n\n/**\n *\n * expect('div').toHaveDescendantWithText({selector: '.child', text: 'text'})\n */\nexport const toHaveDescendantWithText = comparator((el, { selector, text }) => {\n  const actual = $.trim(\n    $(el)\n      .find(selector)\n      .text()\n  );\n  if (text && $.isFunction(text.test)) {\n    const pass = text.test(actual);\n    const message = () =>\n      `Expected element${pass ? ' not' : ''} to have descendant '${selector}' with text matching '${text}',` + ` but had '${actual}'`;\n\n    return { pass, message };\n  }\n  const pass = actual.indexOf(text) !== -1;\n  const message = () => `Expected element${pass ? ' not' : ''} to have descendant '${selector}' with text '${text}', but had '${actual}'`;\n\n  return { pass, message };\n});\n\nexport const toHaveSelectedOptions = comparator((el, expected) => {\n  if (expected instanceof HTMLOptionElement) {\n    const actual = $(el).find(':selected');\n\n    const pass = actual.is($(expected));\n\n    const message = () =>\n      `Expected element${pass ? ' not' : ''} to have options '[${expected.outerHTML}]' but had '[${actual[0].outerHTML}]'`;\n\n    return { pass, message };\n  }\n\n  if (isHTMLOptionElementArray(expected)) {\n    const actual = $(el).find(':selected');\n\n    const pass = actual.length === expected.length && actual.toArray().every((_, index) => $(actual[index]).is(expected[index]));\n\n    const expectedOptionsString = $(expected)\n      .get()\n      .map(option => option.outerHTML)\n      .join(',');\n\n    const actualOptionsString = actual\n      .get()\n      .map(option => option.outerHTML)\n      .join(',');\n\n    const message = () =>\n      `Expected element${pass ? ' not' : ''} to have options '[${expectedOptionsString}]' but had '[${actualOptionsString}]'`;\n\n    return { pass, message };\n  }\n\n  const actual = $(el).val();\n  const pass = JSON.stringify([...actual]) === JSON.stringify([...expected]);\n\n  const expectedOptionsString = Array.isArray(expected)\n    ? expected.reduce((acc: string, val: string, i) => acc + `${i === expected.length ? '' : ','}${val}`)\n    : expected;\n  const message = () => `Expected element${pass ? ' not' : ''} to have options '[${expectedOptionsString}]' but had '[${actual}]'`;\n\n  return { pass, message };\n});\n","import { CustomMatcherFactory } from './matchers';\n\ndeclare var jasmine: any;\ndeclare var jest: any;\n\nexport function addMatchers(matchers: Record<string, CustomMatcherFactory>): void {\n  if (!matchers) return;\n\n  if (typeof jasmine !== 'undefined') {\n    jasmine.addMatchers(matchers);\n  }\n  if (typeof jest !== 'undefined') {\n    const jestExpectExtend = {};\n    for (const key of Object.keys(matchers)) {\n      if (key.startsWith('to')) jestExpectExtend[key] = matchers[key]().compare;\n    }\n\n    (expect as any).extend(jestExpectExtend);\n  }\n}\n","import { TestModuleMetadata } from '@angular/core/testing';\n\nlet globals: TestModuleMetadata = {\n  providers: [],\n  declarations: [],\n  imports: []\n};\n\nexport function defineGlobalsInjections(config: TestModuleMetadata): void {\n  globals = { ...globals, ...config };\n}\n\nexport function getGlobalsInjections(): TestModuleMetadata {\n  return globals;\n}\n","import { SchemaMetadata, Type } from '@angular/core';\nimport { NoopAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { getGlobalsInjections } from '../globals-injections';\n\nimport { BaseSpectatorOptions } from './options';\n\n/**\n * @publicApi\n */\nexport interface ModuleMetadata {\n  declarations: any[];\n  imports: any[];\n  providers: any[];\n  entryComponents: Type<any>[];\n  schemas?: (SchemaMetadata | any[])[];\n}\n\n/**\n * @internal\n */\nexport function initialModule(options: Required<BaseSpectatorOptions>): ModuleMetadata {\n  const globals = { imports: [], declarations: [], providers: [], ...getGlobalsInjections() };\n\n  return {\n    declarations: [...globals.declarations, ...options.declarations, ...options.entryComponents],\n    imports: [...(options.disableAnimations ? [NoopAnimationsModule] : []), ...globals.imports, ...options.imports],\n    providers: [...globals.providers, ...options.providers, ...options.mocks.map(type => options.mockProvider(type))],\n    entryComponents: [...options.entryComponents]\n  };\n}\n","import { NO_ERRORS_SCHEMA } from '@angular/core';\n\nimport { initialModule, ModuleMetadata } from '../base/initial-module';\n\nimport { SpectatorOptions } from './options';\n\n/**\n * @internal\n */\nexport function initialSpectatorModule<C>(options: Required<SpectatorOptions<C>>): ModuleMetadata {\n  const moduleMetadata = initialModule(options);\n\n  if (options.declareComponent) {\n    moduleMetadata.declarations.push(options.component);\n  }\n\n  moduleMetadata.schemas = [options.shallow ? NO_ERRORS_SCHEMA : options.schemas || []];\n\n  return moduleMetadata;\n}\n","import { OptionalsRequired } from '../types';\n\n/**\n * @internal\n */\nexport function merge<T>(defaults: OptionalsRequired<T>, overrides?: T): Required<T> {\n  // tslint:disable-next-line:no-object-literal-type-assertion\n  return { ...defaults, ...overrides } as Required<T>;\n}\n","/** Credit: Valentin Buryakov */\nimport { FactoryProvider, Type, AbstractType } from '@angular/core';\n\ntype Writable<T> = { -readonly [P in keyof T]: T[P] };\n\n/**\n * @publicApi\n */\nexport interface CompatibleSpy extends jasmine.Spy {\n  /**\n   * By chaining the spy with and.returnValue, all calls to the function will return a specific\n   * value.\n   */\n  andReturn(val: any): void;\n\n  /**\n   * By chaining the spy with and.callFake, all calls to the spy will delegate to the supplied\n   * function.\n   */\n  andCallFake(fn: Function): this;\n\n  /**\n   * removes all recorded calls\n   */\n  reset(): void;\n}\n\n/**\n * @publicApi\n */\nexport type SpyObject<T> = T &\n  { [P in keyof T]: T[P] extends Function ? T[P] & CompatibleSpy : T[P] } & {\n    /**\n     * Casts to type without readonly properties\n     */\n    castToWritable(): Writable<T>;\n  };\n\n/**\n * @internal\n */\nexport function installProtoMethods<T>(mock: any, proto: any, createSpyFn: Function): void {\n  if (proto === null || proto === Object.prototype) {\n    return;\n  }\n\n  for (const key of Object.getOwnPropertyNames(proto)) {\n    const descriptor = Object.getOwnPropertyDescriptor(proto, key);\n\n    if (!descriptor) {\n      continue;\n    }\n\n    if (typeof descriptor.value === 'function' && key !== 'constructor' && typeof mock[key] === 'undefined') {\n      mock[key] = createSpyFn(key);\n    } else if (descriptor.get && !mock.hasOwnProperty(key)) {\n      Object.defineProperty(mock, key, {\n        set: value => (mock[`_${key}`] = value),\n        get: () => mock[`_${key}`],\n        configurable: true\n      });\n    }\n  }\n\n  installProtoMethods(mock, Object.getPrototypeOf(proto), createSpyFn);\n\n  mock.castToWritable = () => mock;\n}\n\n/**\n * @publicApi\n */\nexport function createSpyObject<T>(type: Type<T> | AbstractType<T>, template?: Partial<Record<keyof T, any>>): SpyObject<T> {\n  const mock: any = { ...template } || {};\n\n  installProtoMethods<T>(mock, type.prototype, name => {\n    const newSpy: jasmine.Spy & Partial<CompatibleSpy> = jasmine.createSpy(name);\n    newSpy.andCallFake = (fn: (...args: any[]) => any) => <any>newSpy.and.callFake(fn);\n    newSpy.andReturn = val => newSpy.and.returnValue(val);\n    newSpy.reset = () => newSpy.calls.reset();\n    // revisit return null here (previously needed for rtts_assert).\n    newSpy.and.returnValue(null);\n\n    return newSpy;\n  });\n\n  return mock;\n}\n\n/**\n * @publicApi\n */\nexport function mockProvider<T>(type: Type<T> | AbstractType<T>, properties?: Partial<Record<keyof T, any>>): FactoryProvider {\n  return {\n    provide: type,\n    useFactory: () => createSpyObject(type, properties)\n  };\n}\n\n/**\n * @publicApi\n */\nexport type MockProvider = typeof mockProvider;\n","import { NgModule, Provider, SchemaMetadata, Type } from '@angular/core';\nimport { MetadataOverride } from '@angular/core/testing';\n\nimport { merge } from '../internals/merge';\nimport { mockProvider, MockProvider } from '../mock';\nimport { OptionalsRequired } from '../types';\n\n/**\n * @internal\n */\nexport interface BaseSpectatorOptions {\n  disableAnimations?: boolean;\n  entryComponents?: Type<any>[];\n  mocks?: Type<any>[];\n  mockProvider?: MockProvider;\n  providers?: any[];\n  declarations?: any[];\n  imports?: any[];\n  schemas?: (SchemaMetadata | any[])[];\n  overrideModules?: [Type<any>, MetadataOverride<NgModule>][];\n}\n\n/**\n * @internal\n */\nexport interface BaseSpectatorOverrides {\n  providers?: Provider[];\n}\n\nconst defaultOptions: OptionalsRequired<BaseSpectatorOptions> = {\n  disableAnimations: true,\n  entryComponents: [],\n  mocks: [],\n  mockProvider,\n  providers: [],\n  declarations: [],\n  imports: [],\n  schemas: [],\n  overrideModules: []\n};\n\n/**\n * @internal\n */\nexport function getDefaultBaseOptions(options?: BaseSpectatorOptions): Required<BaseSpectatorOptions> {\n  return merge<BaseSpectatorOptions>(defaultOptions, options);\n}\n","import { Type } from '@angular/core';\n\nimport { getDefaultBaseOptions, BaseSpectatorOptions } from '../base/options';\nimport { merge } from '../internals/merge';\nimport { OptionalsRequired } from '../types';\n\n/**\n * @publicApi\n */\nexport interface SpectatorOptions<C> extends BaseSpectatorOptions {\n  component: Type<C>;\n  shallow?: boolean;\n  componentProviders?: any[];\n  componentViewProviders?: any[];\n  detectChanges?: boolean;\n  declareComponent?: boolean;\n  componentMocks?: Type<any>[];\n  componentViewProvidersMocks?: Type<any>[];\n}\n\nconst defaultSpectatorOptions: OptionalsRequired<SpectatorOptions<any>> = {\n  ...getDefaultBaseOptions(),\n  shallow: false,\n  declareComponent: true,\n  detectChanges: true,\n  componentProviders: [],\n  componentViewProviders: [],\n  componentMocks: [],\n  componentViewProvidersMocks: []\n};\n\n/**\n * @internal\n */\nexport function getSpectatorDefaultOptions<C>(overrides?: SpectatorOptions<C>): Required<SpectatorOptions<C>> {\n  return merge(defaultSpectatorOptions, overrides);\n}\n","import { Provider, Type } from '@angular/core';\nimport { TestBed, waitForAsync } from '@angular/core/testing';\nimport { BrowserDynamicTestingModule } from '@angular/platform-browser-dynamic/testing';\n\nimport { BaseSpectatorOptions, BaseSpectatorOverrides } from '../base/options';\nimport { setProps } from '../internals/query';\nimport * as customMatchers from '../matchers';\nimport { addMatchers } from '../core';\nimport { isType } from '../types';\n\nimport { initialSpectatorModule } from './initial-module';\nimport { getSpectatorDefaultOptions, SpectatorOptions } from './options';\nimport { Spectator } from './spectator';\n\n/**\n * @publicApi\n */\nexport type SpectatorFactory<C> = (options?: SpectatorOverrides<C>) => Spectator<C>;\n\n/**\n * @publicApi\n */\nexport interface SpectatorOverrides<C> extends BaseSpectatorOverrides {\n  detectChanges?: boolean;\n  props?: Partial<C>;\n}\n\n/**\n * @internal\n */\nexport function overrideComponentIfProviderOverridesSpecified<C>(options: Required<SpectatorOptions<C>>): void {\n  const hasProviderOverrides = options.componentProviders.length || options.componentMocks.length;\n  const hasViewProviders = options.componentViewProviders.length || options.componentViewProvidersMocks.length;\n  if (hasProviderOverrides || hasViewProviders) {\n    let providerConfiguration = {};\n    if (hasProviderOverrides) {\n      providerConfiguration = {\n        providers: [...options.componentProviders, ...options.componentMocks.map(p => options.mockProvider(p))]\n      };\n    }\n    if (hasViewProviders) {\n      providerConfiguration = {\n        ...providerConfiguration,\n        viewProviders: [...options.componentViewProviders, ...options.componentViewProvidersMocks.map(p => options.mockProvider(p))]\n      };\n    }\n    TestBed.overrideComponent(options.component, {\n      set: providerConfiguration\n    });\n  }\n}\n\n/**\n * @internal\n */\nexport function overrideModules(options: Required<BaseSpectatorOptions>): void {\n  if (options.overrideModules.length) {\n    options.overrideModules.forEach(overrideModule => {\n      const [ngModule, override] = overrideModule;\n\n      TestBed.overrideModule(ngModule, override);\n    });\n  }\n}\n\n/**\n * @publicApi\n */\nexport function createComponentFactory<C>(typeOrOptions: Type<C> | SpectatorOptions<C>): SpectatorFactory<C> {\n  const options = isType(typeOrOptions)\n    ? getSpectatorDefaultOptions<C>({ component: typeOrOptions })\n    : getSpectatorDefaultOptions(typeOrOptions);\n\n  const moduleMetadata = initialSpectatorModule<C>(options);\n\n  beforeEach(\n    waitForAsync(() => {\n      addMatchers(customMatchers);\n      TestBed.configureTestingModule(moduleMetadata).overrideModule(BrowserDynamicTestingModule, {\n        set: {\n          entryComponents: moduleMetadata.entryComponents\n        }\n      });\n\n      overrideModules(options);\n\n      overrideComponentIfProviderOverridesSpecified(options);\n\n      TestBed.compileComponents();\n    })\n  );\n\n  return (overrides?: SpectatorOverrides<C>) => {\n    const defaults: SpectatorOverrides<C> = { props: {}, detectChanges: true, providers: [] };\n    const { detectChanges, props, providers } = { ...defaults, ...overrides };\n\n    if (providers && providers.length) {\n      providers.forEach((provider: Provider) => {\n        TestBed.overrideProvider((provider as any).provide, provider as any);\n      });\n    }\n\n    const spectator = createSpectator(options, props);\n\n    if (options.detectChanges && detectChanges) {\n      spectator.detectChanges();\n    }\n\n    return spectator;\n  };\n}\n\nfunction createSpectator<C>(options: Required<SpectatorOptions<C>>, props?: Partial<C>): Spectator<C> {\n  const fixture = TestBed.createComponent(options.component);\n  const debugElement = fixture.debugElement;\n\n  const component = setProps(fixture.componentInstance, props);\n\n  return new Spectator(fixture, debugElement, component, debugElement.nativeElement);\n}\n","import { DebugElement, Type } from '@angular/core';\nimport { ComponentFixture } from '@angular/core/testing';\n\nimport { DOMSelector } from '../dom-selectors';\nimport { getChildren, setProps } from '../internals/query';\nimport { Spectator } from '../spectator/spectator';\nimport { Token } from '../token';\nimport { isString, QueryOptions, QueryType } from '../types';\n\nimport { HostComponent } from './host-component';\n\n/**\n * @publicApi\n */\nexport class SpectatorHost<C, H = HostComponent> extends Spectator<C> {\n  constructor(\n    public hostComponent: H,\n    public hostDebugElement: DebugElement,\n    public hostElement: Element,\n    public hostFixture: ComponentFixture<any>,\n    public debugElement: DebugElement,\n    componentInstance: C,\n    public element: HTMLElement\n  ) {\n    super(hostFixture, debugElement, componentInstance, element);\n  }\n\n  public queryHost<R extends Element>(selector: string | DOMSelector, options?: { root: boolean }): R | null;\n  public queryHost<R>(directive: Type<R>): R | null;\n  public queryHost<R>(directiveOrSelector: Type<any> | string, options: { read: Token<R> }): R | null;\n  public queryHost<R>(directiveOrSelector: QueryType, options?: QueryOptions<R>): R | Element | null {\n    if ((options || {}).root && isString(directiveOrSelector)) {\n      return document.querySelector(directiveOrSelector);\n    }\n\n    return getChildren<R>(this.hostDebugElement)(directiveOrSelector, options)[0] || null;\n  }\n\n  public queryHostAll<R extends Element>(selector: string | DOMSelector, options?: { root: boolean }): R[];\n  public queryHostAll<R>(directive: Type<R>): R[];\n  public queryHostAll<R>(directiveOrSelector: Type<any> | string, options: { read: Token<R> }): R[];\n  public queryHostAll<R>(directiveOrSelector: QueryType, options?: QueryOptions<R>): R[] | Element[] {\n    if ((options || {}).root && isString(directiveOrSelector)) {\n      return Array.from(document.querySelectorAll(directiveOrSelector));\n    }\n\n    return getChildren<R>(this.hostDebugElement)(directiveOrSelector, options);\n  }\n\n  public setHostInput<K extends keyof H>(input: Partial<H>): void;\n  public setHostInput<K extends keyof H>(input: K, inputValue: H[K]): void;\n  public setHostInput(input: any, value?: any): void {\n    setProps(this.hostComponent, input, value, false);\n    this.detectChanges();\n  }\n}\n","import { DebugNode, Predicate, Type } from '@angular/core';\n\n// TODO (dirkluijk): remove after upgrading to Angular 8.2\n// see: https://github.com/angular/angular/commit/10a1e1974b816ebb979dc10586b160ee07ad8356\nexport function nodeByDirective(type: Type<any>): Predicate<DebugNode> {\n  return debugNode => debugNode.providerTokens.includes(type);\n}\n","import { ModuleMetadata } from '../base/initial-module';\nimport { initialSpectatorModule } from '../spectator/initial-module';\n\nimport { SpectatorHostOptions } from './options';\n\n/**\n * @internal\n */\nexport function initialSpectatorWithHostModule<C, H>(options: Required<SpectatorHostOptions<C, H>>): ModuleMetadata {\n  const moduleMetadata = initialSpectatorModule<C>(options);\n\n  moduleMetadata.declarations.push(options.host);\n\n  return moduleMetadata;\n}\n","import { Component, NgModule } from '@angular/core';\n\n@Component({\n  template: ''\n})\nexport class HostComponent {}\n\n/*\n  This is an unused module to resolve the ng build error:\n    'Cannot determine the module for class HostComponent'\n\n  Reference: https://github.com/angular/issues/13590\n*/\n@NgModule({\n  declarations: [HostComponent]\n})\nexport class HostModule {}\n","import { Type } from '@angular/core';\n\nimport { merge } from '../internals/merge';\nimport { getSpectatorDefaultOptions, SpectatorOptions } from '../spectator/options';\nimport { OptionalsRequired } from '../types';\n\nimport { HostComponent } from './host-component';\n\n/**\n * @publicApi\n */\nexport interface SpectatorHostOptions<C, H> extends SpectatorOptions<C> {\n  host?: Type<H>;\n  template?: string;\n}\n\nconst defaultSpectatorHostOptions: OptionalsRequired<SpectatorHostOptions<any, any>> = {\n  ...getSpectatorDefaultOptions<any>(),\n  host: HostComponent,\n  template: ''\n};\n\n/**\n * @internal\n */\nexport function getSpectatorHostDefaultOptions<C, H>(overrides?: SpectatorHostOptions<C, H>): Required<SpectatorHostOptions<C, H>> {\n  return merge(defaultSpectatorHostOptions, overrides);\n}\n","import { Provider, Type } from '@angular/core';\nimport { TestBed, waitForAsync } from '@angular/core/testing';\nimport { By } from '@angular/platform-browser';\nimport { BrowserDynamicTestingModule } from '@angular/platform-browser-dynamic/testing';\n\nimport { setProps } from '../internals/query';\nimport * as customMatchers from '../matchers';\nimport { overrideComponentIfProviderOverridesSpecified, overrideModules, SpectatorOverrides } from '../spectator/create-factory';\nimport { addMatchers } from '../core';\nimport { isType } from '../types';\nimport { nodeByDirective } from '../internals/node-by-directive';\n\nimport { HostComponent } from './host-component';\nimport { initialSpectatorWithHostModule } from './initial-module';\nimport { getSpectatorHostDefaultOptions, SpectatorHostOptions } from './options';\nimport { SpectatorHost } from './spectator-host';\n\n/**\n * @publicApi\n */\nexport type SpectatorHostFactory<C, H> = <HP>(\n  template: string,\n  overrides?: SpectatorHostOverrides<C, H, HP>\n) => SpectatorHost<C, H & (HostComponent extends H ? HP : unknown)>;\n\n/**\n * @publicApi\n */\nexport type PresetSpectatorHostFactory<C, H> = <HP>(\n  template?: string,\n  overrides?: SpectatorHostOverrides<C, H, HP>\n) => SpectatorHost<C, H & (HostComponent extends H ? HP : unknown)>;\n\n/**\n * @publicApi\n */\nexport interface SpectatorHostOverrides<C, H, HP> extends SpectatorOverrides<C> {\n  hostProps?: HostComponent extends H ? HP : Partial<H>;\n}\n\n/**\n * @publicApi\n */\nexport function createHostFactory<C, H = HostComponent>(\n  options: SpectatorHostOptions<C, H> & { template: string }\n): PresetSpectatorHostFactory<C, H>;\n/**\n * @publicApi\n */\nexport function createHostFactory<C, H = HostComponent>(typeOrOptions: Type<C> | SpectatorHostOptions<C, H>): SpectatorHostFactory<C, H>;\nexport function createHostFactory<C, H = HostComponent>(typeOrOptions: Type<C> | SpectatorHostOptions<C, H>): SpectatorHostFactory<C, H> {\n  const options = isType(typeOrOptions)\n    ? getSpectatorHostDefaultOptions<C, H>({ component: typeOrOptions })\n    : getSpectatorHostDefaultOptions(typeOrOptions);\n\n  const moduleMetadata = initialSpectatorWithHostModule<C, H>(options);\n\n  beforeEach(\n    waitForAsync(() => {\n      addMatchers(customMatchers);\n      TestBed.configureTestingModule(moduleMetadata);\n\n      overrideModules(options);\n\n      overrideComponentIfProviderOverridesSpecified(options);\n    })\n  );\n\n  return <HP>(template?: string, overrides?: SpectatorHostOverrides<C, H, HP>) => {\n    const defaults: SpectatorHostOverrides<C, H, HP> = { props: {}, hostProps: {} as any, detectChanges: true, providers: [] };\n    const { detectChanges, props, hostProps, providers } = { ...defaults, ...overrides };\n\n    if (providers && providers.length) {\n      providers.forEach((provider: Provider) => {\n        TestBed.overrideProvider((provider as any).provide, provider as any);\n      });\n    }\n\n    TestBed.overrideModule(BrowserDynamicTestingModule, {\n      set: {\n        entryComponents: moduleMetadata.entryComponents\n      }\n    }).overrideComponent(options.host, {\n      set: { template: template || options.template }\n    });\n\n    const spectator = createSpectatorHost(options, props, hostProps);\n\n    if (options.detectChanges && detectChanges) {\n      spectator.detectChanges();\n    }\n\n    return spectator;\n  };\n}\n\nfunction createSpectatorHost<C, H, HP>(\n  options: Required<SpectatorHostOptions<C, H>>,\n  props?: Partial<C>,\n  hostProps?: HP\n): SpectatorHost<C, H & HP> {\n  const hostFixture = TestBed.createComponent(options.host);\n  const debugElement = hostFixture.debugElement.query(By.directive(options.component)) || hostFixture.debugElement;\n  const debugNode = hostFixture.debugElement.queryAllNodes(nodeByDirective(options.component))[0];\n\n  if (!debugNode) {\n    throw new Error(`Cannot find component/directive ${options.component} in host template 😔`);\n  }\n\n  const hostComponent = setProps(hostFixture.componentInstance, hostProps);\n  const component = setProps(debugNode.injector.get(options.component), props);\n\n  return new SpectatorHost(\n    hostComponent,\n    hostFixture.debugElement,\n    hostFixture.nativeElement,\n    hostFixture,\n    debugElement,\n    component,\n    debugElement.nativeElement\n  );\n}\n","import { DebugElement, InjectionToken, Type, AbstractType } from '@angular/core';\nimport { ComponentFixture } from '@angular/core/testing';\n\nimport { setProps } from '../internals/query';\nimport { Token } from '../token';\nimport { DomSpectator } from '../base/dom-spectator';\nimport { SpyObject } from '../mock';\nimport { HostComponent } from '../spectator-host/host-component';\n\n/**\n * @publicApi\n */\nexport class SpectatorDirective<D, H = HostComponent> extends DomSpectator<D> {\n  constructor(\n    public hostComponent: H,\n    public fixture: ComponentFixture<any>,\n    public debugElement: DebugElement,\n    protected instance: D,\n    public element: Element\n  ) {\n    super(fixture, debugElement, instance, element);\n  }\n\n  public get directive(): D {\n    return this.instance;\n  }\n\n  public inject<T>(token: Token<T>, fromDirectiveInjector: boolean = false): SpyObject<T> {\n    if (fromDirectiveInjector) {\n      return this.debugElement.injector.get(token) as SpyObject<T>;\n    }\n\n    return super.inject(token);\n  }\n\n  public setHostInput<K extends keyof H>(input: Partial<H>): void;\n  public setHostInput<K extends keyof H>(input: K, inputValue: H[K]): void;\n  public setHostInput(input: any, value?: any): void {\n    setProps(this.hostComponent, input, value, false);\n    this.detectChanges();\n  }\n}\n","import { NO_ERRORS_SCHEMA } from '@angular/core';\n\nimport { initialModule, ModuleMetadata } from '../base/initial-module';\nimport { SpectatorDirectiveOptions } from './options';\n\n/**\n * @internal\n */\nexport function initialSpectatorDirectiveModule<D, H>(options: Required<SpectatorDirectiveOptions<D, H>>): ModuleMetadata {\n  const moduleMetadata = initialModule(options);\n\n  if (options.declareDirective) {\n    moduleMetadata.declarations.push(options.directive);\n  }\n  moduleMetadata.declarations.push(options.host);\n\n  moduleMetadata.schemas = [options.shallow ? NO_ERRORS_SCHEMA : options.schemas || []];\n\n  return moduleMetadata;\n}\n","import { Provider, Type } from '@angular/core';\n\nimport { BaseSpectatorOptions, getDefaultBaseOptions } from '../base/options';\nimport { merge } from '../internals/merge';\nimport { HostComponent } from '../spectator-host/host-component';\nimport { OptionalsRequired } from '../types';\n\n/**\n * @publicApi\n */\nexport interface SpectatorDirectiveOptions<D, H> extends BaseSpectatorOptions {\n  directive: Type<D>;\n  shallow?: boolean;\n  detectChanges?: boolean;\n  host?: Type<H>;\n  template?: string;\n  directiveProviders?: Provider[];\n  directiveMocks?: Type<any>[];\n  declareDirective?: boolean;\n}\n\nconst defaultSpectatorRoutingOptions: OptionalsRequired<SpectatorDirectiveOptions<any, any>> = {\n  ...getDefaultBaseOptions(),\n  host: HostComponent,\n  template: '',\n  shallow: false,\n  detectChanges: true,\n  directiveProviders: [],\n  directiveMocks: [],\n  declareDirective: true\n};\n\n/**\n * @internal\n */\nexport function getSpectatorDirectiveDefaultOptions<D, H>(\n  overrides?: SpectatorDirectiveOptions<D, H>\n): Required<SpectatorDirectiveOptions<D, H>> {\n  return merge(defaultSpectatorRoutingOptions, overrides);\n}\n","import { Provider, Type } from '@angular/core';\nimport { TestBed, waitForAsync } from '@angular/core/testing';\nimport { By } from '@angular/platform-browser';\nimport { BrowserDynamicTestingModule } from '@angular/platform-browser-dynamic/testing';\n\nimport { setProps } from '../internals/query';\nimport * as customMatchers from '../matchers';\nimport { addMatchers } from '../core';\nimport { isType } from '../types';\nimport { HostComponent } from '../spectator-host/host-component';\nimport { BaseSpectatorOverrides } from '../base/options';\nimport { nodeByDirective } from '../internals/node-by-directive';\n\nimport { initialSpectatorDirectiveModule } from './initial-module';\nimport { getSpectatorDirectiveDefaultOptions, SpectatorDirectiveOptions } from './options';\nimport { SpectatorDirective } from './spectator-directive';\nimport { overrideModules } from '../spectator/create-factory';\n\n/**\n * @publicApi\n */\nexport type SpectatorDirectiveFactory<D, H> = <HP>(\n  template: string,\n  overrides?: SpectatorDirectiveOverrides<D, H, HP>\n) => SpectatorDirective<D, H & (HostComponent extends H ? HP : unknown)>;\n\n/**\n * @publicApi\n */\nexport type PresetSpectatorDirectiveFactory<D, H> = <HP>(\n  template?: string,\n  overrides?: SpectatorDirectiveOverrides<D, H, HP>\n) => SpectatorDirective<D, H & (HostComponent extends H ? HP : unknown)>;\n\n/**\n * @publicApi\n */\nexport interface SpectatorDirectiveOverrides<D, H, HP> extends BaseSpectatorOverrides {\n  detectChanges?: boolean;\n  props?: Partial<D>;\n  hostProps?: HostComponent extends H ? HP : Partial<H>;\n  directiveProviders?: Provider[];\n}\n\n/**\n * @publicApi\n */\nexport function createDirectiveFactory<D, H = HostComponent>(\n  options: SpectatorDirectiveOptions<D, H> & { template: string }\n): PresetSpectatorDirectiveFactory<D, H>;\n/**\n * @publicApi\n */\nexport function createDirectiveFactory<D, H = HostComponent>(\n  typeOrOptions: Type<D> | SpectatorDirectiveOptions<D, H>\n): SpectatorDirectiveFactory<D, H>;\nexport function createDirectiveFactory<D, H = HostComponent>(\n  typeOrOptions: Type<D> | SpectatorDirectiveOptions<D, H>\n): SpectatorDirectiveFactory<D, H> {\n  const options = isType(typeOrOptions)\n    ? getSpectatorDirectiveDefaultOptions<D, H>({ directive: typeOrOptions })\n    : getSpectatorDirectiveDefaultOptions(typeOrOptions);\n\n  const moduleMetadata = initialSpectatorDirectiveModule<D, H>(options);\n\n  beforeEach(\n    waitForAsync(() => {\n      addMatchers(customMatchers);\n      TestBed.configureTestingModule(moduleMetadata);\n      overrideModules(options);\n    })\n  );\n\n  return <HP>(template?: string, overrides?: SpectatorDirectiveOverrides<D, H, HP>) => {\n    const defaults: SpectatorDirectiveOverrides<D, H, HP> = {\n      props: {},\n      hostProps: {} as any,\n      detectChanges: true,\n      providers: []\n    };\n    const { detectChanges, props, hostProps, providers } = { ...defaults, ...overrides };\n\n    if (providers && providers.length) {\n      providers.forEach((provider: Provider) => {\n        TestBed.overrideProvider((provider as any).provide, provider as any);\n      });\n    }\n\n    TestBed.overrideModule(BrowserDynamicTestingModule, {\n      set: {\n        entryComponents: moduleMetadata.entryComponents\n      }\n    }).overrideComponent(options.host, {\n      set: { template: template || options.template }\n    });\n\n    if (options.directiveProviders.length || options.directiveMocks.length) {\n      TestBed.overrideDirective(options.directive, {\n        set: { providers: [...options.directiveProviders, ...options.directiveMocks.map(p => options.mockProvider(p))] }\n      });\n    }\n\n    const spectator = createSpectatorDirective(options, props, hostProps);\n\n    if (options.detectChanges && detectChanges) {\n      spectator.detectChanges();\n    }\n\n    return spectator;\n  };\n}\n\nfunction createSpectatorDirective<D, H, HP>(\n  options: Required<SpectatorDirectiveOptions<D, H>>,\n  props?: Partial<D>,\n  hostProps?: HP\n): SpectatorDirective<D, H & HP> {\n  const hostFixture = TestBed.createComponent(options.host);\n  const debugElement = hostFixture.debugElement.query(By.directive(options.directive)) || hostFixture.debugElement;\n  const debugNode = hostFixture.debugElement.queryAllNodes(nodeByDirective(options.directive))[0];\n\n  if (!debugNode) {\n    throw new Error(`Cannot find directive ${options.directive} in host template 😔`);\n  }\n\n  const hostComponent = setProps(hostFixture.componentInstance, hostProps);\n  const directive = setProps(debugNode.injector.get(options.directive), props);\n\n  return new SpectatorDirective(hostComponent, hostFixture, hostFixture.debugElement, directive, debugElement.nativeElement);\n}\n","import { BaseSpectator } from '../base/base-spectator';\n\n/**\n * @publicApi\n */\nexport class SpectatorService<S> extends BaseSpectator {\n  constructor(public service: S) {\n    super();\n  }\n}\n","import { initialModule, ModuleMetadata } from '../base/initial-module';\n\nimport { SpectatorServiceOptions } from './options';\n\n/**\n * @internal\n */\nexport function initialServiceModule<S>(options: Required<SpectatorServiceOptions<S>>): ModuleMetadata {\n  const moduleMetadata = initialModule(options);\n\n  moduleMetadata.providers.push(options.service);\n\n  return moduleMetadata;\n}\n","import { Type } from '@angular/core';\n\nimport { getDefaultBaseOptions, BaseSpectatorOptions } from '../base/options';\nimport { merge } from '../internals/merge';\nimport { OptionalsRequired } from '../types';\n\nexport interface SpectatorServiceOptions<S = any> extends BaseSpectatorOptions {\n  service: Type<S>;\n}\n\nconst defaultServiceOptions: OptionalsRequired<SpectatorServiceOptions> = {\n  ...getDefaultBaseOptions()\n};\n\n/**\n * @internal\n */\nexport function getDefaultServiceOptions<S>(overrides: SpectatorServiceOptions<S>): Required<SpectatorServiceOptions<S>> {\n  return merge(defaultServiceOptions, overrides) as Required<SpectatorServiceOptions<S>>;\n}\n","import { Provider, Type } from '@angular/core';\nimport { TestBed, TestBedStatic } from '@angular/core/testing';\n\nimport { BaseSpectatorOverrides } from '../base/options';\nimport { isType, doesServiceImplementsOnDestroy } from '../types';\n\nimport { initialServiceModule } from './initial-module';\nimport { getDefaultServiceOptions, SpectatorServiceOptions } from './options';\nimport { SpectatorService } from './spectator-service';\nimport { overrideModules } from '../spectator/create-factory';\n\n/**\n * @publicApi\n */\nexport type SpectatorServiceFactory<S> = (overrides?: SpectatorServiceOverrides<S>) => SpectatorService<S>;\n\n/**\n * @publicApi\n */\n// tslint:disable-next-line:no-empty-interface\nexport interface SpectatorServiceOverrides<S> extends BaseSpectatorOverrides {}\n\n/**\n * @publicApi\n */\nexport function createServiceFactory<S>(typeOrOptions: Type<S> | SpectatorServiceOptions<S>): SpectatorServiceFactory<S> {\n  const service = isType(typeOrOptions) ? typeOrOptions : typeOrOptions.service;\n  const options = isType(typeOrOptions) ? getDefaultServiceOptions<S>({ service }) : getDefaultServiceOptions(typeOrOptions);\n\n  const moduleMetadata = initialServiceModule(options);\n\n  beforeEach(() => {\n    TestBed.configureTestingModule(moduleMetadata);\n    overrideModules(options);\n  });\n\n  afterEach(() => {\n    const testedService = (<any>TestBed).inject\n      ? (<{ inject<T>(token: Type<T>, notFoundValue?: T): T } & TestBedStatic>TestBed).inject<S>(service)\n      : TestBed.get(service);\n\n    if (doesServiceImplementsOnDestroy(testedService)) {\n      // tslint:disable-next-line:no-life-cycle-call\n      testedService.ngOnDestroy();\n    }\n  });\n\n  return (overrides?: SpectatorServiceOverrides<S>) => {\n    const defaults: SpectatorServiceOverrides<S> = { providers: [] };\n    const { providers } = { ...defaults, ...overrides };\n\n    if (providers && providers.length) {\n      providers.forEach((provider: Provider) => {\n        TestBed.overrideProvider((provider as any).provide, provider as any);\n      });\n    }\n\n    return new SpectatorService<S>(TestBed.inject ? TestBed.inject(service) : TestBed.get(service));\n  };\n}\n","import { Router, Event } from '@angular/router';\n\nexport abstract class RouterStub extends Router {\n  public abstract emitRouterEvent(event: Event): void;\n}\n\nexport function isRouterStub(router: Router): router is RouterStub {\n  return 'emitRouterEvent' in router;\n}\n","import { DebugElement } from '@angular/core';\nimport { ComponentFixture } from '@angular/core/testing';\nimport { Event, Router, UrlSegment } from '@angular/router';\n\nimport { Spectator } from '../spectator/spectator';\n\nimport { ActivatedRouteStub } from './activated-route-stub';\nimport { RouteOptions } from './route-options';\nimport { isRouterStub } from './router-stub';\n\n/**\n * @publicApi\n */\nexport class SpectatorRouting<C> extends Spectator<C> {\n  constructor(\n    fixture: ComponentFixture<any>,\n    debugElement: DebugElement,\n    instance: C,\n    public readonly router: Router,\n    public readonly activatedRouteStub?: ActivatedRouteStub\n  ) {\n    super(fixture, debugElement, instance, debugElement.nativeElement);\n  }\n\n  /**\n   * Simulates a route navigation by updating the Params, QueryParams and Data observable streams.\n   */\n  public triggerNavigation(options?: RouteOptions): void {\n    if (!this.checkStubPresent()) {\n      return;\n    }\n\n    if (options && options.params) {\n      this.activatedRouteStub.setParams(options.params);\n    }\n\n    if (options && options.queryParams) {\n      this.activatedRouteStub.setQueryParams(options.queryParams);\n    }\n\n    if (options && options.data) {\n      this.activatedRouteStub.setAllData(options.data);\n    }\n\n    if (options && options.fragment) {\n      this.activatedRouteStub.setFragment(options.fragment);\n    }\n\n    this.triggerNavigationAndUpdate();\n  }\n\n  /**\n   * Updates the route params and triggers a route navigation.\n   */\n  public setRouteParam(name: string, value: string): void {\n    if (this.checkStubPresent()) {\n      this.activatedRouteStub.setParam(name, value);\n      this.triggerNavigationAndUpdate();\n    }\n  }\n\n  /**\n   * Updates the route query params and triggers a route navigation.\n   */\n  public setRouteQueryParam(name: string, value: string): void {\n    if (this.checkStubPresent()) {\n      this.activatedRouteStub.setQueryParam(name, value);\n      this.triggerNavigationAndUpdate();\n    }\n  }\n\n  /**\n   * Updates the route data and triggers a route navigation.\n   */\n  public setRouteData(name: string, value: string): void {\n    if (this.checkStubPresent()) {\n      this.activatedRouteStub.setData(name, value);\n      this.triggerNavigationAndUpdate();\n    }\n  }\n\n  /**\n   * Updates the route fragment and triggers a route navigation.\n   */\n  public setRouteFragment(fragment: string | null): void {\n    if (this.checkStubPresent()) {\n      this.activatedRouteStub.setFragment(fragment);\n      this.triggerNavigationAndUpdate();\n    }\n  }\n\n  /**\n   * Updates the route url and triggers a route navigation.\n   */\n  public setRouteUrl(url: UrlSegment[]): void {\n    if (this.checkStubPresent()) {\n      this.activatedRouteStub.setUrl(url);\n      this.triggerNavigationAndUpdate();\n    }\n  }\n\n  /**\n   * Emits a router event\n   */\n  public emitRouterEvent(event: Event): void {\n    if (!isRouterStub(this.router)) {\n      // tslint:disable-next-line:no-console\n      console.warn(\n        'No stub for Router present. Set Spectator option \"stubsEnabled\" to true if you want to use this ' +\n          'helper, or use Router navigation to trigger events.'\n      );\n\n      return;\n    }\n\n    this.router.emitRouterEvent(event);\n  }\n\n  private triggerNavigationAndUpdate(): void {\n    this.activatedRouteStub!.triggerNavigation();\n    this.detectChanges();\n  }\n\n  private checkStubPresent(): this is { readonly activatedRouteStub: ActivatedRouteStub } {\n    if (!this.activatedRouteStub) {\n      // tslint:disable-next-line:no-console\n      console.warn(\n        'No stub for ActivatedRoute present. Set Spectator option \"stubsEnabled\" to true if you want to use this ' +\n          'helper, or use Router to trigger navigation.'\n      );\n\n      return false;\n    }\n\n    return true;\n  }\n}\n","import { convertToParamMap, ActivatedRoute, ActivatedRouteSnapshot, Data, Params, ParamMap, UrlSegment } from '@angular/router';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { RouteOptions } from './route-options';\n\n/**\n * @publicApi\n *\n * Utility class for stubbing ActivatedRoute of @angular/router\n */\nexport class ActivatedRouteStub extends ActivatedRoute {\n  private testParams: Params = {};\n  private testQueryParams: Params = {};\n  private testData: Data = {};\n  private testFragment: string | null = null;\n  private testUrl: UrlSegment[] = [];\n  private testRoot: ActivatedRouteStub | null = null;\n  private testParent: ActivatedRouteStub | null = null;\n  private testFirstChild: ActivatedRouteStub | null = null;\n  private testChildren: ActivatedRouteStub[] | null = null;\n\n  private readonly paramsSubject = new ReplaySubject<Params>(1);\n  private readonly queryParamsSubject = new ReplaySubject<Params>(1);\n  private readonly dataSubject = new ReplaySubject<Data>(1);\n  private readonly fragmentSubject = new ReplaySubject<string | null>(1);\n  private readonly urlSubject = new ReplaySubject<UrlSegment[]>(1);\n\n  constructor(options?: RouteOptions) {\n    super();\n\n    if (options) {\n      this.testParams = options.params || {};\n      this.testQueryParams = options.queryParams || {};\n      this.testData = options.data || {};\n      this.testFragment = options.fragment || null;\n      this.testUrl = options.url || [];\n      this.testRoot = options.root || null;\n      this.testParent = options.parent || null;\n      this.testFirstChild = options.firstChild || null;\n      this.testChildren = options.children || null;\n    }\n\n    this.params = this.paramsSubject.asObservable();\n    this.queryParams = this.queryParamsSubject.asObservable();\n    this.data = this.dataSubject.asObservable();\n    this.fragment = this.fragmentSubject.asObservable() as Observable<string>;\n    this.url = this.urlSubject.asObservable() as Observable<UrlSegment[]>;\n\n    this.snapshot = this.buildSnapshot();\n\n    this.triggerNavigation();\n  }\n\n  public get paramMap(): Observable<ParamMap> {\n    return this.paramsSubject.asObservable().pipe(map(params => convertToParamMap(params)));\n  }\n\n  public snapshot: ActivatedRouteSnapshot;\n\n  public setParams(params: Params): void {\n    this.testParams = params;\n    this.snapshot = this.buildSnapshot();\n  }\n\n  public setParam(name: string, value: string): void {\n    this.testParams = { ...this.testParams, [name]: value };\n    this.snapshot = this.buildSnapshot();\n  }\n\n  public setQueryParams(queryParams: Params): void {\n    this.testQueryParams = queryParams;\n    this.snapshot = this.buildSnapshot();\n  }\n\n  public setQueryParam(name: string, value: string): void {\n    this.testQueryParams = { ...this.testQueryParams, [name]: value };\n    this.snapshot = this.buildSnapshot();\n  }\n\n  public setAllData(data: Data): void {\n    this.testData = data;\n    this.snapshot = this.buildSnapshot();\n  }\n\n  public setData(name: string, value: string): void {\n    this.testData = { ...this.testData, [name]: value };\n    this.snapshot = this.buildSnapshot();\n  }\n\n  public setFragment(fragment: string | null): void {\n    this.testFragment = fragment;\n    this.snapshot = this.buildSnapshot();\n  }\n\n  public setUrl(url: UrlSegment[]): void {\n    this.testUrl = url;\n    this.snapshot = this.buildSnapshot();\n  }\n\n  public get root(): ActivatedRouteStub {\n    return this.testRoot || this;\n  }\n\n  public get parent(): ActivatedRouteStub | null {\n    return this.testParent || null;\n  }\n\n  public get children(): ActivatedRouteStub[] {\n    return this.testChildren || [this];\n  }\n\n  public get firstChild(): ActivatedRouteStub | null {\n    return this.testFirstChild || null;\n  }\n\n  /**\n   * Simulates a route navigation by updating the Params, QueryParams and Data observable streams.\n   */\n  public triggerNavigation(): void {\n    this.paramsSubject.next(this.testParams);\n    this.queryParamsSubject.next(this.testQueryParams);\n    this.dataSubject.next(this.testData);\n    this.fragmentSubject.next(this.testFragment);\n    this.urlSubject.next(this.testUrl);\n  }\n\n  public toString(): string {\n    return 'activatedRouteStub';\n  }\n\n  private buildSnapshot(): ActivatedRouteSnapshot {\n    const snapshot = new ActivatedRouteSnapshot();\n\n    snapshot.params = this.testParams;\n    snapshot.queryParams = this.testQueryParams;\n    snapshot.data = this.testData;\n    snapshot.fragment = this.testFragment!;\n    snapshot.url = this.testUrl;\n\n    return snapshot;\n  }\n}\n","import { Directive, HostListener, Input, NgModule } from '@angular/core';\nimport { RouterLink } from '@angular/router';\n\n// tslint:disable\n\n@Directive({\n  selector: '[routerLink]',\n  providers: [\n    {\n      provide: RouterLink,\n      useExisting: RouterLinkDirectiveStub\n    }\n  ]\n})\nexport class RouterLinkDirectiveStub {\n  @Input() routerLink: any;\n\n  navigatedTo: any = null;\n\n  @HostListener('click')\n  onClick(): boolean {\n    this.navigatedTo = this.routerLink;\n\n    return true;\n  }\n}\n\n/*\n  This is an unused module to resolve the ng build error:\n    'Cannot determine the module for class RouterLinkDirectiveStub'\n\n  Reference: https://github.com/angular/issues/13590\n*/\n@NgModule({\n  declarations: [RouterLinkDirectiveStub]\n})\nexport class RouterLinkDirectiveStubModule {}\n","import { ActivatedRoute, Event, Router } from '@angular/router';\nimport { RouterTestingModule } from '@angular/router/testing';\nimport { Subject } from 'rxjs';\n\nimport { ModuleMetadata } from '../base/initial-module';\nimport { initialSpectatorModule } from '../spectator/initial-module';\n\nimport { ActivatedRouteStub } from './activated-route-stub';\nimport { SpectatorRoutingOptions } from './options';\nimport { RouterLinkDirectiveStub } from './router-link-stub';\nimport { RouterStub } from './router-stub';\n\n/**\n * @internal\n */\nexport function initialRoutingModule<S>(options: Required<SpectatorRoutingOptions<S>>): ModuleMetadata {\n  const moduleMetadata = initialSpectatorModule(options);\n\n  if (options.mockRouterLinks && options.stubsEnabled) {\n    moduleMetadata.declarations.push(RouterLinkDirectiveStub);\n  }\n\n  if (options.stubsEnabled) {\n    moduleMetadata.providers.push(\n      options.mockProvider(RouterStub, {\n        events: new Subject<Event>(),\n        emitRouterEvent(event: Event): void {\n          this.events.next(event);\n        }\n      }),\n      {\n        provide: Router,\n        useExisting: RouterStub\n      }\n    );\n\n    moduleMetadata.providers.push(\n      {\n        provide: ActivatedRouteStub,\n        useValue: new ActivatedRouteStub({\n          params: options.params,\n          queryParams: options.queryParams,\n          data: options.data\n        })\n      },\n      {\n        provide: ActivatedRoute,\n        useExisting: ActivatedRouteStub\n      }\n    );\n  } else {\n    moduleMetadata.imports.push(RouterTestingModule.withRoutes(options.routes));\n  }\n\n  return moduleMetadata;\n}\n","import { Routes } from '@angular/router';\n\nimport { merge } from '../internals/merge';\nimport { getSpectatorDefaultOptions, SpectatorOptions } from '../spectator/options';\nimport { OptionalsRequired } from '../types';\n\nimport { RouteOptions } from './route-options';\n\nexport type SpectatorRoutingOptions<C> = SpectatorOptions<C> &\n  RouteOptions & {\n    mockRouterLinks?: boolean;\n    stubsEnabled?: boolean;\n    routes?: Routes;\n  };\n\nconst defaultRoutingOptions: OptionalsRequired<SpectatorRoutingOptions<any>> = {\n  ...getSpectatorDefaultOptions(),\n  params: {},\n  queryParams: {},\n  data: {},\n  fragment: null,\n  mockRouterLinks: true,\n  stubsEnabled: true,\n  routes: [],\n  url: [],\n  root: null,\n  parent: null,\n  children: null,\n  firstChild: null\n};\n\n/**\n * @internal\n */\nexport function getRoutingDefaultOptions<S>(overrides: SpectatorRoutingOptions<S>): Required<SpectatorRoutingOptions<S>> {\n  return merge(defaultRoutingOptions, overrides);\n}\n","import { Provider, Type, NgZone } from '@angular/core';\nimport { TestBed, waitForAsync } from '@angular/core/testing';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { setProps } from '../internals/query';\nimport * as customMatchers from '../matchers';\nimport { SpectatorOverrides, overrideComponentIfProviderOverridesSpecified, overrideModules } from '../spectator/create-factory';\nimport { addMatchers } from '../core';\nimport { isType } from '../types';\n\nimport { ActivatedRouteStub } from './activated-route-stub';\nimport { initialRoutingModule } from './initial-module';\nimport { getRoutingDefaultOptions, SpectatorRoutingOptions } from './options';\nimport { RouteOptions } from './route-options';\nimport { SpectatorRouting } from './spectator-routing';\nimport { SpyObject } from '../mock';\n\n/**\n * @publicApi\n */\nexport type SpectatorRoutingOverrides<C> = SpectatorOverrides<C> & RouteOptions;\n\n/**\n * @publicApi\n */\nexport type SpectatorRoutingFactory<C> = (options?: SpectatorRoutingOverrides<C>) => SpectatorRouting<C>;\n\n/**\n * @publicApi\n */\nexport function createRoutingFactory<C>(typeOrOptions: Type<C> | SpectatorRoutingOptions<C>): SpectatorRoutingFactory<C> {\n  const options = isType(typeOrOptions)\n    ? getRoutingDefaultOptions<C>({ component: typeOrOptions })\n    : getRoutingDefaultOptions(typeOrOptions);\n\n  const moduleMetadata = initialRoutingModule<C>(options);\n\n  beforeEach(\n    waitForAsync(() => {\n      addMatchers(customMatchers);\n      TestBed.configureTestingModule(moduleMetadata);\n\n      overrideModules(options);\n\n      overrideComponentIfProviderOverridesSpecified(options);\n\n      TestBed.compileComponents();\n    })\n  );\n\n  return (overrides?: SpectatorRoutingOverrides<C>) => {\n    const defaults: SpectatorRoutingOverrides<C> = {\n      props: {},\n      detectChanges: true,\n      providers: []\n    };\n\n    const { detectChanges, props, providers } = { ...defaults, ...overrides };\n\n    if (providers && providers.length) {\n      providers.forEach((provider: Provider) => {\n        TestBed.overrideProvider((provider as any).provide, provider as any);\n      });\n    }\n\n    const { params, queryParams, data, fragment, url, root, parent, children, firstChild } = { ...options, ...overrides };\n\n    TestBed.overrideProvider(ActivatedRoute, {\n      useValue: new ActivatedRouteStub({ params, queryParams, data, fragment, url, root, parent, children, firstChild })\n    });\n    const ngZone = (<any>TestBed).inject ? TestBed.inject(NgZone) : TestBed.get(NgZone);\n\n    return ngZone.run(() => {\n      const spectator = createSpectatorRouting(options, props);\n\n      spectator.router.initialNavigation();\n\n      if (options.detectChanges && detectChanges) {\n        spectator.detectChanges();\n      }\n\n      return spectator;\n    });\n  };\n}\n\nfunction createSpectatorRouting<C>(options: Required<SpectatorRoutingOptions<C>>, props?: Partial<C>): SpectatorRouting<C> {\n  const fixture = TestBed.createComponent(options.component);\n  const debugElement = fixture.debugElement;\n\n  const component = setProps(fixture.componentInstance, props);\n\n  /**\n   * Back compatibility, angular under 9 version doesnt have a inject function\n   */\n  if (!TestBed.inject) {\n    return new SpectatorRouting(fixture, debugElement, component, TestBed.get(Router), TestBed.get(ActivatedRoute));\n  }\n\n  return new SpectatorRouting(\n    fixture,\n    debugElement,\n    component,\n    TestBed.inject(Router),\n    TestBed.inject(ActivatedRoute) as SpyObject<ActivatedRouteStub>\n  );\n}\n","import { HttpClient } from '@angular/common/http';\nimport { HttpTestingController, TestRequest } from '@angular/common/http/testing';\n\nimport { BaseSpectator } from '../base/base-spectator';\n\n/**\n * @publicApi\n */\nexport enum HttpMethod {\n  GET = 'GET',\n  POST = 'POST',\n  DELETE = 'DELETE',\n  PUT = 'PUT',\n  PATCH = 'PATCH',\n  HEAD = 'HEAD',\n  JSONP = 'JSONP',\n  OPTIONS = 'OPTIONS'\n}\n\nexport interface HttpExpect {\n  url: string;\n  method: HttpMethod;\n}\n\n/**\n * @publicApi\n */\nexport class SpectatorHttp<S> extends BaseSpectator {\n  constructor(public service: S, public httpClient: HttpClient, public controller: HttpTestingController) {\n    super();\n\n    // small workaround to prevent issues if destructuring SpectatorHttp, which was common in Spectator 3\n    // remove in v5?\n    this.expectOne = this.expectOne.bind(this);\n    this.expectConcurrent = this.expectConcurrent.bind(this);\n  }\n\n  public expectOne(url: string, method: HttpMethod): TestRequest {\n    expect(true).toBe(true); // workaround to avoid `Spec has no expectations` https://github.com/NetanelBasal/spectator/issues/75\n\n    const req = this.controller.expectOne({\n      url,\n      method\n    });\n\n    // assert that there are no outstanding requests.\n    this.controller.verify();\n\n    return req;\n  }\n\n  public expectConcurrent(expectations: HttpExpect[]): TestRequest[] {\n    const requests = expectations.map((expectation: HttpExpect) => {\n      return this.controller.expectOne({\n        url: expectation.url,\n        method: expectation.method\n      });\n    });\n\n    this.controller.verify();\n\n    return requests;\n  }\n\n  public flushAll(requests: TestRequest[], args: any[]): void {\n    requests.forEach((request: TestRequest, idx: number) => {\n      request.flush(args[idx]);\n    });\n  }\n}\n","import { HttpClientTestingModule } from '@angular/common/http/testing';\n\nimport { initialModule, ModuleMetadata } from '../base/initial-module';\n\nimport { SpectatorHttpOptions } from './options';\n\n/**\n * @internal\n */\nexport function initialHttpModule<S>(options: Required<SpectatorHttpOptions<S>>): ModuleMetadata {\n  const moduleMetadata = initialModule(options);\n\n  moduleMetadata.providers.push(options.service);\n  moduleMetadata.imports.push(HttpClientTestingModule);\n\n  return moduleMetadata;\n}\n","import { Type } from '@angular/core';\n\nimport { getDefaultBaseOptions, BaseSpectatorOptions } from '../base/options';\nimport { merge } from '../internals/merge';\nimport { OptionalsRequired } from '../types';\n\nexport interface SpectatorHttpOptions<S> extends BaseSpectatorOptions {\n  service: Type<S>;\n}\n\nconst defaultHttpOptions: OptionalsRequired<SpectatorHttpOptions<any>> = {\n  ...getDefaultBaseOptions()\n};\n\n/**\n * @internal\n */\nexport function getDefaultHttpOptions<S>(overrides: SpectatorHttpOptions<S>): Required<SpectatorHttpOptions<S>> {\n  return merge(defaultHttpOptions, overrides);\n}\n","import { HttpClient } from '@angular/common/http';\nimport { HttpTestingController } from '@angular/common/http/testing';\nimport { Provider, Type } from '@angular/core';\nimport { TestBed } from '@angular/core/testing';\n\nimport { BaseSpectatorOverrides } from '../base/options';\nimport { isType } from '../types';\n\nimport { initialHttpModule } from './initial-module';\nimport { getDefaultHttpOptions, SpectatorHttpOptions } from './options';\nimport { SpectatorHttp } from './spectator-http';\nimport { overrideModules } from '../spectator/create-factory';\n\n/**\n * @publicApi\n */\nexport type SpectatorHttpFactory<S> = (overrides?: CreateHttpOverrides<S>) => SpectatorHttp<S>;\n\n/**\n * @publicApi\n */\n// tslint:disable-next-line:no-empty-interface\nexport interface CreateHttpOverrides<S> extends BaseSpectatorOverrides {}\n\n/**\n * @publicApi\n */\nexport function createHttpFactory<S>(typeOrOptions: Type<S> | SpectatorHttpOptions<S>): SpectatorHttpFactory<S> {\n  const service = isType(typeOrOptions) ? typeOrOptions : typeOrOptions.service;\n  const options = isType(typeOrOptions) ? getDefaultHttpOptions<S>({ service }) : getDefaultHttpOptions(typeOrOptions);\n  const moduleMetadata = initialHttpModule(options);\n\n  beforeEach(() => {\n    TestBed.configureTestingModule(moduleMetadata);\n    overrideModules(options);\n  });\n\n  afterEach(() => {\n    if (TestBed.inject) {\n      TestBed.inject(HttpTestingController).verify();\n    } else {\n      TestBed.get(HttpTestingController).verify();\n    }\n  });\n\n  return (overrides?: CreateHttpOverrides<S>) => {\n    const defaults: CreateHttpOverrides<S> = { providers: [] };\n    const { providers } = { ...defaults, ...overrides };\n\n    if (providers && providers.length) {\n      providers.forEach((provider: Provider) => {\n        TestBed.overrideProvider((provider as any).provide, provider as any);\n      });\n    }\n\n    /**\n     * Back compatibility, angular under 9 version doesnt have a inject function\n     */\n    if (!TestBed.inject) {\n      return new SpectatorHttp<S>(TestBed.get(service), TestBed.get(HttpClient), TestBed.get(HttpTestingController));\n    }\n\n    return new SpectatorHttp<S>(TestBed.inject(service), TestBed.inject(HttpClient), TestBed.inject(HttpTestingController));\n  };\n}\n","import { DebugElement } from '@angular/core';\nimport { ComponentFixture } from '@angular/core/testing';\n\nimport { setProps } from '../internals/query';\nimport { BaseSpectator } from '../base/base-spectator';\nimport { HostComponent } from '../spectator-host/host-component';\n\n/**\n * @publicApi\n */\nexport class SpectatorPipe<P, H = HostComponent> extends BaseSpectator {\n  constructor(public hostComponent: H, public fixture: ComponentFixture<any>, public debugElement: DebugElement, public element: Element) {\n    super();\n  }\n\n  public detectChanges(): void {\n    this.fixture.detectChanges();\n  }\n\n  public setHostInput<K extends keyof H>(input: Partial<H>): void;\n  public setHostInput<K extends keyof H>(input: K, inputValue: H[K]): void;\n  public setHostInput(input: any, value?: any): void {\n    setProps(this.hostComponent, input, value, false);\n    this.detectChanges();\n  }\n}\n","import { initialModule, ModuleMetadata } from '../base/initial-module';\n\nimport { SpectatorPipeOptions } from './options';\n\n/**\n * @internal\n */\nexport function initialSpectatorPipeModule<D, H>(options: Required<SpectatorPipeOptions<D, H>>): ModuleMetadata {\n  const moduleMetadata = initialModule(options);\n\n  moduleMetadata.declarations.push(options.pipe);\n  moduleMetadata.declarations.push(options.host);\n\n  return moduleMetadata;\n}\n","import { Type } from '@angular/core';\n\nimport { merge } from '../internals/merge';\nimport { OptionalsRequired } from '../types';\nimport { BaseSpectatorOptions, getDefaultBaseOptions } from '../base/options';\nimport { HostComponent } from '../spectator-host/host-component';\n\n/**\n * @publicApi\n */\nexport interface SpectatorPipeOptions<P, H> extends BaseSpectatorOptions {\n  pipe: Type<P>;\n  host?: Type<H>;\n  detectChanges?: boolean;\n  template?: string;\n}\n\nconst defaultSpectatorPipeOptions: OptionalsRequired<SpectatorPipeOptions<any, any>> = {\n  ...getDefaultBaseOptions(),\n  host: HostComponent,\n  detectChanges: true,\n  template: ''\n};\n\n/**\n * @internal\n */\nexport function getSpectatorPipeDefaultOptions<P, H>(overrides?: SpectatorPipeOptions<P, H>): Required<SpectatorPipeOptions<P, H>> {\n  return merge(defaultSpectatorPipeOptions, overrides);\n}\n","import { Provider, Type } from '@angular/core';\nimport { TestBed, waitForAsync } from '@angular/core/testing';\nimport { BrowserDynamicTestingModule } from '@angular/platform-browser-dynamic/testing';\n\nimport { setProps } from '../internals/query';\nimport * as customMatchers from '../matchers';\nimport { BaseSpectatorOverrides } from '../base/options';\nimport { addMatchers } from '../core';\nimport { isType } from '../types';\nimport { HostComponent } from '../spectator-host/host-component';\n\nimport { initialSpectatorPipeModule } from './initial-module';\nimport { getSpectatorPipeDefaultOptions, SpectatorPipeOptions } from './options';\nimport { SpectatorPipe } from './spectator-pipe';\nimport { overrideModules } from '../spectator/create-factory';\n\n/**\n * @publicApi\n */\nexport type SpectatorPipeFactory<P, H> = <HP>(\n  templateOrOverrides?: string | SpectatorPipeOverrides<H, HP>,\n  overrides?: SpectatorPipeOverrides<H, HP>\n) => SpectatorPipe<P, H & (HostComponent extends H ? HP : unknown)>;\n\n/**\n * @publicApi\n */\nexport interface SpectatorPipeOverrides<H, HP> extends BaseSpectatorOverrides {\n  detectChanges?: boolean;\n  hostProps?: HostComponent extends H ? HP : Partial<H>;\n}\n\n/**\n * @publicApi\n */\nexport function createPipeFactory<P, H = HostComponent>(typeOrOptions: Type<P> | SpectatorPipeOptions<P, H>): SpectatorPipeFactory<P, H> {\n  const options = isType(typeOrOptions)\n    ? getSpectatorPipeDefaultOptions<P, H>({ pipe: typeOrOptions })\n    : getSpectatorPipeDefaultOptions(typeOrOptions);\n\n  const moduleMetadata = initialSpectatorPipeModule<P, H>(options);\n\n  beforeEach(\n    waitForAsync(() => {\n      addMatchers(customMatchers);\n      TestBed.configureTestingModule(moduleMetadata);\n      overrideModules(options);\n    })\n  );\n\n  return <HP>(templateOrOverrides?: string | SpectatorPipeOverrides<H, HP>, overrides?: SpectatorPipeOverrides<H, HP>) => {\n    const defaults: SpectatorPipeOverrides<H, HP> = {\n      hostProps: {} as any,\n      detectChanges: true,\n      providers: []\n    };\n    const resolvedOverrides = typeof templateOrOverrides === 'object' ? templateOrOverrides : overrides;\n    const { detectChanges, hostProps, providers } = { ...defaults, ...resolvedOverrides };\n    const template = typeof templateOrOverrides === 'string' ? templateOrOverrides : options.template;\n\n    if (providers && providers.length) {\n      providers.forEach((provider: Provider) => {\n        TestBed.overrideProvider((provider as any).provide, provider as any);\n      });\n    }\n\n    if (template) {\n      TestBed.overrideModule(BrowserDynamicTestingModule, {\n        set: {\n          entryComponents: moduleMetadata.entryComponents\n        }\n      }).overrideComponent(options.host, {\n        set: { template }\n      });\n    }\n\n    const spectator = createSpectatorPipe(options, hostProps);\n\n    if (options.detectChanges && detectChanges) {\n      spectator.detectChanges();\n    }\n\n    return spectator;\n  };\n}\n\nfunction createSpectatorPipe<P, H, HP>(options: Required<SpectatorPipeOptions<P, H>>, hostProps?: HP): SpectatorPipe<P, H & HP> {\n  const hostFixture = TestBed.createComponent(options.host);\n  const debugElement = hostFixture.debugElement;\n\n  const hostComponent = setProps(hostFixture.componentInstance, hostProps);\n\n  return new SpectatorPipe(hostComponent, hostFixture, hostFixture.debugElement, debugElement.nativeElement);\n}\n","import { Component, EventEmitter, Directive } from '@angular/core';\n\nexport function MockComponentDeprecated(options: Component): Component {\n  const metadata: Component = {\n    selector: options.selector,\n    template: options.template || '',\n    inputs: options.inputs,\n    outputs: options.outputs || [],\n    exportAs: options.exportAs || ''\n  };\n\n  class Mock {}\n\n  (metadata as any).outputs.forEach(method => {\n    Mock.prototype[method] = new EventEmitter<any>();\n  });\n\n  return Component(metadata)(Mock as any);\n}\n\nexport function MockDirectiveDeprecated(options: Directive): Directive {\n  const metadata: Directive = {\n    selector: options.selector,\n    inputs: options.inputs,\n    outputs: options.outputs || [],\n    exportAs: options.exportAs || ''\n  };\n\n  class Mock {}\n\n  (metadata as any).outputs.forEach(method => {\n    Mock.prototype[method] = new EventEmitter<any>();\n  });\n\n  return Directive(metadata)(Mock as any);\n}\n","/// <reference path=\"./lib/matchers-types.ts\" />\nexport { Spectator } from './lib/spectator/spectator';\nexport { SpectatorOptions } from './lib/spectator/options';\nexport { createComponentFactory, SpectatorFactory, SpectatorOverrides } from './lib/spectator/create-factory';\nexport { initialSpectatorModule } from './lib/spectator/initial-module';\n\nexport { SpectatorHost } from './lib/spectator-host/spectator-host';\nexport { SpectatorHostOptions } from './lib/spectator-host/options';\nexport { createHostFactory, SpectatorHostFactory, SpectatorHostOverrides } from './lib/spectator-host/create-factory';\nexport { initialSpectatorWithHostModule } from './lib/spectator-host/initial-module';\nexport { HostComponent, HostModule } from './lib/spectator-host/host-component';\n\nexport { SpectatorDirective } from './lib/spectator-directive/spectator-directive';\nexport { SpectatorDirectiveOptions } from './lib/spectator-directive/options';\nexport { createDirectiveFactory, SpectatorDirectiveFactory, SpectatorDirectiveOverrides } from './lib/spectator-directive/create-factory';\nexport { initialSpectatorDirectiveModule } from './lib/spectator-directive/initial-module';\n\nexport { SpectatorService } from './lib/spectator-service/spectator-service';\nexport { SpectatorServiceOptions } from './lib/spectator-service/options';\nexport { SpectatorServiceFactory, createServiceFactory, SpectatorServiceOverrides } from './lib/spectator-service/create-factory';\n\nexport { SpectatorRouting } from './lib/spectator-routing/spectator-routing';\nexport { SpectatorRoutingOptions } from './lib/spectator-routing/options';\nexport { SpectatorRoutingFactory, createRoutingFactory, SpectatorRoutingOverrides } from './lib/spectator-routing/create-factory';\nexport { ActivatedRouteStub } from './lib/spectator-routing/activated-route-stub';\n\nexport { SpectatorHttp, HttpMethod } from './lib/spectator-http/spectator-http';\nexport { SpectatorHttpOptions } from './lib/spectator-http/options';\nexport { SpectatorHttpFactory, createHttpFactory, CreateHttpOverrides } from './lib/spectator-http/create-factory';\n\nexport { SpectatorPipe } from './lib/spectator-pipe/spectator-pipe';\nexport { SpectatorPipeOptions } from './lib/spectator-pipe/options';\nexport { createPipeFactory, SpectatorPipeFactory, SpectatorPipeOverrides } from './lib/spectator-pipe/create-factory';\nexport { initialSpectatorPipeModule } from './lib/spectator-pipe/initial-module';\n\nexport * from './lib/dom-selectors';\nexport * from './lib/matchers';\nexport * from './lib/mock';\nexport * from './lib/token';\nexport * from './lib/types';\nexport { typeInElement } from './lib/type-in-element';\nexport { defineGlobalsInjections } from './lib/globals-injections';\nexport { dispatchEvent, dispatchFakeEvent, dispatchKeyboardEvent, dispatchMouseEvent, dispatchTouchEvent } from './lib/dispatch-events';\nexport { createFakeEvent, createKeyboardEvent, createMouseEvent, createTouchEvent } from './lib/event-creators';\nexport { MockComponentDeprecated, MockDirectiveDeprecated } from './lib/deprecated';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n\nexport {BaseSpectator as ɵb} from './lib/base/base-spectator';\nexport {DomSpectator as ɵa} from './lib/base/dom-spectator';\nexport {RouteOptions as ɵc} from './lib/spectator-routing/route-options';"]}