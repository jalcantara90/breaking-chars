{"ast":null,"code":"import { statusColor } from './../../models/character.model';\nimport { switchMap, tap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"./../../+state/character-facade.service\";\nimport * as i3 from \"@angular/material/button\";\nimport * as i4 from \"@angular/material/icon\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@ngx-translate/core\";\nimport * as i7 from \"@angular/material/chips\";\n\nfunction CharacterComponent_div_6_mat_chip_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-chip\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ocupation_r3 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ocupation_r3);\n  }\n}\n\nfunction CharacterComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 4);\n    i0.ɵɵelement(1, \"img\", 5);\n    i0.ɵɵelementStart(2, \"div\", 6);\n    i0.ɵɵelementStart(3, \"div\", 7);\n    i0.ɵɵelementStart(4, \"div\");\n    i0.ɵɵelementStart(5, \"span\", 8);\n    i0.ɵɵtext(6, \"character.name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"span\", 9);\n    i0.ɵɵtext(8, \":\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"p\", 10);\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"div\");\n    i0.ɵɵelementStart(12, \"span\", 8);\n    i0.ɵɵtext(13, \"character.nickname\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"span\", 9);\n    i0.ɵɵtext(15, \":\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"p\", 10);\n    i0.ɵɵtext(17);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"div\", 7);\n    i0.ɵɵelementStart(19, \"span\");\n    i0.ɵɵtext(20);\n    i0.ɵɵpipe(21, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(22, \"div\", 7);\n    i0.ɵɵelementStart(23, \"span\");\n    i0.ɵɵtext(24);\n    i0.ɵɵpipe(25, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(26, \"mat-chip-list\");\n    i0.ɵɵtemplate(27, CharacterComponent_div_6_mat_chip_27_Template, 2, 1, \"mat-chip\", 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(28, \"div\", 7);\n    i0.ɵɵelementStart(29, \"span\");\n    i0.ɵɵtext(30);\n    i0.ɵɵpipe(31, \"translate\");\n    i0.ɵɵelementStart(32, \"mat-chip\", 12);\n    i0.ɵɵtext(33);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const character_r1 = ctx.ngIf;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"src\", character_r1.img, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(9);\n    i0.ɵɵtextInterpolate(character_r1.name);\n    i0.ɵɵadvance(7);\n    i0.ɵɵtextInterpolate(character_r1.nickname);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(21, 9, \"character.birthday\") + \": \" + character_r1.birthday);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(25, 11, \"character.occupation\") + \": \", \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", character_r1.occupation);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(31, 13, \"character.status\") + \": \", \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"color\", ctx_r0.characterStatusChipColor(character_r1.status));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", character_r1.status, \" \");\n  }\n}\n\nconst _c0 = function () {\n  return [\"/\"];\n};\n\nexport class CharacterComponent {\n  constructor(router, charactersFacadeService) {\n    this.router = router;\n    this.charactersFacadeService = charactersFacadeService;\n  }\n\n  ngOnInit() {\n    this.character$ = this.router.params.pipe(switchMap(({\n      id\n    }) => this.charactersFacadeService.getCharacter(id).pipe(tap(character => {\n      if (!(character === null || character === void 0 ? void 0 : character.char_id)) {\n        this.charactersFacadeService.loadCharacterById(id);\n      }\n    }))));\n  }\n\n  characterStatusChipColor(state) {\n    console.log(statusColor.get(state));\n    return statusColor.get(state);\n  }\n\n}\n\nCharacterComponent.ɵfac = function CharacterComponent_Factory(t) {\n  return new (t || CharacterComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.CharactersFacadeService));\n};\n\nCharacterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CharacterComponent,\n  selectors: [[\"bc-character\"]],\n  decls: 8,\n  vars: 8,\n  consts: [[1, \"character\"], [\"mat-raised-button\", \"\", 1, \"mb-3\", 3, \"routerLink\"], [\"aria-hidden\", \"false\", \"aria-label\", \"come back icon\"], [\"class\", \"character-grid\", 4, \"ngIf\"], [1, \"character-grid\"], [\"alt\", \"\", 1, \"character-grid__image\", 3, \"src\"], [1, \"character-grid__info\"], [1, \"character-grid__info__block\", \"mb-3\"], [\"translate\", \"\", 1, \"character-grid__info__block__label\"], [1, \"mr-1\"], [1, \"character-grid__info__block__data\"], [4, \"ngFor\", \"ngForOf\"], [\"selected\", \"\", 3, \"color\"]],\n  template: function CharacterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelementStart(1, \"button\", 1);\n      i0.ɵɵelementStart(2, \"mat-icon\", 2);\n      i0.ɵɵtext(3, \"arrow_back\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(4);\n      i0.ɵɵpipe(5, \"translate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(6, CharacterComponent_div_6_Template, 34, 15, \"div\", 3);\n      i0.ɵɵpipe(7, \"async\");\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(7, _c0));\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(5, 3, \"returnToCharacters\"), \" \");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(7, 5, ctx.character$));\n    }\n  },\n  directives: [i3.MatButton, i1.RouterLink, i4.MatIcon, i5.NgIf, i6.TranslateDirective, i7.MatChipList, i5.NgForOf, i7.MatChip],\n  pipes: [i6.TranslatePipe, i5.AsyncPipe],\n  styles: [\".character[_ngcontent-%COMP%] {\\n  min-height: 80vh;\\n}\\n.character-grid[_ngcontent-%COMP%] {\\n  display: grid;\\n  grid-template-columns: minmax(300px, 1fr) 1fr;\\n  grid-gap: 1rem;\\n  gap: 1rem;\\n}\\n.character-grid__image[_ngcontent-%COMP%] {\\n  width: 100%;\\n  border-radius: var(--border-radius);\\n}\\n.character-grid__info__block[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: flex-start;\\n  align-items: center;\\n  font-size: 1.2rem;\\n}\\n.character-grid__info__block[_ngcontent-%COMP%]   div[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n}\\n.character-grid__info__block__label[_ngcontent-%COMP%] {\\n  font-weight: bold;\\n}\\n.character-grid__info__block__data[_ngcontent-%COMP%] {\\n  margin: 0;\\n}\\n.character-grid__info__block__data[_ngcontent-%COMP%]::first-letter {\\n  color: var(--bb-brand);\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNoYXJhY3Rlci5jb21wb25lbnQuc2NzcyIsIi4uLy4uLy4uLy4uL3N0eWxlcy9fbWl4aW5ncy5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBO0VBQ0UsZ0JBQUE7QUFERjtBQUdFO0VBQ0UsYUFBQTtFQUNBLDZDQUFBO0VBQ0EsY0FBQTtFQUFBLFNBQUE7QUFESjtBQUdJO0VBQ0UsV0FBQTtFQUNBLG1DQUFBO0FBRE47QUFNTTtFQUNFLGFBQUE7RUFDQSwyQkFBQTtFQUNBLG1CQUFBO0VBQ0EsaUJBQUE7QUFKUjtBQU1RO0VBQ0UsYUFBQTtFQUNBLG1CQUFBO0FBSlY7QUFPUTtFQUNFLGlCQUFBO0FBTFY7QUFRUTtFQUVFLFNBQUE7QUFQVjtBQzFCRTtFQUNFLHNCQUFBO0FENEJKIiwiZmlsZSI6ImNoYXJhY3Rlci5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIkBpbXBvcnQgJy4uLy4uLy4uLy4uL3N0eWxlcy9taXhpbmdzJztcblxuLmNoYXJhY3RlciB7XG4gIG1pbi1oZWlnaHQ6IDgwdmg7XG5cbiAgJi1ncmlkIHtcbiAgICBkaXNwbGF5OiBncmlkO1xuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogbWlubWF4KDMwMHB4LCAxZnIpIDFmcjtcbiAgICBnYXA6IDFyZW07XG5cbiAgICAmX19pbWFnZSB7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICAgIGJvcmRlci1yYWRpdXM6IHZhcigtLWJvcmRlci1yYWRpdXMpO1xuICAgIH1cblxuICAgICZfX2luZm8ge1xuXG4gICAgICAmX19ibG9jayB7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAgZm9udC1zaXplOiAxLjJyZW07XG5cbiAgICAgICAgZGl2IHtcbiAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgIH1cblxuICAgICAgICAmX19sYWJlbCB7XG4gICAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgICAgIH1cblxuICAgICAgICAmX19kYXRhIHtcbiAgICAgICAgICBAaW5jbHVkZSBmaXJzdC1sZXR0ZXItYmI7XG4gICAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICB9XG5cbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cbiIsIkBtaXhpbiBmaXJzdC1sZXR0ZXItYmIge1xuICAmOjpmaXJzdC1sZXR0ZXIge1xuICAgIGNvbG9yOiB2YXIoLS1iYi1icmFuZCk7XG4gIH1cbn1cbiJdfQ== */\"]\n});","map":{"version":3,"sources":["/Users/jalcantara/Documents/projects/breaking-chars/src/app/characters/character-detail/character/character.component.ts","/Users/jalcantara/Documents/projects/breaking-chars/src/app/characters/character-detail/character/character.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Status, statusColor } from './../../models/character.model';\nimport { Observable } from 'rxjs';\nimport { CharactersFacadeService } from './../../+state/character-facade.service';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Character, StatusType } from '../../models/character.model';\nimport { switchMap, tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'bc-character',\n  templateUrl: './character.component.html',\n  styleUrls: ['./character.component.scss']\n})\nexport class CharacterComponent implements OnInit {\n\n  character$!: Observable<Character>;\n\n  constructor(private router: ActivatedRoute, private charactersFacadeService: CharactersFacadeService) { }\n\n  ngOnInit(): void {\n    this.character$ =  this.router.params.pipe(\n      switchMap(({id}) =>\n        this.charactersFacadeService.getCharacter(id).pipe(\n          tap(character => {\n            if (!character?.char_id) {\n              this.charactersFacadeService.loadCharacterById(id);\n            }\n          })\n        )\n      ),\n    );\n  }\n\n  public characterStatusChipColor(state: StatusType) {\n    console.log(statusColor.get(state));\n    return statusColor.get(state);\n  }\n\n}\n","<div class=\"character\">\n  <button\n    class=\"mb-3\"\n    [routerLink]=\"['/']\"\n    mat-raised-button>\n    <mat-icon aria-hidden=\"false\" aria-label=\"come back icon\">arrow_back</mat-icon>\n    {{'returnToCharacters' | translate}}\n  </button>\n\n  <div class=\"character-grid\" *ngIf=\"character$ | async as character\">\n    <img  class=\"character-grid__image\" [src]=\"character.img\" alt=\"\">\n    <div class=\"character-grid__info\">\n      <div class=\"character-grid__info__block mb-3\">\n        <div>\n          <span class=\"character-grid__info__block__label\" translate>character.name</span>\n          <span class=\"mr-1\">:</span>\n          <p class=\"character-grid__info__block__data\">{{character.name}}</p>\n        </div>\n        <div>\n          <span class=\"character-grid__info__block__label\" translate>character.nickname</span>\n          <span class=\"mr-1\">:</span>\n          <p class=\"character-grid__info__block__data\">{{character.nickname}}</p>\n        </div>\n      </div>\n\n      <div class=\"character-grid__info__block mb-3\">\n        <span>{{ ('character.birthday' | translate) + ': ' + character.birthday }}</span>\n      </div>\n\n      <div class=\"character-grid__info__block mb-3\">\n        <span>\n          {{ ('character.occupation' | translate) + ': ' }}\n        </span>\n\n        <mat-chip-list>\n          <mat-chip *ngFor=\"let ocupation of character.occupation \">{{ ocupation }}</mat-chip>\n        </mat-chip-list>\n      </div>\n      <div class=\"character-grid__info__block mb-3\">\n        <span>\n          {{ ('character.status' | translate) + ': ' }}\n          <mat-chip\n            selected\n            [color]=\"characterStatusChipColor(character.status)\">\n            {{ character.status }}\n          </mat-chip>\n        </span>\n      </div>\n\n    </div>\n  </div>\n</div>\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}